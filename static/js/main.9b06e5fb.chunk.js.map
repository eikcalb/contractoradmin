{"version":3,"sources":["logo.svg","lib/config.ts","lib/storage.ts","lib/user.ts","lib/message.ts","lib/index.tsx","lib/links.ts","components/footer.tsx","components/guard.tsx","lib/theme.ts","components/toolbar.tsx","components/util.tsx","lib/firebase.ts","lib/job.ts","components/map.tsx","components/job.tsx","components/JobList.tsx","components/notification.tsx","components/payment.tsx","pages/dashboard.tsx","lib/location.ts","components/jobcreation.tsx","components/JobSideList.tsx","pages/jobs.tsx","components/auth.tsx","pages/login.tsx","pages/logout.tsx","components/messages.tsx","pages/messages.tsx","pages/register.tsx","pages/settings.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","CONFIG","name","description","version","hostname","Google","mapKey","KEYS","initializeStorage","app","a","lf","config","driver","INDEXEDDB","LOCALSTORAGE","WEBSQL","storeName","ready","localforage","User","data","raw","token","jobType","activeTask","lastPasswordChanged","this","profilePhoto","id","initiateNetworkRequest","method","referrerPolicy","headers","Authorization","response","ok","Error","json","message","jsonResponse","user","console","log","role","firstName","lastName","occupation","city","state","starRate","email","password","phoneNumber","profileBio","dateCreated","accountStatus","workHistory","educationalBackground","skills","licenses","first_name","last_name","star_rate","date_created","account_status","educational_background","phone_number","profile_photo","DUMMY_USER","Date","now","Message","content","sender","DEFAULT_SETTINGS","lastUserName","DEFAULT_APPLICATION","settings","logoutListener","loginListener","Promise","res","rej","init","getItem","appData","info","inflateUser","options","JSON","stringify","setItem","path","request","authenticated","isJson","Accept","reqObj","mode","fetch","resp","status","reauthenticate","logout","session","phone","trim","validator","isMobilePhone","startsWith","encodeURIComponent","valid","channel","body","username","code","validateLogin","success","getUser","userName","persistUser","matches","validateRegister","password_verify","isEmail","undefined","removeItem","APPLICATION_CONTEXT","createContext","VIEW_CONTEXT","setSignedIn","signedIn","setAppReady","showToolbar","show","showFooter","footer","active","inactive","Footer","ctx","useContext","className","getFullYear","to","links","AuthGuard","children","rest","viewCTX","location","useLocation","pathname","from","AuthHandler","timer","STYLES","toolbar","boxShadow","appLogoIcon","fontSize","marginRight","color","appLogoText","fontWeight","jobProgressBar","height","Toolbar","useState","showMenu","setState","style","aria-label","aria-expanded","data-target","onClick","clearTimeout","setTimeout","aria-hidden","exact","activeClassName","type","placeholder","Empty","icon","onDismiss","text","props","Loading","alignItems","padding","max","CardFragment","header","optionsElement","optionsText","onOptionsTextClick","useLoadGoogleMaps","loading","setLoading","useEffect","Loader","apiKey","libraries","load","then","firebase","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","geoFirestore","GeoFirestore","enablePersistence","synchronizeTabs","JOB_TYPES","Job","job","photos","posted_by","job_title","salary","wage","location_address","tasks","length","job_description","required_count","coordinates","GeoPoint","coords","latitude","longitude","newDoc","db","doc","photo_files","FormData","map","photo","append","apiResponse","set","jobID","delete","limit","query","where","native","orderBy","get","snap","jobs","forEach","item","address","push","resolve","callback","unsubscribe","onSnapshot","err","added","modified","removed","docChanges","change","collection","MapView","memo","title","vertical","zoom","zoomControl","mapEl","useRef","setMap","marker","setMarker","current","_mapInstance","google","maps","Map","center","lat","lng","gestureHandling","mapTypeControl","fullscreenControl","Marker","position","animation","Animation","DROP","setCenter","setPosition","width","backgroundColor","minHeight","ref","JobListItem","time","moment","toDate","whiteSpace","textOverflow","overflow","job_type","flexDirection","flex","justifyContent","src","getPhotoURL","calendar","value","JobItem","PendingJobItem","key","endTime","toMillis","date_completed","overflowX","progress","lineHeight","JobDetail","onCancel","fill","JobDetailTask","onJobCancel","borderLeft","JobDetailUser","startTime","totalTime","loadingCancel","addToast","useToasts","unix","diff","useCallback","window","confirm","cancelJob","appearance","JobReview","task","toFixed","alignSelf","disabled","borderBottom","JobList","Array","listenForActiveJobs","docs","all","v","executed_by","getExternalUser","j","NotificationItem","notification","timestamp","notif","borderRadius","getNotificationIcon","maxLines","fromNow","NotificationList","expanded","setExpanded","size","transition","DUMMY_NOTIFICATIONS","n","CurrencyFormatter","Intl","NumberFormat","currency","maximumFractionDigits","PaymentItem","payment","format","cost","payee","getPaymentDescription","PaymentList","DUMMY_PAYMENTS","p","Dashboard","marginBottom","getCurrentLocation","navigator","geolocation","getCurrentPosition","enableHighAccuracy","maximumAge","FormField","listener","autocomplete","label","onChange","readOnly","locationAutocomplete","tagifyRef","required","whitelist","tags","showBorder","containerClassName","isTextArea","maxLength","Number","MAX_SAFE_INTEGER","helpTextTop","helpTextLeft","helpTextRight","hasAddons","addon","inputRef","loadingGoogleMaps","places","Autocomplete","fields","addListener","place","getPlace","formatted_address","geometry","place_id","remove","unbindAll","event","clearInstanceListeners","autoComplete","enabled","rightKey","e","persist","target","borderRight","inputMode","FileInput","onRemovePhoto","el","files","i","multiple","accept","file","index","CreateJob","onClose","onComplete","requiredPersons","price","loadingTypes","fetchingLocation","manualAddress","setPhotos","types","useMemo","jobTypes","createRef","getJobTypes","tagify","dropdown","hide","call","onSubmit","stopPropagation","preventDefault","parse","newJob","FieldValue","serverTimestamp","parseInt","v4","accuracy","altitude","heading","altitudeAccuracy","speed","isEmpty","find","addNewJob","zIndex","filter","_","searchAlg","func","wait","timeout","immediate","args","later","callNow","debounce","regexp","RegExp","result","search","JobSideList","activeJobs","inactiveJobs","onCreateNew","activeSearchData","setActiveSearchData","inactiveSearchData","setInactiveSearchData","searchText","setSearchText","isLoading","setIsLoading","useDebouncedCallback","catch","finally","triggerSearch","overflowY","render","Jobs","showModal","selected","setActive","setInactive","dismissModal","containers","document","getElementsByClassName","removeEscapeHandler","handler","ev","addEventListener","removeEventListener","useEscapeHandler","listenForActiveAndPendingJobs","getInactiveJobs","useParams","activeMatch","useRouteMatch","strict","inactiveMatch","RegisterView","showCodeRequest","showPassword","showPasswordVerify","formState","setFormState","history","useHistory","addAdmin","margin","logo","LoginView","onSubmitCodeRequest","form","validateNumber","triggerVerification","onSubmitVerified","login","CodeRequestForm","LoginForm","intervalID","showOptions","hold","holdTimer","viewState","setView","onSubmitForm","counter","clearInterval","setInterval","pattern","minLength","Login","Logout","MessageListItem","author","profileImageURL","MessageList","alert","DUMMY_MESSAGES","m","MessageDetail","contact","Messages","Register","SettingsDetail","Settings","flexGrow","LoginAndSecurity","PaymentMethods","LegalDocuments","editEmail","isLoadingEmail","border","contentEditable","borderTop","App","setShowFooter","_showToolbar","viewContext","Provider","component","Boolean","match","ReactDOM","StrictMode","autoDismiss","placement","basename","getElementById","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.9b06e5fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { Config } from \".\";\n\nconst CONFIG: Config = {\n    name: 'Gigchasers Admin',\n    description: 'Gigchasers admin dashboard',\n    version: '1.0',\n    hostname: 'https://contractor-app-test-api.herokuapp.com/v1',\n    // hostname: 'http://localhost:3001/v1',\n    Google: {\n        mapKey: 'AIzaSyDJYsVNmPa73T-okzgJTs3UKiUReJ8iHsU'\n    }\n}\n\nexport default CONFIG","import lf from \"localforage\";\nimport { Application } from \".\";\n\nexport const KEYS = {\n    USER_SESSION: 'app.user.session',\n    REFRESH_TOKEN: 'app.user.refreshtoken',\n    APP_DATA: 'app.data'\n}\n\nexport async function initializeStorage(app: Application) {\n    lf.config({\n        driver: [\n            lf.INDEXEDDB,\n            lf.LOCALSTORAGE,\n            lf.WEBSQL\n        ],\n        name: `${app.config.name} v${app.config.version}`,\n        version: 1,\n        storeName: 'adminstore',\n        description: 'Storage for Contractor application administrative interface'\n    })\n\n    await lf.ready()\n}\n\nexport const localforage = lf\n","import { IJobHistory } from \"./job\";\nimport { IEducationHistory, ILicense } from \"./education\";\nimport { Application } from \".\";\n\nexport const DUMMY_TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdlMDFmOTBiMjRmNzAwMTcyZmRkOTQiLCJlbWFpbCI6Inp6QGdtYWlsLmNvbSIsInBob25lX251bWJlciI6IisyMzQ4MDgzODIxNzgyIiwiaWF0IjoxNjE1NjYzNDQ4fQ.nHEwobqCa4yT1z27ydwpSHPg_6s4CEp1QarlJGU1HUo\"\nexport const DUMMY_TOKEN_SECRET = \"secret\"\n\nclass AppUser {\n    id\n    role: string\n    firstName: string\n    lastName: string\n    occupation: string\n    city: string\n    state: string\n    starRate: number = 5.0\n    email: string\n    password?: string\n    phoneNumber: string\n    profilePhoto: string\n    profileBio?: string\n    dateCreated?: Date\n    accountStatus: string = \"Pending\"\n    workHistory: IJobHistory[] = []\n    educationalBackground: IEducationHistory[] = []\n    skills: string[] = []\n    licenses: ILicense[] = []\n\n    constructor(data, raw?: boolean) {\n        if (raw) {\n            this.role = data.role\n            this.firstName = data.first_name\n            this.lastName = data.last_name\n            this.occupation = data.occupation\n            this.starRate = data.star_rate\n            this.dateCreated = data.date_created\n            this.city = data.city\n            this.email = data.email\n            this.accountStatus = data.account_status\n            this.educationalBackground = data.educational_background\n            this.phoneNumber = data.phone_number\n            this.profilePhoto = data.profile_photo\n            this.state = data.state\n            this.skills = data.skills\n        } else {\n            this.role = data.role\n            this.firstName = data.firstName\n            this.lastName = data.lastName\n            this.occupation = data.occupation\n            this.starRate = data.starRate\n            this.dateCreated = data.dateCreated\n            this.city = data.city\n            this.email = data.email\n            this.accountStatus = data.accountStatus\n            this.educationalBackground = data.educationalBackground\n            this.phoneNumber = data.phoneNumber\n            this.profilePhoto = data.profilePhoto\n            this.state = data.state\n            this.skills = data.skills\n        }\n\n        this.id = data.id\n    }\n}\n\nexport class User extends AppUser {\n    get profileImageURL() {\n        return this.profilePhoto\n    }\n    token\n    jobType?: \"onsite\" | \"remote\"\n    activeTask\n    lastPasswordChanged?: number\n\n    constructor(data, raw?: boolean) {\n        super(data, raw)\n        this.token = data.token\n        this.jobType = data.jobType\n        this.activeTask = data.activeTask\n        this.lastPasswordChanged = data.lastPasswordChanged\n    }\n\n    /**\n     * \n     * @param app Application object\n     * @param id Identity of user whose detail will be fetched\n     * @param token Secret token obtained from logging into the application.\n     */\n    static async getUser(app: Application, id: string, token: string) {\n        try {\n            const response = await app.initiateNetworkRequest(`/users/${id}`, {\n                method: 'GET',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    Authorization: `Bearer ${token}`\n                },\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Failed to fetch user data!\")\n            }\n\n            const jsonResponse = await response.json()\n            const user = new User(jsonResponse, true)\n            user.id = id\n            user.token = token\n\n            return user\n\n        } catch (e) {\n            throw e\n        }\n    }\n\n    /**\n       * \n       * @param app Application object\n       * @param id Identity of user whose detail will be fetched\n       */\n    static async getExternalUser(app: Application, id: string): Promise<User> {\n        try {\n            const response = await app.initiateNetworkRequest(`/users/${id}`, {\n                method: 'GET',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }, true)\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Failed to fetch user data!\")\n            }\n\n            const jsonResponse = await response.json()\n            const user = new User(jsonResponse, true)\n            user.id = id\n\n            return user\n        } catch (e) {\n            console.log('failed to fetch user data', e)\n            return new User({})\n        }\n    }\n}\n\nexport const DUMMY_USER: User = new User({})\n\nDUMMY_USER.firstName = \"Johnathan\"\nDUMMY_USER.lastName = \"Doe\"\nDUMMY_USER.id = 'unique'\nDUMMY_USER.email = 'a@example.com'\nDUMMY_USER.profileBio = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ullam vero iure, ducimus, explicabo vel nesciunt eveniet, enim quis quos ex autem!\"\nDUMMY_USER.jobType = 'onsite'\nDUMMY_USER.phoneNumber = '080838111111'\nDUMMY_USER.starRate = 4.2\nDUMMY_USER.lastPasswordChanged = Date.now()\nDUMMY_USER.dateCreated = new Date(\"20/07/2020\")\nDUMMY_USER.skills = ['Farming', 'Poultry']\n// DUMMY_USER.profileImageURL = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTv3f3Zf2onEOPtpRtWPoRX6SWQUSpV_GBB6Q&usqp=CAU\"\n","import React from \"react\";\n\nexport class Message {\n    content\n    sender\n\n    isSameUser(message: Message) {\n        return message.sender === this.sender\n    }\n\n\n    isSameDay(){\n        \n    }\n}\n","import { createContext } from \"react\"\nimport validator from \"validator\"\nimport { IRegister } from \"../components/auth\"\nimport CONFIG from \"./config\"\nimport { initializeStorage, KEYS, localforage } from \"./storage\"\nimport { DUMMY_USER, User } from \"./user\"\nimport { Message } from \"./message\";\n\ninterface ISettings {\n    lastUserName: string\n}\n\nconst DEFAULT_SETTINGS = {\n    lastUserName: ''\n}\n\nexport class Application {\n    config: Config\n    user?: User\n    ready: Promise<boolean>\n\n    protected settings: ISettings = DEFAULT_SETTINGS\n\n    logoutListener?: () => any\n    loginListener?: () => any\n\n    constructor(config: Config) {\n        this.config = config\n        this.ready = new Promise(async (res, rej) => {\n            try {\n                await this.init()\n                res(true)\n            } catch (e) {\n                // if an error occurred during initialization, throw the error and handle within the application\n                console.log(e)\n                return rej(e)\n            }\n        })\n    }\n\n    /**\n     * Initialize application dependencies.\n     * \n     * Dependencies that fail to load should fail silently at this stage, unless required for application to function.\n     */\n    async init() {\n        await initializeStorage(this)\n\n        try {\n            const appData: ISettings | null = await localforage.getItem(KEYS.APP_DATA)\n            if (appData) {\n                this.settings = appData\n            }\n        } catch (e) {\n            console.info(e, 'No app data persisted!')\n        }\n\n        // check for existing user session\n        try {\n            await this.inflateUser()\n            // If user session exists, trigger login listener\n            if (this.loginListener) {\n                this.loginListener()\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n        return true\n    }\n\n\n    signedIn(): boolean {\n        return this.user && this.user?.token\n    }\n\n\n    async updateSettings(options: Partial<ISettings>) {\n        if (!options) {\n            throw new Error('Empty options provided!')\n        }\n        if (JSON.stringify(options) === JSON.stringify(this.settings)) {\n            return\n        }\n\n        this.settings = {\n            ...this.settings,\n            ...options\n        }\n\n        return await localforage.setItem(KEYS.APP_DATA, this.settings)\n    }\n\n    async initiateNetworkRequest(path: string, request?: RequestInit, authenticated = false, isJson = true): Promise<Response> {\n        const headers = {\n            ...request?.headers,\n            Accept: 'application/json',\n            Authorization: authenticated ? `Bearer ${this.user?.token}` : request?.headers?.['Authorization'],\n        }\n\n        if (isJson) {\n            headers['Content-Type'] = 'application/json'\n        }\n        \n        const reqObj: RequestInit = {\n            ...request,\n            referrerPolicy: 'no-referrer',\n            mode: 'cors',\n            headers\n        }\n\n        const resp = await fetch(`${this.config.hostname}${path}`, reqObj)\n        if (resp.status === 401) {\n            if (!this.user) {\n                throw new Error(\"Unauthenticated access not allowed!\")\n            }\n            // Authorization failed. This usually means the token has expired and refresh token could not be used to regenerate token\n            //\n            // Try to reauthenticate the user\n            try {\n                const { token } = await this.reauthenticate()\n                this.user.token = token\n                // since token is generated already, retry the request\n                if (reqObj && reqObj.headers && reqObj.headers['Authorization']) {\n                    reqObj.headers['Authorization'] = `Bearer ${token}`\n                }\n                return await this.initiateNetworkRequest(path, reqObj)\n            } catch (e) {\n                await this.logout()\n                throw e || new Error(\"App session expired. Login to continue!\")\n            }\n        }\n        return resp\n    }\n\n    protected async reauthenticate(): Promise<{ token: string }> {\n        // No logic to reauthenticate. Throw error, forcing user to logout.\n        throw new Error(\"Failed to authenticate user!\")\n    }\n\n    protected async inflateUser() {\n        // inflate user session\n        let session: User | null = await localforage.getItem(KEYS.USER_SESSION)\n        if (!session) throw new Error(\"No session available for user!\")\n\n        this.user = new User(session)\n        return this.user\n    }\n\n    protected async persistUser() {\n        if (!this.user) {\n            throw new Error('No user created!')\n        }\n\n        await localforage.setItem(KEYS.USER_SESSION, this.user)\n    }\n\n    async validateNumber(phone: string) {\n        if (!phone) {\n            throw new Error(\"Phone number must be provided!\")\n        }\n        phone = phone.trim()\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n\n        const response = await this.initiateNetworkRequest(`/users/phone/${encodeURIComponent(phone)}`, {\n            method: 'GET',\n        })\n\n        if (!response.ok) {\n            throw new Error((await response.json())?.message || \"Verification failed!\")\n        }\n\n        const jsonResponse = await response.json()\n        if (!jsonResponse.valid) {\n            throw new Error('Invalid phone number (ensure phone number is associated with a user)!')\n        }\n\n        return true\n    }\n\n    async triggerVerification(phone: string, channel: string = 'sms') {\n        if (!phone) {\n            throw new Error(\"Phone number must be provided!\")\n        }\n        phone = phone.trim()\n\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n\n        const response = await this.initiateNetworkRequest('/users/sms_registration', {\n            method: 'POST',\n            body: JSON.stringify({ phone_number: phone, channel })\n        })\n        if (!response.ok) {\n            throw new Error((await response.json())?.message || \"Verification failed!\")\n        }\n\n        return true\n    }\n\n    async login(username, code, password) {\n        try {\n            await this.validateLogin(username, code, password)\n\n            const response = await this.initiateNetworkRequest('/users/login', {\n                method: 'POST',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({ phone_number: username, code, password })\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Login failed!\")\n            }\n\n            const jsonResponse = await response.json()\n            if (!jsonResponse.success) {\n                throw new Error(\"Login failed!\")\n            }\n            this.user = await User.getUser(this, jsonResponse.userName, jsonResponse.token)\n            if (this.user.role !== 'admin') {\n                // TODO: Decide the kind of users that can access this webapp\n                // throw new Error(\"Authenticated access only allowed for administrators!\")\n            }\n\n            await this.persistUser()\n            if (this.loginListener) {\n                this.loginListener()\n            }\n\n            return this.user\n\n        } catch (e) {\n            throw e\n        }\n    }\n\n    protected async validateLogin(phone: string, code: string, password: string) {\n        if (!phone || !password || !code) {\n            throw new Error(\"Credentials not provided!\")\n        }\n        phone = phone.trim()\n\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n        if (!validator.matches(password, /.{6,}/i)) {\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\n        }\n        if (!validator.matches(code, /[0-9]{4}/)) {\n            throw new Error(\"Invalid code provided (provided code must have 4 digits)!\")\n        }\n    }\n\n    // TODO\n    async addAdmin(data: IRegister) {\n        try {\n            await this.validateRegister(data)\n\n            const response = await this.initiateNetworkRequest('/users/new', {\n                method: 'POST',\n                body: JSON.stringify({\n                    ...data,\n                    role: 'admin',\n                    account_status: 'pending'\n                })\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message)\n            }\n\n            const jsonResponse = await response.json()\n\n            return jsonResponse\n        } catch (e) {\n            throw e\n        }\n    }\n\n    protected async validateRegister(data: IRegister) {\n        let { email, password, first_name, last_name, password_verify, phone_number } = data\n        if (!email || !password) {\n            throw new Error(\"Credentials not provided!\")\n        }\n        if (password !== password_verify) {\n            throw new Error('Passwords do not match!')\n        }\n        email = email.trim()\n        first_name = first_name.trim()\n        last_name = last_name.trim()\n        if (!first_name || !last_name) {\n            throw new Error('Firstname and lastname must be provided!')\n        }\n        if (!email || !validator.isEmail(email)) {\n            throw new Error(\"Invalid username provided!\")\n        }\n        if (!phone_number || !validator.isMobilePhone(phone_number)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone_number.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n        if (!validator.matches(password, /.{6,}/i)) {\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\n        }\n    }\n\n\n    async logout() {\n        new Message()\n        this.user = undefined\n        await localforage.removeItem(KEYS.USER_SESSION)\n        //await localforage.removeItem(KEYS.REFRESH_TOKEN)\n        if (this.logoutListener) {\n            this.logoutListener()\n        }\n    }\n}\n\nexport const DEFAULT_APPLICATION = new Application(CONFIG)\nDEFAULT_APPLICATION.user = DUMMY_USER\n/**\n * This is the application context used within the web application.\n * \n * This context provided the application engine and is not tied to any view rendering.\n * \n * The underlying aplication object exposes the required functions and do not modify the view.\n * This underlying object is made available to all React components via the application context.\n * \n * All view rendering is managed in React.\n * \n * **VIEW RENDERING SHOULD NOT DEPEND ON ANY PROPERTY OF THIS CONTEXT**\n */\nexport const APPLICATION_CONTEXT = createContext<Application>(DEFAULT_APPLICATION)\n\n/**\n * This context is used for managing the views within the web app.\n * Activities such as loading and splashscreen are implemented using this context.\n */\nexport const VIEW_CONTEXT = createContext<{\n    setSignedIn: any,\n    signedIn: null | User,\n    setAppReady: any,\n    showToolbar: any,\n    showFooter: any\n}>({\n    setSignedIn: (signedIn) => { },\n    signedIn: null,\n    setAppReady: (ready: boolean) => { },\n    showToolbar: (show: boolean) => { },\n    showFooter: (footer) => { }\n})\n\nexport interface Config {\n    name: string\n    version: string\n    description: string\n    hostname: string\n    Google: {\n        mapKey: string\n    }\n}\n","export default {\n    register: '/register',\n    login: '/login',\n    messages: '/messages',\n    _messages: '/messages/:id?',\n    home: '/',\n    dashboard: '/dashboard',\n    invoices: '/invoices',\n    jobs: '/jobs',\n    activeJobs: '/jobs/active',\n    inactiveJobs: '/jobs/inactive',\n    _jobItem: {\n        active: '/jobs/active/:id?',\n        inactive: '/jobs/inactive/:id?'\n    },\n    privacyPolicy: '/privacyPolicy',\n    termsOfService: '/terms',\n    profile: '/profile',\n    helpCenter: '/help',\n    logout: '/logout',\n    settings: '/settings',\n    loginAndSecurity: '/settings',\n    paymentMethods: '/settings/payment',\n    additionalFeatures: '/settings/features',\n    legalDocuments: '/settings/legal'\n}","import React, { useContext } from \"react\";\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport links from '../lib/links'\nimport { Link } from \"react-router-dom\";\n\nexport function Footer() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    return (\n        <footer className='footer is-unselectable' >\n            <div className=\"content has-text-centered is-size-7-touch\">\n                <p>&copy; {ctx.config.name} {new Date().getFullYear()}. All Rights Reserved | <Link to={links.privacyPolicy}>Privacy Policy</Link> | <Link to={links.termsOfService}>Terms of Service</Link> </p>\n            </div>\n        </footer>\n    )\n}","import React, { useContext } from \"react\"\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from \"../lib\"\nimport { Redirect, Route, useLocation, useHistory, RouteProps } from \"react-router-dom\"\nimport links from \"../lib/links\"\n\n/**\n * HOC (high order component) for rendering private views only if the user is authenticated.\n * \n * @param children View to render if authenticated\n */\nexport function AuthGuard({ children, ...rest }: RouteProps) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const location = useLocation()\n\n    return (\n        <Route {...rest}>\n            {ctx.signedIn() && viewCTX.signedIn ? (\n                children\n            ) : (\n                    <Redirect to={{\n                        pathname: links.login,\n                        state: {\n                            from: location\n                        }\n                    }} />\n                )\n            }\n        </Route>\n    )\n}\n\n/**\n * HOC for rendering components based on the authenticated state of the application.\n * This HOC is used for conditionally rendering authentication views (like login pages) or redirect if the user is already authenticated.\n * \n * @param children View to render\n */\nexport function AuthHandler({ children }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const location = useLocation()\n\n    if (ctx.signedIn() && viewCTX.signedIn) {\n        const { from } = (location.state as any) || { from: { pathname: '/' } }\n        return <Redirect to={from} />\n    } else {\n        return children\n    }\n}","import React from 'react'\n\nexport const STYLES: { [key: string]: React.CSSProperties } = {\n    toolbar: {\n        boxShadow: \"-2px 2px 3px 0px #8888\",\n        // background: \"#282c34\",\n    },\n    appLogoIcon: {\n        fontSize: '2em',\n        marginRight: '.5em',\n        color: 'blue'\n    },\n    appLogoText: {\n        fontSize: '1.2em',\n        fontWeight: 'bold'\n    },\n    jobProgressBar:{\n        height:'.4em'\n    }\n}","import React, { useState, useContext, useCallback } from 'react'\nimport { STYLES } from '../lib/theme'\nimport { FaJoint, FaUser, FaContao, FaCog, FaSearch } from \"react-icons/fa\";\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\nimport { Link, NavLink } from 'react-router-dom';\nimport links from '../lib/links';\n\n\nconst AUTOHIDE_TIMEOUT = 20000\nlet timer: any\n// TODO: build your own toolbar styling.\n\nexport default function Toolbar() {\n    const [state, setState] = useState({ showMenu: false })\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const vctx = useContext(VIEW_CONTEXT)\n    const toggleMenu = () => {\n        // Clear the existing timer for closing menu and then hide/show the menu\n        clearTimeout(timer)\n        if (state.showMenu) {\n            setState({ ...state, showMenu: false })\n        } else {\n            setState({ ...state, showMenu: true })\n            timer = setTimeout(() => {\n                setState({ ...state, showMenu: false })\n            }, AUTOHIDE_TIMEOUT)\n        }\n    }\n\n    return (\n        <nav className='navbar' role='navigation' style={STYLES.toolbar} aria-label='main navigation'>\n            <div className='navbar-brand'>\n                <Link className='navbar-item' to={links.home}>\n                    <FaContao style={STYLES.appLogoIcon} />\n                    <span style={STYLES.appLogoText}>{ctx.config.name}</span>\n                </Link>\n                <a role=\"button\" className={`navbar-burger burger ${state.showMenu ? 'is-active' : ''}`} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbar\" onClick={toggleMenu}>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n            <div className={`navbar-menu ${state.showMenu ? 'is-active' : ''}`} >\n                <div className='navbar-start'>\n                    <NavLink to={links.dashboard} exact activeClassName='is-active' className='navbar-item is-tab'>Dashboard</NavLink>\n                    <NavLink to={links.messages} activeClassName='is-active' className='navbar-item is-tab'>Messages</NavLink>\n                    <NavLink to={links.invoices} activeClassName='is-active' className='navbar-item is-tab'>Invoices</NavLink>\n                    <NavLink to={links.jobs} activeClassName='is-active' className='navbar-item is-tab'>Jobs</NavLink>\n                </div>\n                <div className='navbar-end'>\n                    <div className='navbar-item'>\n                        <div className='field'>\n                            <p className='control has-icons-left'>\n                                <input className='input is-rounded' type='search' placeholder='Type to search...' />\n                                <span className='icon is-small is-left'><FaSearch className='is-size-5' /></span>\n                            </p>\n                        </div>\n                    </div>\n                    <div className='navbar-item has-dropdown is-hoverable'>\n                        <span className='navbar-link'>\n                            {`${ctx.user?.firstName} ${ctx.user?.lastName}`}\n                        </span>\n                        <div className='navbar-dropdown'>\n                            <Link to={links.profile} className='navbar-item'>Profile</Link>\n                            <Link to={links.helpCenter} className='navbar-item'>Help Center</Link>\n                            <Link to={links.logout} className='navbar-item'>Sign Out</Link>\n                        </div>\n                    </div>\n                    <div className='navbar-item'>\n                        <Link to={links.settings} className='button is-rounded is-light is-fullwidth'><FaCog /></Link>\n                    </div>\n                </div>\n            </div>\n        </nav >\n    )\n}","import React, { ReactChild, useEffect, useState, useContext } from 'react'\nimport { FaExclamationCircle } from 'react-icons/fa';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { APPLICATION_CONTEXT } from '../lib';\n\nexport function Empty({ content, icon, onDismiss, text, ...props }: { text?: string, content?: ReactChild, icon?: ReactChild, onDismiss?: any, children?: ReactChild }) {\n    return (\n        <div className='notification px-4 is-light is-uppercase is-warning has-text-centered'>\n            {!!onDismiss && <button onClick={onDismiss} className='delete'></button>}\n            {icon ? icon :\n                <FaExclamationCircle className='has-text-warning-dark is-size-4 mb-2' />\n            }\n            {props.children ?\n                props.children :\n                content ? content :\n                    <p className='block has-text-grey is-size-7'>{text || 'No data'}</p>\n            }\n        </div>\n    )\n}\n\nexport function Loading() {\n    return (\n        <section className='hero is-fullheight is-bold is-flex-centered' style={{ alignItems: 'stretch', padding: '2em' }}>\n            <div className='hero-body is-flex-centered has-text-centered'>\n                <div className='column is-4 is-12-mobile'>\n                    <div className='section px-6'>\n                        <progress className=\"progress is-small is-danger\" max=\"100\">loading</progress>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport function CardFragment({ header, optionsElement, optionsText, onOptionsTextClick, children, style }: { header: string, optionsElement?: React.ReactChild, optionsText?: any, onOptionsTextClick?: any, children?: any, style?: React.CSSProperties }) {\n    return (\n        <div className=\"card\" style={style}>\n            <header className='card-header'>\n                <p className='card-header-title'>{header}</p>\n                <p className='card-header-icon'>\n                    {optionsElement ?\n                        optionsElement :\n                        <span className='has-text-link' onClick={onOptionsTextClick}>\n                            {optionsText}\n                        </span>\n                    }\n                </p>\n            </header>\n            <div className='card-content'>\n                <div className='container is-fluid px-0'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nlet mapsLoaded = false\nexport function useLoadGoogleMaps() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [loading, setLoading] = useState(!mapsLoaded)\n\n    useEffect(() => {\n        if (loading) {\n            new Loader({\n                apiKey: ctx.config.Google.mapKey,\n                version: \"weekly\",\n                libraries: ['places']\n            }).load()\n                .then(() => setLoading(false))\n        }\n    }, [])\n\n    return loading\n}\n\n/**\n * \n * @param func Function to debounce\n * @param wait Miliseconds delay for debounce\n * @param immediate Set to true to trigger immediately and kill other attempts\n */\nexport function debounce(func, wait: number, immediate: boolean = false) {\n    var timeout;\n    return async (...args) => {\n        var later = async () => {\n            timeout = null;\n            if (!immediate) return func(...args)\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) return func(...args)\n    };\n};\n\nexport async function wait(duration = 5000) {\n    await new Promise((res) => {\n        setTimeout(res, duration)\n    })\n}\n\nexport const useEscapeHandler = (callback: any) => {\n    const handler = (ev: KeyboardEvent) => {\n        if (ev.key === 'Escape') {\n            callback()\n        }\n    }\n    window.document.addEventListener('keydown', handler)\n    return () => window.document.removeEventListener('keydown', handler)\n}","import firebase from \"firebase/app\";\n// Required for side-effects\nimport \"firebase/firestore\";\nimport { GeoFirestore } from \"geofirestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjXx1AqIQnkyKkCPh8HZKZYyiKGfiLcbc\",\n  authDomain: \"contracting-app.firebaseapp.com\",\n  databaseURL: \"https://contracting-app.firebaseio.com\",\n  projectId: \"contracting-app\",\n  storageBucket: \"contracting-app.appspot.com\",\n  messagingSenderId: \"557426956160\",\n  appId: \"1:557426956160:web:c1393a9710ed0e40151365\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore(),\n  geoFirestore = new GeoFirestore(firestore)\n\n  firestore.enablePersistence({\n    synchronizeTabs:true\n  })","import { geoFirestore } from \"./firebase\";\nimport firebase from 'firebase'\nimport { useCallback } from \"react\";\nimport { User } from \"./user\";\nimport { Application } from \".\";\n\n\nexport const JOB_MILE_RADIUS = 10\n\nconst JOB_TYPES = [\"Alarm Systems/Cameras\", \"Animal Grooming\", \"Auto Mechanic\", \"Baby Sitters/Nanny\", \"Beautician\", \"Cable/Satellite Installation\", \"Car Detailing\", \"Carpenter\", \"Carpet Cleaning\", \"Caterers\", \"Computer Repair\", \"Debris Removal\", \"Demolition\", \"Dump Truck Services\", \"Electrician\", \"Engineering\", \"Event Planner\", \"Flooring\", \"Garage Door Installation/Repair\", \"HVAC (Heating & Air Conditioning)\", \"Healthcare professionals\", \"Hot Shot Delivery & Courier Services\", \"IT Tech Support\", \"Janitorial/Maid/Cleaning Services\", \"Lawn care\", \"Masonry (Brick, Concrete)\", \"Modeling/Acting\", \"Networking Installation\", \"Painter/Finish\", \"Plumber\", \"Roof Repair\", \"Seamstress/Tailor\", \"Shipping Pallets, Containers and Custom Crate Builders\", \"Snow and Ice Removal\", \"Tow Truck and Roadside Assistance\", \"Tree Services\", \"Veterinarian Services\", \"Web Designer\", \"Window Blinds, Shades, Drapes, Curtains and Shutters\"]\n\nexport interface IJob {\n    id\n    coordinates: firebase.firestore.GeoPoint\n    date_completed: firebase.firestore.Timestamp | null\n    date_created: firebase.firestore.Timestamp\n    g: any\n    executed_by: string\n    job_title: string\n    job_description: string\n    job_type: string\n    location: {\n        coords: {\n            accuracy: number\n            altitude: number\n            altitudeAccuracy: number\n            heading: number\n            latitude: number\n            longitude: number\n            speed: number\n        }\n        timestamp\n        address\n        place_id\n        id\n    }\n    location_address: any\n    posted_by: string\n    salary: number\n    star_rate: number | null\n    status: \"available\" | \"in review\" | \"accepted\" | \"in progress\" | \"complete\"\n    tasks: { id: string, text: string }[]\n    wage: \"hr\"\n    required_count: number\n    progress?: number\n    user?: User\n}\n\nexport interface IJobHistory {\n    employer_name: string\n    employer_phone_number: string\n    employer_address: string\n    supervisor_name?: string\n    supervisor_title?: string\n    user_position_title?: string\n    date_started: Date\n    date_ended: Date\n    actual_job?: boolean\n    salary?: string\n    wage?: string\n    description?: string\n}\n\nexport class Job {\n    private static db = geoFirestore.collection('jobs')\n\n    static async getJobTypes(app: Application) {\n        return JOB_TYPES\n    }\n\n    static async addNewJob(app: Application, job, photos: File[] = []) {\n        if (!job.posted_by || !job.job_title || !job.salary || !job.wage || (!job.location && !job.location_address)) {\n            throw new Error('Complete all required fields to continue!')\n        }\n        if (job.tasks.length < 1) {\n            throw new Error('You must add at least 1 task for this job!')\n        }\n        if (job.job_title.length < 8 || job.job_description.length < 20) {\n            throw new Error(\"Kindly enter a more meaningful title and description!\")\n        }\n        if (job.required_count < 1) {\n            throw new Error(\"Provide the number of people you require for this job!\")\n        }\n        if (job.salary < 0) {\n            throw new Error(\"Salary must be more than $0!\")\n        }\n\n        job.coordinates = new firebase.firestore.GeoPoint(job.location.coords.latitude, job.location.coords.longitude)\n\n        const newDoc = Job.db.doc()\n        let photo_files = null\n\n        if (photos && photos.length > 0) {\n            // If photo is selected, add the photo\n            const body = new FormData()\n            photos.map((photo) => {\n                body.append(\"photo\", photo);\n            })\n            const apiResponse = await app.initiateNetworkRequest(`/job/upload`, {\n                method: \"POST\",\n                headers: {\n                    \"x-job-id\": newDoc.id,\n                },\n                body,\n            }, true, false)\n\n            if (!apiResponse.ok) {\n                throw new Error((await apiResponse.json()).message || \"Failed to upload job\");\n            }\n\n            photo_files = (await apiResponse.json()).data;\n        }\n\n        job.id = newDoc.id\n        return newDoc.set({ ...job, photo_files })\n    }\n\n    static async cancelJob(ctx: Application, job: IJob) {\n        if (job.status === 'complete') {\n            throw new Error('You cannot cancel a completed job!')\n        }\n\n        if (job.status === 'accepted') {\n            await ctx.initiateNetworkRequest(`users/cancelJob`, {\n                method: 'DELETE',\n                body: JSON.stringify({ jobID: job.id, role: ctx.user?.role })\n            }, true)\n        } else {\n            await Job.db.doc(job.id).delete()\n        }\n        return true\n    }\n\n    static async getInactiveJobs(ctx: Application, limit = 20) {\n        let query = Job.db.where('status', '==', 'complete')\n        // if (ctx.user?.role !== 'admin') {\n        //     query.where('posted_by', '==', ctx.user?.id)\n        // }\n        return query.native.orderBy('date_created', 'desc').limit(limit).get().then(async snap => {\n            const jobs: IJob[] = []\n            snap.forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            return Promise.resolve(jobs)\n        })\n    }\n\n    static async getActiveJobs(ctx: Application, limit = 20) {\n        let query = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"])\n        // if (ctx.user?.role !== 'admin') {\n        //     query.where('posted_by', '==', ctx.user?.id)\n        // }\n        return query.native.orderBy('date_created', 'desc').limit(limit).get().then(async snap => {\n            const jobs: IJob[] = []\n            snap.forEach(async doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            return Promise.resolve(jobs)\n        })\n    }\n\n    static listenForActiveAndPendingJobs(ctx: Application, callback, limit = 100) {\n        let query = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"])\n        // if (ctx.user?.role !== 'admin') {\n        //     query.where('posted_by', '==', ctx.user?.id)\n        // }\n        const unsubscribe = query.native.orderBy('date_created', 'desc').limit(limit).onSnapshot(async snap => {\n            const jobs: IJob[] = [];\n            (snap as firebase.firestore.QuerySnapshot).forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            callback(null, jobs)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n\n    static listenForActiveJobs(ctx: Application, callback, limit = 9) {\n        let query = Job.db.where('status', 'in', [\"in review\", \"accepted\", \"in progress\"])\n        // if (ctx.user?.role !== 'admin') {\n        //     query.where('posted_by', '==', ctx.user?.id)\n        // }\n        const unsubscribe = query.native.orderBy('date_created', 'desc').limit(limit).onSnapshot(async snap => {\n            const jobs: IJob[] = [];\n            (snap as firebase.firestore.QuerySnapshot).forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            callback(null, jobs)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n\n    static listenForActiveJobsWithChangeHandler(ctx: Application, { added, modified, removed }: {\n        added: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any,\n        modified: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any,\n        removed: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any\n    }) {\n        let query = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"])\n        // if (ctx.user?.role !== 'admin') {\n        //     query.where('posted_by', '==', ctx.user?.id)\n        // }\n        const unsubscribe = query.limit(6).onSnapshot(async snap => {\n            (snap.native as firebase.firestore.QuerySnapshot).docChanges().forEach(change => {\n                switch (change.type) {\n                    case 'added':\n                        added(change.doc)\n                        break\n                    case 'modified':\n                        modified(change.doc)\n                        break\n                    case 'removed':\n                        removed(change.doc)\n                        break\n                }\n            })\n        })\n\n        return unsubscribe\n    }\n\n    static getPhotoURL(app: Application, id) {\n        return `${app.config.hostname}/images/${id}.jpg`\n    }\n}","import React, { DetailedHTMLProps, useRef, useEffect, useContext, useState, memo, ReactNode, ReactElement, CSSProperties, useMemo } from 'react'\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport L from \"leaflet\";\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { ImSpinner } from 'react-icons/im';\nimport { useLoadGoogleMaps } from './util';\nimport { IJob } from '../lib/job';\nimport { FaMapPin } from 'react-icons/fa';\n\nexport const MapView = memo<{ job: IJob, vertical: boolean } & any>((props) => {\n    const { job: { coordinates, job_title: title }, vertical = true, zoom = 18, zoomControl = true } = props\n    const loading = useLoadGoogleMaps()\n    const mapEl = useRef<HTMLDivElement>()\n\n    const [map, setMap] = useState<google.maps.Map | null>(null)\n    const [marker, setMarker] = useState<google.maps.Marker>()\n\n    useEffect(() => {\n        if (mapEl.current && !loading) {\n            const _mapInstance = new google.maps.Map(mapEl.current, {\n                center: { lat: coordinates.latitude, lng: coordinates.longitude },\n                gestureHandling: 'none',\n                zoomControl: zoomControl,\n                zoom,\n                mapTypeControl: false,\n                fullscreenControl: true,\n            })\n            setMap(_mapInstance)\n            setMarker(new google.maps.Marker({\n                map: _mapInstance,\n                position: { lat: coordinates.latitude, lng: coordinates.longitude },\n                animation: google.maps.Animation.DROP,\n                title,\n            }))\n        }\n    }, [loading, mapEl])\n\n\n    useEffect(() => {\n        if (coordinates) {\n            map?.setCenter({ lat: coordinates.latitude, lng: coordinates.longitude })\n            marker?.setPosition({ lat: coordinates.latitude, lng: coordinates.longitude })\n        }\n    }, [coordinates])\n\n    return (\n        loading ?\n            <div {...props} className={`${props.className} is-flex is-flex-centered px-6`} style={{ width: '100%', height: '100%', backgroundColor: '#dadada', ...props?.style, }}>\n                <progress style={{ height: '0.2rem' }} className=\"progress is-small my-6 mx-6\" max=\"100\">loading</progress>\n            </div>\n            :\n            <div id='mapview' {...props} style={{ ...props?.style, width: '100%', height: '100%', backgroundColor: '#dadada', minHeight: vertical ? '50vh' : '12em', ...props?.style, }} ref={mapEl} />\n    )\n})","import moment, { unix } from 'moment'\nimport React, { useCallback, useState, useContext } from 'react'\nimport { FaExpandAlt, FaStar, FaMapMarkerAlt, FaGlobeAfrica, FaClipboardList, FaHardHat, FaCaretRight, FaArrowRight, FaChevronRight } from 'react-icons/fa'\nimport { ImSpinner } from \"react-icons/im\";\nimport { NavLink } from 'react-router-dom'\nimport { STYLES } from '../lib/theme'\nimport { DUMMY_USER, User } from '../lib/user'\nimport { IJob, Job, JOB_MILE_RADIUS } from '../lib/job'\nimport firebase from \"firebase\";\nimport { useToasts } from 'react-toast-notifications';\nimport { wait } from './util';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { MapView } from './map';\n\nexport function JobListItem({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    const time = moment(job.date_created.toDate())\n    return (\n        <div className='card'>\n            <div className='card-content'>\n                <div className='columns mb-0'>\n                    <div className='column is-6 has-text-centered-touch has-text-left'>\n                        <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_title}</p>\n                    </div>\n                    <div className='column has-text-centered-touch has-text-right'>\n                        <p>{job.location_address}</p>\n                    </div>\n\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left'>\n                        <p>{job.job_type}</p>\n                    </div>\n                </div>\n            </div>\n            <div className='card-footer'>\n                <div className='card-footer-item'>\n                    <div className='columns px-4 is-vcentered is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\n                        <div className='column is-12'>\n                            <div className='columns is-vcentered is-mobile'>\n                                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                                    <figure className='image is-flex is-32x32'>\n                                        <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                                    </figure>\n                                </div>\n                                <div className='column is-narrow'>\n                                    <div className='title is-6'>{`${job.user?.firstName} ${job.user?.lastName}`}</div>\n                                </div>\n                                <div className='column has-text-right'>\n                                    {time.calendar()}\n                                </div>\n                            </div>\n                        </div>\n                        <div className='column is-12'>\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={0} max=\"100\">{0}</progress>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport function JobItem({ job, to }: { job: IJob, to: any }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    if (job.status === 'available') {\n        return <PendingJobItem job={job} to={to} key={`pending-${job.id}`} />\n    }\n\n    const time = moment(job.date_created.toMillis())\n    let endTime\n    if (job.date_completed) endTime = moment(job.date_completed.toMillis())\n\n    return (\n        <NavLink activeClassName=\"is-active\" to={to} style={{ overflowX: 'auto' }} className={`job-item is-size-7 px-1 py-1 is-block card is-shadowless is-radiusless has-background-white`}>\n            <div className='card-content py-2 px-2'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-6 has-text-centered-touch has-text-left'>\n                            <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_type}</p>\n                        </div>\n                        <div className='column has-text-centered-touch has-text-right has-text-grey'>\n                            <p>{job.location_address}</p>\n                        </div>\n                    </div>\n                    <div className='columns is-vcentered is-mobile'>\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                            <figure className='image is-flex is-48x48'>\n                                <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                            </figure>\n                        </div>\n                        <div className='column px-0 has-text-left'>\n                            <div className='title is-7 mb-1'>{`${job.user?.firstName || 'John'} ${job.user?.lastName || \"Doe\"}`}</div>\n                            <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate}</p>\n                        </div>\n                        <div className='column has-text-grey has-text-right'>\n                            {time.calendar()}\n                        </div>\n                    </div>\n\n                </div>\n                <div className='columns mb-0 is-vcentered has-text-grey is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\n                    <div className='column is-12'>\n                        {job.progress && job.progress >= 100 ? (\n                            <p>Completed {endTime.calendar()}</p>\n                        ) :\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={job.progress || 0} max=\"100\">{job.progress}</progress>\n                        }\n                    </div>\n                </div>\n                <div className='content has-text-left has-text-grey is-flex is-flex-align-items-center'>\n                    <span className='icon has-text-info is-size-6'><FaChevronRight /></span>\n                    <span style={{ lineHeight: '2em' }}>{job.job_title}</span>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function PendingJobItem({ job, to }: { job: IJob, to: any }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    return (\n        <NavLink activeClassName=\"is-active\" to={to} style={{ overflowX: 'auto' }} className={`job-item is-size-7 px-1 py-1 is-block card is-shadowless is-radiusless has-background-white`}>\n            <div className='card-content py-2 px-2'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-6 has-text-centered-touch has-text-left'>\n                            <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_type}</p>\n                        </div>\n                        <div className='column has-text-centered-touch has-text-right has-text-grey'>\n                            <p>{job.location_address}</p>\n                        </div>\n                    </div>\n                    <div className='columns is-vcentered is-mobile'>\n                        <div className='column has-text-left'>\n                            <p className='is-size-7 is-flex is-vcentered'>\n                                <span className='icon is-size-6 has-text-info spinner'><ImSpinner /></span>\n                                <span style={{ lineHeight: '2em' }}>Pending</span>\n                            </p>\n                        </div>\n                        <div className='column has-text-right'>\n                            <p>Searching for deployee</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function JobDetail({ job, className, onCancel }: { onCancel: (job: IJob) => any, job: IJob | null, className?: string }) {\n    if (!job) {\n        return (\n            <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n                <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\n                    <span className='my-4' ><FaHardHat fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                    <p className='is-uppercase is-size-6 has-text-weight-bold'>View and manage job listings</p>\n                </div>\n            </div>\n        )\n    }\n    const time = moment(job.date_created.toMillis())\n\n    return (\n        <div className={`${className} card job-detail is-size-6`} style={{ flexDirection: 'column' }}>\n            <div className='card-content is-paddingless'>\n                <div className='level py-4 mb-0'>\n                    <div className='level-item is-size-7'>POSTED {time.calendar()}</div>\n                    <div className='level-item is-size-6 has-text-weight-bold'>{job.job_title}</div>\n                    <div className='level-item is-size-7 has-text-grey'>{job.id}</div>\n                </div>\n                <div className='container is-fluid px-0'>\n                    <div className='columns is-fullheight mx-0 my-0 is-multiline animate__animated animate__fadeIn'>\n                        <div className='column is-8-fullhd is-7-desktop is-12 px-0 pt-0'>\n                            <JobDetailTask onJobCancel={onCancel} job={job} />\n                        </div>\n\n                        {job.status === \"available\" || job.status === 'in review' ?\n                            <div style={{ borderLeft: 'solid 1px #8881' }} className='column is-4-fullhd is-5-desktop is-12 is-flex is-paddingless'>\n                                <MapView job={job} className='container pt-4 pb-0 is-flex' />\n                            </div>\n                            :\n                            <div style={{ borderLeft: 'solid 1px #8881' }} className='column is-4-fullhd is-5-desktop is-12 is-flex'>\n                                <JobDetailUser job={job} />\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function JobDetailTask({ job, onJobCancel }: { job: IJob, onJobCancel }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({ loadingCancel: false })\n    const { addToast } = useToasts()\n\n    let endTime, startTime, totalTime\n    if (job.date_completed) endTime = unix(job.date_completed.toMillis() / 1000)\n    if (job.date_created) startTime = unix(job.date_created.toMillis() / 1000)\n    if (endTime && startTime) totalTime = endTime.diff(startTime, 'h', true)\n\n    const onCancel = useCallback(async () => {\n        try {\n            const confirmed = window.confirm(\"Are you sure you want to cancel this job? If Job is accepted, it will return to the job pool. Otherwise, the job will be deleted\")\n            if (!confirmed) {\n                return\n            }\n            setState({ ...state, loadingCancel: true })\n            await Job.cancelJob(ctx, job)\n            addToast('Cancelled job successfully!', { appearance: 'success' })\n            onJobCancel(job)\n        } catch (e) {\n            addToast(e.message || 'Failed to cancel job!', { appearance: 'error' })\n        } finally {\n            setState({ ...state, loadingCancel: false })\n        }\n    }, [job, state])\n\n    return (\n        <div className='is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\n            {job.status === 'available' ?\n                <div className='section has-text-centered is-size-6'>\n                    <span className='px-4 py-4 is-flex is-flex-centered'>Searching for deployees within {JOB_MILE_RADIUS} mile radius from you</span>\n                </div>\n                :\n                job.status === 'in review' ?\n                    <JobReview job={job} />\n                    :\n                    <MapView zoom={15} zoomControl={false} vertical={false} job={job} className='container pb-0 is-flex' />\n            }\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\n                <div className='section py-2 pb-3'>\n                    <table className='table is-hoverable is-fullwidth'>\n                        <tbody className='is-flex is-flex-direction-column is-size-7'>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>TYPE</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.job_type}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>LOCATION</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.location_address}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>DESCRIPTION</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.job_description}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>PAY</td>\n                                <td style={{ flex: 2 }} className='is-flex-align-items-center is-flex has-text-left'><span>${job.salary}</span>&nbsp;<span className='has-text-grey-light'>/{job.wage}</span></td>\n                            </tr>\n                            {job.tasks && job.tasks.length > 0 ?\n                                <tr className='is-flex has-text-left'>\n                                    <td style={{ flex: 1 }} className='has-text-grey'>TASKS</td>\n                                    <td style={{ flex: 2 }} className=' has-text-left'>\n                                        {job.tasks?.map(task => <p key={task.text}>- {task.text}</p>)}\n                                    </td>\n                                </tr>\n                                : null}\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'> START</td>\n                                <td style={{ flex: 2 }} className='has-text-left'>{startTime.calendar() || `-`}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>END</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{endTime?.calendar() || `-`}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>TOTAL TIME</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{totalTime?.toFixed(2) || `-`}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                {job.progress && job.progress >= 100 ? (\n                    <button className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-end' }}>View Invoice</button>\n                ) :\n                    <button disabled={state.loadingCancel} onClick={onCancel} className={`button is-white is-uppercase is-inverted mx-4 ${state.loadingCancel ? 'is-loading' : ''}`} style={{ alignSelf: 'flex-start', color: 'white' }}>Cancel Job</button>\n                }\n            </div>\n        </div >\n    )\n}\n\nexport function JobDetailUser({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    let startTime\n    if (job.date_created) startTime = moment(job.date_created.toMillis())\n\n    return (\n        <div className='container pt-4 pb-0 is-flex' style={{ flexDirection: 'column' }} >\n            <div style={{ borderBottom: 'solid #aaa4 0.2px' }} className='columns is-vcentered'>\n                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                    <figure className='image is-80x80 is-flex'>\n                        <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                    </figure>\n                </div>\n                <div className='column'>\n                    <div className='container'>\n                        <div className='columns is-marginless is-vcentered is-mobile'>\n                            <div className='column pb-0 pl-0'>\n                                <p className='is-size-6 has-text-left has-text-weight-bold'>{`${job.user?.firstName || \"John\"} ${job.user?.lastName || 'Doe'}`}</p>\n                            </div>\n                            <div className=\"column is-narrow has-text-right has-text-info pr-0 pb-0 is-size-7\">View Profile</div>\n                        </div>\n                        <div className='content has-text-left'>\n                            <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate}\n                                {/* TODO: should option of remote or onsite be present?\n                             &nbsp;{generateUserJobType(DUMMY_USER)} \n                             */}\n                            </p>\n                            <p className='is-size-7'>{job.user?.profileBio}</p>\n                            <p className='has-text-left has-text-grey-light is-size-8'><span className='is-uppercase'>member since</span>&nbsp; {moment(job.user?.dateCreated).calendar()}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\n                <table className='table is-hoverable is-fullwidth'>\n                    <tbody className='is-size-7'>\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>CONTACT</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>{job.user?.phoneNumber}</td>\n                        </tr>\n                        {/* <tr>\n                            <td className='has-text-right'>ACTIVE TASK</td>\n                            <td className='has-text-left'>{job.user?.activeTask}</td>\n                        </tr> */}\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>START TIME</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>{startTime.calendar()}</td>\n                        </tr>\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>HIGHLIGHTED SKILLS AND LICENSES</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>\n                                {job.user?.skills && job.user.skills.length > 0 ? job.user.skills?.map(task => <p>- {task}</p>) : `-`}\n                            </td>\n\n                        </tr>\n                    </tbody>\n                </table>\n                <button className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-start' }}>Message</button>\n            </div>\n        </div>\n    )\n}\n\n\nexport function JobReview({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    let startTime\n    if (job.date_created) startTime = moment(job.date_created.toMillis())\n\n    return (\n        <div className='section pt-5 is-flex is-clipped' style={{ flexDirection: 'column' }} >\n            <div className='columns is-paddingless'>\n                <div className='content column is-narrow is-size-6 has-text-centered px-4'>\n                    <span className='is-flex is-flex-centered'>Deployee Found</span>\n                </div>\n                <div className='columns column is-vcentered'>\n                    <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                        <figure className='image is-80x80 is-flex'>\n                            <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                        </figure>\n                    </div>\n                    <div className='column'>\n                        <div className='container'>\n                            <div className='columns is-marginless is-vcentered is-mobile'>\n                                <div className='column pb-0 pl-0'>\n                                    <p className='is-size-6 has-text-left has-text-weight-bold'>{`${job.user?.firstName || \"John\"} ${job.user?.lastName || 'Doe'}`}</p>\n                                </div>\n                                <div className=\"column is-narrow has-text-right has-text-info pr-0 pb-0 is-size-7\">View Profile</div>\n                            </div>\n                            <div className='content has-text-left'>\n                                <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate}\n                                    {/* TODO: should option of remote or onsite be present?\n                             &nbsp;{generateUserJobType(DUMMY_USER)} \n                             */}\n                                </p>\n                                <p className='is-size-7'>{job.user?.profileBio}</p>\n                                <p className='has-text-left has-text-grey-light is-size-7'><span className='is-uppercase'>member since</span>&nbsp; {moment(job.user?.dateCreated).calendar()}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function generateUserJobType(user: User) {\n    switch (user.jobType) {\n        case 'onsite':\n            return <><span className='icon has-text-info'><FaMapMarkerAlt /></span> On Site</>\n        case 'remote':\n            return <><span className='icon has-text-info'><FaGlobeAfrica /></span> Remote</>\n    }\n}\n\nexport interface IJobSample {\n    user: User\n    timestamp: number\n    title: string\n    description: string\n    location: string\n    progress?: number\n    startTime?: number\n    endTime?: number\n    tasks?: string[]\n    fullLocation?: string\n    id\n}\n\nexport const DUMMY_JOBS: IJobSample[] = [\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        progress: 80,\n        tasks: [],\n        id: 'papdsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdefvzsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 99,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 20,\n        id: 'padpp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 90,\n        id: 'papdvp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        id: 'papdfp'\n    }\n]\n\nexport const DUMMY_COMPLETED: IJobSample[] = [\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n]","import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DUMMY_USER, User } from '../lib/user';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { Job, IJob } from '../lib/job';\nimport { useToasts } from 'react-toast-notifications';\nimport { JobListItem } from './job';\nimport links from '../lib/links';\n\nexport function JobList({ className }: { className?: string; }) {\n    const ctx = useContext(APPLICATION_CONTEXT);\n    const [state, setState] = useState({ jobs: new Array<IJob>(), loading: false });\n\n    const { addToast } = useToasts();\n\n    useEffect(() => {\n        setState({ ...state, loading: true });\n        const unsubscribe = Job.listenForActiveJobs(ctx, async (err, docs: IJob[]) => {\n            if (err) {\n                setState({ ...state, loading: false });\n                return addToast(err.message || 'Failed to get jobs!');\n            }\n            docs = await Promise.all(\n                docs.map(async (v) => {\n                    if (v.status !== 'available' && v.executed_by) {\n                        v.user = await User.getExternalUser(ctx, v.executed_by);\n                    }\n                    return v;\n                })\n            );\n            setState({ ...state, jobs: docs, loading: false });\n        });\n\n        return unsubscribe;\n    }, []);\n\n    return (\n        <div className={className}>\n            {state.loading ?\n                <progress className=\"progress is-small is-info my-6\" max=\"100\">loading</progress>\n                : state.jobs.map(j => (\n                    <Link key={j.id} to={`${links.activeJobs}/${j.id}`} className='column is-4-fullhd is-6-desktop is-12-touch list-item'>\n                        <JobListItem job={j} />\n                    </Link>\n                ))}\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport { FaSearch, FaMapMarkerAlt, FaCheckSquare, FaCheck, FaCaretUp, FaCaretDown } from 'react-icons/fa'\nimport moment from \"moment\";\nimport { Link, NavLink } from 'react-router-dom';\nimport { Empty } from './util';\n\nexport function NotificationItem({ notification }: { notification: INotification }) {\n    const time = moment.unix(notification.timestamp / 1000)\n    return (\n        <div className='container is-fluid is-paddingless list-item py-2' title={notification.title}>\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\n                <div className='column is-paddingless is-6 has-text-left has-text-centered-mobile  list-item-title'>\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{getNotificationIcon(notification)} {notification.title}</p>\n                </div>\n                <div className='column is-paddingless has-text-right has-text-centered-mobile list-item-subtitle'>\n                    <p style={{ maxLines: 2 }}>{time.fromNow()}</p>\n                </div>\n            </div>\n            <div className='content'>\n                <p>\n                    {notification.content}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport function getNotificationIcon(notif: INotification) {\n    switch (notif.type) {\n        case 'discovery':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaSearch /> </span>\n        case 'location':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaMapMarkerAlt /> </span>\n        case 'progress':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaCheck /> </span>\n    }\n}\n\nexport function NotificationList({ className }) {\n    const [expanded, setExpanded] = useState(true)\n\n    return (\n        <nav className={className}>\n            <div className='panel is-clipped' >\n                <div onClick={() => setExpanded(!expanded)} className='panel-heading is-size-6 has-text-left has-background-white-bis is-align-items-center is-flex is-flex-direction-row is-justify-content-space-between'>\n                    <p>Notifications</p>\n                    <button className='button is-static has-background-white is-rounded is-size-8 is-small'>\n                        {!expanded ?\n                            <FaCaretUp size={16} className={`icon has-text-black is-small`} />\n                            :\n                            <FaCaretDown size={16} className={`icon has-text-black is-small`} />}\n                    </button>\n                </div>\n                <div style={{ transition: \"all 0.500s linear\" }} className={`${!expanded ? 'is-height-0' : ''}`}>\n                    {DUMMY_NOTIFICATIONS.length > 0 ?\n                        DUMMY_NOTIFICATIONS.map(n => (\n                            <Link key={n.id} to={`/f`} className='panel-block'>\n                                <NotificationItem notification={n} />\n                            </Link>\n                        ))\n                        :\n                        <Empty text='No Notification available' />\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport interface INotification {\n    content: string\n    timestamp\n    type: 'discovery' | 'location' | 'progress'\n    title: string\n    id: string\n}\n\nconst DUMMY_NOTIFICATIONS: INotification[] = [\n    {\n        content: 'testing 123',\n        timestamp: Date.now(),\n        type: 'discovery',\n        title: 'testing notification',\n        id: '23xe'\n    },\n    {\n        content: 'testing 12',\n        timestamp: Date.now(),\n        type: 'location',\n        title: 'testing notification',\n        id: '23xe'\n    },\n    {\n        title: 'testing 1',\n        timestamp: Date.now(),\n        type: 'progress',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    },\n    {\n        title: 'testing 1',\n        timestamp: Date.now(),\n        type: 'location',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    },\n    {\n        title: 'testing 1',\n        timestamp: Date.now(),\n        type: 'discovery',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    }\n]","import React, { useState } from 'react'\nimport moment from 'moment'\nimport { FaCaretDown, FaCaretUp } from \"react-icons/fa\";\nimport { NavLink, Link } from 'react-router-dom'\nimport { Empty } from './util';\n\nconst CurrencyFormatter = Intl.NumberFormat('en-US', { currency: 'USD', style: 'currency', maximumFractionDigits: 2 })\n\nexport function PaymentItem({ payment }: { payment: IPayment }) {\n    const time = moment.unix(payment.timestamp / 1000)\n\n    return (\n        <div className='container is-fluid is-paddingless list-item py-2' title={payment.title}>\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\n                <div className='column is-paddingless is-6 has-text-left has-text-centered-mobile list-item-title'>\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{payment.title}</p>\n                </div>\n                <div className='column is-paddingless has-text-right has-text-centered-mobile list-item-subtitle'>\n                    <p>{time.fromNow()}</p>\n                </div>\n            </div>\n            <div className='content'>\n                <p>\n                    {getPaymentDescription(payment)}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport function PaymentList({ className }) {\n    const [expanded, setExpanded] = useState(true)\n\n    return (\n        <nav className={className} >\n            <div className='panel is-clipped'>\n                <div onClick={() => setExpanded(!expanded)} className='panel-heading is-size-6 has-text-left has-background-white-bis is-align-items-center is-flex is-flex-direction-row is-justify-content-space-between'>\n                    <p>Payments</p>\n                    <button className='button is-static has-background-white is-rounded is-size-8 is-small'>\n                        {!expanded ?\n                            <FaCaretUp size={16} className={`icon has-text-black is-small`} />\n                            :\n                            <FaCaretDown size={16} className={`icon has-text-black is-small`} />}\n                    </button>\n                </div>\n                <div style={{ transition: \"all 0.500s linear\" }} className={`${!expanded ? 'is-height-0' : ''}`}>\n                    {DUMMY_PAYMENTS.length > 0 ?\n                        DUMMY_PAYMENTS.map(p => (\n                            <Link to={`/ f`} key={p.id} className='panel-block'>\n                                <PaymentItem payment={p} />\n                            </Link>\n                        ))\n                        :\n                        <Empty text='No Payment data available' />\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport interface IPayment {\n    type: 'pending' | 'paid'\n    timestamp\n    cost: number\n    title\n    payee\n    id: string\n}\n\nexport function getPaymentDescription(payment: IPayment): string {\n    switch (payment.type) {\n        case 'pending':\n            return `You have a pending charge of ${CurrencyFormatter.format(payment.cost)} for the completion of this job by ${payment.payee}`\n        case 'paid':\n            return `A payment of ${CurrencyFormatter.format(payment.cost)} has been submitted to ${payment.payee}`\n    }\n}\n\n\nexport const DUMMY_PAYMENTS: IPayment[] = [\n    {\n        type: 'pending',\n        timestamp: Date.now(),\n        cost: 20.405,\n        title: 'Clear lawn',\n        payee: 'Philip Barnabas',\n        id: '2ss354'\n    },\n    {\n        type: 'paid',\n        timestamp: Date.now(),\n        cost: 200.405,\n        title: 'Clear lawn and take out firewood',\n        payee: 'Philip Barnabas',\n        id: '23sss54'\n    },\n    {\n        type: 'pending',\n        timestamp: Date.now(),\n        cost: 3000.405,\n        title: 'Clear lawn',\n        payee: 'Philip Barnabas',\n        id: '235s4'\n    }\n]","import React from 'react';\nimport { JobList } from \"../components/JobList\";\nimport { NotificationList } from '../components/notification';\nimport { PaymentList } from '../components/payment';\nimport { UserList } from '../components/user';\nimport { CardFragment } from \"../components/util\";\nimport { Link } from 'react-router-dom';\nimport links from '../lib/links';\n\nexport function Dashboard() {\n    return (\n        <div className='columns is-1 is-variable px-3 py-3 is-atleast-fullheight'>\n            <NotificationList className='column is-3 is-2-widescreen' />\n            <div className='column is-6 is-8-widescreen is-flex' style={{ flexDirection: 'column', justifyContent: 'space-between' }}>\n                <CardFragment header='Active Jobs' optionsElement={<Link to={links.activeJobs}>View All</Link>} style={{ marginBottom: '0.8em' }}>\n                    <JobList className={'columns is-centered is-vcentered is-multiline is-1 is-variable'} />\n                </CardFragment>\n            </div>\n            <PaymentList className='column is-3 is-2-widescreen' />\n        </div>\n    )\n}","// Check geolocation exists\nexport function isGeoLocationSupported() {\n    return 'geolocation' in navigator\n}\n\nexport function getCurrentLocation(): Promise<Position> {\n    return new Promise((res, rej) => {\n        if (!isGeoLocationSupported()) {\n            throw new Error('Geolocation is not supported! Cannot find current location!')\n        }\n\n        navigator.geolocation.getCurrentPosition(res, rej, {\n            enableHighAccuracy: true,\n            maximumAge: 1000\n        })\n    })\n}","import Tags from \"@yaireo/tagify/dist/react.tagify\";\nimport React, { useState, useCallback, useMemo, useContext, useEffect, useLayoutEffect, createRef, Ref, useRef } from 'react';\nimport { FaChevronLeft, FaMapMarkerAlt, FaSearch, FaUpload, FaDollarSign } from 'react-icons/fa';\nimport { useToasts } from 'react-toast-notifications';\nimport { debounce, useLoadGoogleMaps } from \"./util\";\nimport { Job, IJob } from \"../lib/job\";\nimport firebase from 'firebase'\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport validator from \"validator\";\nimport { getCurrentLocation } from \"../lib/location\";\nimport { v4 } from \"uuid\";\n\n/**\n * Component for creating a form field.\n * \n * @param param Object containing parameters to build the input field\n */\nexport function FormField({ label, value, onChange, className, type, placeholder, icon, readOnly = false, locationAutocomplete = false, tagifyRef = null as any, required = false, whitelist = [] as any[], mode = 'select', disabled = false, loading = false, tags = false, showBorder = true, containerClassName = '', isTextArea = false, maxLength = Number.MAX_SAFE_INTEGER, helpTextTop = \"\", helpTextLeft = \"\", helpTextRight = \"\", hasAddons = false, addon = <></> }) {\n    const inputRef = useRef<HTMLInputElement>(null)\n    const loadingGoogleMaps = useLoadGoogleMaps()\n    let listener: google.maps.MapsEventListener\n    let autocomplete: google.maps.places.Autocomplete\n\n    useEffect(() => {\n\n        if (inputRef.current && locationAutocomplete && !loadingGoogleMaps) {\n            autocomplete = new google.maps.places.Autocomplete(inputRef.current, {\n                fields: ['formatted_address', 'geometry', 'place_id']\n            })\n\n            listener = autocomplete.addListener('place_changed', () => {\n                const place = autocomplete.getPlace()\n                const data = {\n                    address: place.formatted_address,\n                    coords: {\n                        longitude: place.geometry?.location?.lng(),\n                        latitude: place.geometry?.location?.lat(),\n                    },\n                    id: place.place_id,\n                    place_id: place.place_id\n                }\n                onChange(data)\n            })\n        }\n\n        return () => {\n            listener?.remove()\n            autocomplete?.unbindAll()\n        }\n    }, [loadingGoogleMaps, locationAutocomplete])\n\n    useEffect(() => {\n        if (!locationAutocomplete && inputRef.current && google) {\n            listener?.remove()\n            google.maps?.event?.clearInstanceListeners(inputRef.current)\n        }\n    }, [locationAutocomplete])\n\n    return (\n        <div className={`${containerClassName} ${showBorder ? 'job-form-field' : ''} field has-text-left`}>\n            <label className='label is-flex' style={{ justifyContent: 'space-between', alignItems: 'center' }}><span>{label}</span> <span className='has-text-right has-text-weight-normal is-size-7'>{helpTextTop}</span></label>\n            {!hasAddons ?\n                <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\n                    {isTextArea ?\n                        tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode: null,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                inputMode='textarea'\n                                className={`${className}`}\n                                loading={loading}\n                                maxLength={maxLength}\n                                required={required}\n                                disabled={disabled}\n                                onChange={e => (onChange(e.target.value))}\n                            />\n                            :\n                            <textarea required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} className={`${className} textarea`} maxLength={maxLength} placeholder={placeholder} />\n                        :\n                        tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    },\n                                    maxLength\n                                }}\n                                readOnly={readOnly}\n                                required={required}\n                                className={`${className} input`}\n                                loading={loading}\n                                maxLength={maxLength}\n                                disabled={disabled}\n                                onChange={e => (e.persist(), onChange(e.target.value))}\n                            />\n                            :\n                            locationAutocomplete ?\n                                <input ref={inputRef} key={'autocomplete'} required={required} disabled={disabled} value={undefined} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} />\n                                :\n                                <input ref={inputRef} key={'nonutocomplete'} required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} />\n                    }\n                    {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\n                </div>\n                :\n                <div className={`${hasAddons ? 'has-addons' : ''} field`}>\n                    <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\n                        {tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                readOnly={readOnly}\n                                required={required}\n                                className={`${className} input`}\n                                disabled={disabled}\n                                loading={loading}\n                                maxLength={maxLength}\n                                onChange={e => (e.persist(), onChange(e.target.value))}\n                            />\n                            :\n                            locationAutocomplete ?\n                                <input ref={inputRef} key='autocomplete-2' required={required} disabled={disabled} value={undefined} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} style={{ borderRight: 0 }} />\n                                :\n                                <input ref={inputRef} key='non-autocomplete-2' required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} style={{ borderRight: 0 }} />\n                        }\n                        {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\n                    </div>\n                    {addon}\n                </div>\n            }\n            <div className='help'>\n                <div className='container'>\n                    <div className='columns'>\n                        {helpTextLeft ? <p className='column has-text-left has-text-centered-touch'>{helpTextLeft} </p> : null}\n                        {helpTextRight ? <p className='column has-text-right has-text-centered-touch'>{helpTextRight} </p> : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function FileInput({ disabled, value, onChange, onRemovePhoto }) {\n    const ref = useRef<HTMLInputElement>(null)\n\n    return (\n        <div className='field job-form-field has-text-left my-4'>\n            <label className='label is-flex' style={{ justifyContent: 'space-between', alignItems: 'center' }}><span>Job Photos</span> <span className='has-text-right has-text-weight-normal is-size-7'>Add photos to help describe this job</span></label>\n            <div className='control is-expanded'>\n                <div className='file is-flex is-centered is-normal'>\n                    <label className='file-label is-flex-grow-1'>\n                        <input onChange={(el) => {\n                            if (el.target.files) {\n                                const files: File[] = []\n                                for (let i = 0; i < el.target.files?.length; i++) {\n                                    files.push(el.target.files[i])\n                                }\n                                if (files.length > 0) {\n                                    onChange(files)\n                                }\n                            }\n                        }} className='file-input' multiple ref={ref} disabled={disabled} type='file' accept='image/*' />\n                        <span className='file-cta is-flex is-flex-centered' style={{ width: '100%' }}>\n                            <span className='file-icon'>\n                                <FaUpload />\n                            </span>\n                            <span className='file-label'>\n                                SELECT PHOTOS\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                {value && value.length > 0 ?\n                    <div className='field is-grouped is-grouped-multiline'>\n                        {value.map((file: File, index) =>\n                            <div key={`${index}-${file.name}`} className='control mr-2 my-2 '>\n                                <div className='tags has-addons'>\n                                    <span key={`${file.name}-${file.size}-${index}`} className='tag is-dark'>{file.name}</span>\n                                    <button onClick={() => { onRemovePhoto(index) }} className='tag is-delete'></button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    : null}\n            </div>\n        </div>\n    )\n}\n\nexport function CreateJob({ onClose, show, onComplete }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        loading: false,\n        tasks: '',\n        type: '',\n        title: '',\n        description: '',\n        address: '',\n        requiredPersons: '',\n        price: '',\n        loadingTypes: true,\n        fetchingLocation: false,\n        manualAddress: false,\n        location: null as any,\n    })\n    const [photos, setPhotos] = useState([] as File[])\n    const { addToast } = useToasts()\n    const types = useMemo(() => {\n        return {\n            jobTypes: new Array<string>(),\n            location: [],\n        }\n    }, [])\n    const tagifyRef = createRef(), tagifyRef2 = createRef()\n\n\n    // const _search = debounce(async (ctx, cb) => {\n    //     try {\n    //         const jobTypes = types.allJobTypes.filter(type=>type)\n    //         return cb(null, jobTypes)\n    //     } catch (e) {\n    //         cb(e, null)\n    //     }\n    // }, 500)\n\n    useEffect(() => {\n        new Promise(async () => {\n            try {\n                types.jobTypes = await Job.getJobTypes(ctx)\n                const tagify: any = tagifyRef.current\n                console.log(tagifyRef)\n                if (tagify) {\n                    tagify.settings.whitelist.length = 0; // reset current whitelist\n                    tagify.loading(true).dropdown.hide.call(tagify)\n                    tagify.settings.whitelist.push(...types.jobTypes, ...tagify.value)\n                    tagify.loading(false).dropdown.hide.call(tagify, tagify.value);\n\n                    (tagifyRef.current as any).settings.whitelist = types.jobTypes\n                }\n            } catch (e) {\n                console.log(e)\n                addToast('Failed to load job types!', { appearance: 'error' })\n            }\n        })\n    }, [])\n\n    return (\n        <form className={`modal ${show ? 'is-active' : ''}`} onSubmit={async (e) => {\n            e.stopPropagation()\n            e.preventDefault()\n            setState({ ...state, loading: true })\n            try {\n                const job_type = JSON.parse(state.type)[0]?.value\n                console.log(job_type, state.type)\n                const newJob: any = {\n                    date_created: firebase.firestore.FieldValue.serverTimestamp(),\n                    job_title: state.title,\n                    job_type,\n                    posted_by: ctx.user?.id,\n                    salary: parseInt(state.price, 10),\n                    required_count: parseInt(state.requiredPersons, 10),\n                    wage: 'deployment',\n                    status: 'available',\n                    tasks: JSON.parse(state.tasks).map(v => ({ id: v4(), text: v.value })),\n                    location: state.location ? {\n                        id: state.location.place_id,\n                        place_id: state.location.place_id,\n                        address: state.location.address,\n                        coords: {\n                            latitude: state.location.coords.latitude || null,\n                            longitude: state.location.coords.longitude || null,\n                            accuracy: state.location.coords.accuracy || null,\n                            altitude: state.location.coords.altitude || null,\n                            heading: state.location.coords.heading || null,\n                            altitudeAccuracy: state.location.coords.altitudeAccuracy || null,\n                            speed: state.location.coords.speed || null,\n                        }, timestamp: state.location.timestamp || Date.now()\n                    } : undefined,\n                    job_description: state.description\n                }\n                if (state.manualAddress && !state.address) {\n                    throw new Error('You must provide your address manually!')\n                } else if (state.manualAddress) {\n                    newJob.location.address = state.address\n                }\n\n                console.log(newJob)\n\n                if (newJob.job_type && !validator.isEmpty(newJob.job_type) && !types.jobTypes.find(type => type === newJob.job_type)) {\n                    // Job type is new. \n                    throw new Error('Invalid job type!')\n                }\n\n                await Job.addNewJob(ctx, newJob, photos)\n                setState({ ...state, loading: false })\n                addToast(\"Successfully added job!\", { appearance: 'success' })\n                onComplete()\n            } catch (e) {\n                console.log(e);\n                setState({ ...state, loading: false })\n                addToast(e.message || \"Failed to add job!\", { appearance: 'error' })\n            }\n        }}>\n            <div className='modal-background'></div>\n            <div className='modal-card'>\n                <header className='modal-card-head'>\n                    <div className='modal-card-title is-mobile is-vcentered columns'>\n                        <div className='column has-text-left'>\n                            <button className='button' onClick={onClose}><span className='icon'><FaChevronLeft /></span><span className='is-hidden-mobile'> View Current Jobs</span></button>\n                        </div>\n                        <div className='column has-text-left-mobile is-10-mobile'>\n                            <span>New Job Listing</span>\n                        </div>\n                        <a className='column is-hidden-mobile'></a>\n                    </div>\n                </header>\n                <div className='modal-card-body px-0'>\n                    <div className='container'>\n                        <div className='level px-4 pb-4' style={{ borderBottom: 'solid 1px #1112' }}>\n                            <p className='level-item has-text-left is-block is-size-4 has-text-centered-touch'>Job Details</p>\n                            <p className='level-item has-text-right is-block has-text-grey-light has-text-centered-touch'>All fields are required to be filled out</p>\n                        </div>\n                        <div className='container is-fluid pb-4 px-0'>\n                            <div className='columns mx-0 px-4'>\n                                <div className='column is-6'>\n                                    <FormField required disabled={state.loading} maxLength={types.jobTypes.length} value={state.type} tagifyRef={tagifyRef} tags whitelist={types.jobTypes} onChange={(type) => { setState((state) => ({ ...state, type })) }} className='' containerClassName='mb-4' label=\"Job Type\" placeholder='Begin typing a job type' type='text' icon={<FaSearch />} helpTextLeft='Search and select a job type to improve search results when finding a contractor' />\n                                    <FormField required disabled={state.loading} value={state.title} onChange={(title) => setState({ ...state, title })} className='' containerClassName='my-4' label=\"Title\" placeholder='Provide a title for the job' type='text' icon={null} helpTextLeft='Will be seen by contractors in search result and as an active status' helpTextRight='Maximum 30 characters' maxLength={30} />\n                                    <FormField required disabled={state.loading} value={state.description} onChange={(description) => setState({ ...state, description })} className='' containerClassName='my-4' label=\"Description\" isTextArea placeholder='Provide a description of the job' type='text' icon={null} helpTextLeft='Give a short description to improve finding a contractor that fits the job' helpTextRight='Maximum 80 characters' maxLength={80} />\n                                    <FormField locationAutocomplete={!state.manualAddress} required={!state.manualAddress} disabled={state.loading || state.fetchingLocation} value={state.address} onChange={(e) => {\n                                        if (state.manualAddress) {\n                                            return setState({ ...state, address: e })\n                                        }\n                                        const { address, coords, place_id } = e\n                                        setState((state) => ({\n                                            ...state,\n                                            location: {\n                                                address,\n                                                place_id,\n                                                id: place_id,\n                                                coords\n                                            },\n                                        }))\n                                    }} className='' containerClassName='my-4' label=\"Location Address\" placeholder='Begin typing the first line of the address' type='text' icon={<FaMapMarkerAlt />}\n                                        hasAddons addon={(\n                                            <div className='control'>\n                                                <button disabled={state.loading || state.fetchingLocation} className={`button ${state.fetchingLocation ? 'is-loading' : ''} ${state.manualAddress ? 'is-info has-text-white' : ''}`} onClick={async () => {\n                                                    const manualAddress = !state.manualAddress\n                                                    if (manualAddress) {\n                                                        // If manual address is true, fetch the current location\n                                                        setState({ ...state, fetchingLocation: true })\n                                                        try {\n                                                            setState({ ...state, location: await getCurrentLocation() })\n                                                            addToast(\"Using your current location!\", { appearance: 'success' })\n                                                            setState((state) => ({ ...state, address: '', manualAddress, fetchingLocation: false }))\n                                                        } catch (e) {\n                                                            console.log(e);\n                                                            setState((state) => ({ ...state, fetchingLocation: false }))\n                                                            addToast(e.message || \"Failed to set location manually!\", { appearance: 'error' })\n                                                        }\n                                                    } else {\n                                                        setState((state) => ({ ...state, location: null, manualAddress }))\n                                                    }\n                                                }} type='button' style={{ color: state.manualAddress ? 'unset' : 'black', borderLeft: 0, zIndex: 4 }}><span className='is-size-7'>{state.manualAddress ? 'using current location' : 'or use current location'}</span></button>\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n                                <div className='column is-6'>\n                                    <FormField required disabled={state.loading} value={state.requiredPersons} onChange={(requiredPersons) => setState({ ...state, requiredPersons })} hasAddons className='' containerClassName='mb-4' label=\"How many persons are needed for the job\"\n                                        placeholder='How many persons are needed for the job'\n                                        type='number' helpTextRight='e.g. 10 persons maximum per job'\n                                        icon={null}\n                                        addon={(\n                                            <div className='control'>\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Persons</button>\n                                            </div>\n                                        )}\n                                    />\n                                    <FormField required disabled={state.loading} value={state.price} onChange={(price) => setState({ ...state, price })} hasAddons className='' containerClassName='my-4' label=\"Pay\"\n                                        placeholder='Provide an amount'\n                                        type='number' helpTextLeft='Will be seen in search results. Cannot be adjusted once the listing is pending or active'\n                                        icon={<FaDollarSign />}\n                                        addon={(\n                                            <div className='control'>\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Per Deployment</button>\n                                            </div>\n                                        )}\n                                    />\n                                    <FormField required disabled={state.loading} value={state.tasks} tags onChange={(tasks) => setState((state) => ({ ...state, tasks }))} isTextArea className='' containerClassName='my-4' label=\"Tasks\" placeholder='Add a task' type='text' icon={null} helpTextTop='Provide each task required to be completed for this listing' helpTextRight='Separate each task with a comma (,)' />\n\n                                    <FileInput disabled={state.loading} value={photos} onRemovePhoto={(i) => { setPhotos(photos.filter((_, index) => index !== i)) }} onChange={(photos) => setPhotos(photos)} />\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <footer className='modal-card-foot is-flex-centered'>\n                    <button disabled={state.loading} className='button' onClick={onClose}>Cancel</button>\n                    <button disabled={state.loading} className={`button is-info ${state.loading ? 'is-loading' : ''}`} type='submit'>Confirm</button>\n                </footer>\n            </div>\n        </form>\n    )\n}","import React, { useEffect, useState, useCallback } from 'react';\nimport { BsPencilSquare } from \"react-icons/bs\";\nimport { FaSearch } from 'react-icons/fa';\nimport { NavLink, Route } from 'react-router-dom';\nimport { IJob } from '../lib/job';\nimport links from '../lib/links';\nimport { JobItem } from './job';\nimport { debounce } from './util';\nimport { useDebouncedCallback } from \"use-debounce\";\n\nconst searchAlg = debounce((query: string, jobs: IJob[], callback: (err?: Error, job?: IJob[]) => void) => {\n    console.log('search result', query, jobs)\n\n    if (!query || jobs?.length <= 0) {\n        return jobs\n    }\n    const regexp = new RegExp(query, 'i')\n\n    const result = jobs.filter(job => {\n        return job.job_description?.search(regexp) >= 0 || job.job_title?.search(regexp) >= 0 || job.location_address?.search(regexp) >= 0 || job.job_type?.search(regexp) >= 0\n    })\n    callback(undefined, result)\n    return result\n}, 500)\n\nexport function JobSideList({ className, activeJobs, inactiveJobs, onCreateNew }) {\n    const [activeSearchData, setActiveSearchData] = useState<IJob[]>([])\n    const [inactiveSearchData, setInactiveSearchData] = useState<IJob[]>([])\n    const [searchText, setSearchText] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    useDebouncedCallback((query: string, jobs: IJob[], callback: (err?: Error, job?: IJob[]) => void) => {\n        console.log('search result', query, jobs)\n\n        if (!query || jobs?.length <= 0) {\n            return jobs\n        }\n        const regexp = new RegExp(query, 'i')\n\n        const result = jobs.filter(job => {\n            return job.job_description?.search(regexp) >= 0 || job.job_title?.search(regexp) >= 0 || job.location_address?.search(regexp) >= 0 || job.job_type?.search(regexp) >= 0\n        })\n        callback(undefined, result)\n    })\n\n    const triggerSearch = (search) => {\n        setIsLoading(true)\n        Promise.all([\n            new Promise<IJob[]>((res, rej) => {\n                searchAlg(search, activeJobs, ((err, result) => {\n                    if (err) {\n                        rej(err)\n                    } else {\n                        if (!result || result.length < 1) {\n                            rej(new Error('No data'))\n                        } else {\n                            res(result)\n                        }\n                    }\n\n                }))\n            })\n                .then((res: IJob[]) => {\n                    setActiveSearchData(res)\n                })\n                .catch(e => console.log(e)),\n            new Promise<IJob[]>((res, rej) => {\n                searchAlg(search, inactiveJobs, ((err, result) => {\n                    if (err) {\n                        rej(err)\n                    } else {\n                        if (!result || result.length < 1) {\n                            rej(new Error('No data'))\n                        } else {\n                            res(result)\n                        }\n                    }\n\n                }))\n            })\n                .then((res: IJob[]) => {\n                    setInactiveSearchData(res)\n                })\n                .catch(e => console.log(e))\n        ])\n            .finally(() => {\n                setIsLoading(false)\n            })\n    }\n\n    useEffect(() => {\n        const search = searchText.trim()\n        if (!search) {\n            setActiveSearchData([])\n            setInactiveSearchData([])\n        }\n        if (search) {\n            triggerSearch(search)\n        }\n    }, [searchText])\n\n    return (\n        <div className={`${className} panel job-panel has-background-white-ter is-flex is-size-7`}>\n            <div className='panel-heading is-flex is-vcentered'>\n                <p className='has-text-left is-size-6'>Job Listings</p>\n                <a className='button is-small is-rounded is-size-7' onClick={onCreateNew}><BsPencilSquare /></a>\n            </div>\n            <div className='panel-block'>\n                <div className='field has-addons' style={{ flex: 1 }}>\n                    <div className={`control is-expanded has-icons-left ${isLoading && 'is-loading'}`}>\n                        <input style={{ borderRight: 0 }} className='input is-rounded' value={searchText} onChange={(e => setSearchText(e.target.value))} type='search' placeholder='Search Jobs...' />\n                        <span className='icon is-left'><FaSearch /></span>\n                    </div>\n                    {/* <div className='control'>\n                        <button style={{ borderLeft: 0 }} className='button is-rounded' onClick={() => window.alert(\"not ready yet!\")} >\n                            <span className='icon is-right'><GoSettings /></span>\n                        </button>\n                    </div> */}\n                </div>\n            </div>\n            <div className='panel-tabs'>\n                <NavLink to={`${links.activeJobs}`} activeClassName='is-active'>Active</NavLink>\n                <NavLink to={`${links.inactiveJobs}`} activeClassName='is-active'>Inactive</NavLink>\n            </div>\n            <div className='has-background-white-ter' style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n                <Route path={`${links.activeJobs}`} render={() => (activeSearchData.length > 0 ? activeSearchData : activeJobs).map(j => <JobItem key={j.id} job={j} to={`${links.activeJobs}/${j.id}`} />)} />\n                <Route path={`${links.inactiveJobs}`} render={() => (inactiveSearchData.length > 0 ? inactiveSearchData : inactiveJobs).map(j => <JobItem key={j.id} job={j} to={`${links.inactiveJobs}/${j.id}`} />)} />\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { JobDetail } from '../components/job';\nimport { CreateJob } from '../components/jobcreation';\nimport { JobSideList } from \"../components/JobSideList\";\nimport { useEscapeHandler } from \"../components/util\";\nimport { IJob, Job } from '../lib/job';\nimport links from '../lib/links';\nimport { DUMMY_USER, User } from '../lib/user';\nimport { APPLICATION_CONTEXT } from '../lib';\n\nexport function Jobs() {\n    const ctx = useContext(APPLICATION_CONTEXT);\n    const [state, setState] = useState({ loading: false, showModal: false, selected: null as null | IJob })\n    const [active, setActive] = useState([] as IJob[])\n    const [inactive, setInactive] = useState([] as IJob[])\n    const { addToast } = useToasts()\n    const location = useLocation()\n\n    const dismissModal = () => {\n        setState({ ...state, showModal: false })\n        const containers = window.document.getElementsByClassName('pac-container')\n        for (let i; i < containers.length; i++) {\n            containers.item(i)?.remove()\n        }\n    }\n\n    const removeEscapeHandler = useEscapeHandler(dismissModal)\n\n    useEffect(() => {\n        return removeEscapeHandler()\n    }, [])\n\n    useEffect(() => {\n        setState({ ...state, loading: true });\n        const unsubscribe = Job.listenForActiveAndPendingJobs(ctx, async (err, docs: IJob[]) => {\n            if (err) {\n                setState({ ...state, loading: false });\n                return addToast(err.message || 'Failed to get jobs!');\n            }\n            docs = await Promise.all(\n                docs.map(async (v) => {\n                    if (v.status !== 'available' && v.executed_by) {\n                        v.user = await User.getExternalUser(ctx, v.executed_by);\n                    }\n                    return v;\n                })\n            );\n            setState({ ...state, loading: false });\n            setActive(docs)\n        })\n\n        Job.getInactiveJobs(ctx).then(async (jobs) => await jobs.map(async (v: IJob) => {\n            v.user = await User.getExternalUser(ctx, v.executed_by);\n            return v;\n        })).then(jobs => {\n            setInactive(jobs)\n        }).catch(e => {\n            console.log(e)\n            addToast(e.message || \"Failed to get inactive jobs\", {\n                appearance: 'error'\n            })\n        })\n\n        return unsubscribe;\n    }, []);\n\n    const { id } = useParams()\n    const activeMatch = useRouteMatch({\n        path: links._jobItem.active,\n        strict: true,\n        exact: true\n    })\n    const inactiveMatch = useRouteMatch({\n        path: links._jobItem.inactive\n    })\n\n    useEffect(() => {\n        if (id) {\n            if (activeMatch) {\n                const selected = active.find(v => v.id === id)\n                setState({ ...state, selected: selected || null })\n            } else if (inactiveMatch) {\n                const selected = inactive.find(v => v.id === id)\n                setState({ ...state, selected: selected || null })\n            }\n        }\n    }, [location, active, inactive])\n\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <JobSideList activeJobs={active} inactiveJobs={inactive} onCreateNew={() => setState({ ...state, showModal: true })} className='column is-3 is-12-mobile is-12-touch is-clipped is-fullheight' />\n            <JobDetail onCancel={(job: IJob) => {\n                if (job.status === 'complete') {\n                    setInactive(inactive.filter(v => v.id !== job.id))\n                } else {\n                    setActive(active.filter(v => v.id !== job.id))\n                }\n                setState({ ...state, selected: null })\n            }}\n                job={id ? state.selected : null} className='column is-9 is-12-touch is-12-mobile is-flex' />\n            {state.showModal ?\n                <CreateJob show={state.showModal} onClose={dismissModal} onComplete={() => {\n                    dismissModal()\n                }} />\n                : null}\n        </div>\n    )\n}","import React, { useCallback, useContext, useState } from 'react';\nimport { FaAngleDoubleRight, FaChevronLeft, FaEnvelope, FaEye, FaEyeSlash, FaKey, FaPhoneAlt, FaSignInAlt, FaSms, FaUser, FaUserPlus } from 'react-icons/fa';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\nimport links from '../lib/links';\nimport logo from \"../logo.svg\";\n\nexport interface IRegister {\n    first_name: string,\n    last_name: string,\n    password: string,\n    password_verify: string,\n    email: string,\n    phone_number: string,\n}\n\nexport interface ILogin {\n    code: string,\n    phone_number: string,\n    password: string,\n    showPassword: boolean,\n    loading?: boolean\n}\n\nexport function RegisterView() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        showModal: false,\n        showCodeRequest: true,\n        showPassword: false,\n        showPasswordVerify: false,\n        loading: false,\n    })\n    const [formState, setFormState] = useState<IRegister>({\n        email: '',\n        first_name: '',\n        last_name: '',\n        password: '',\n        password_verify: '',\n        phone_number: ''\n    })\n\n    const { addToast } = useToasts()\n    const history = useHistory()\n    const location = useLocation()\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        setState({ ...state, loading: true })\n\n        try {\n            const response = await ctx.addAdmin(formState)\n\n            if (!response || !response.success) {\n                throw new Error('Failed to register user!')\n            }\n            addToast('User registered successfully!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false })\n            history.push(links.login, location.state)\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Failed to add new user!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n        }\n    }, [state, formState])\n\n\n    return (\n        <div className='section'>\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\n                <img src={logo} className='is-rounded' />\n            </figure>\n\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\n\n            <form className='my-2' onSubmit={onSubmit}>\n                <div className='field is-horizontal'>\n                    <div className='field-body'>\n                        <div className='field'>\n                            <div className='control has-icons-left '>\n                                <input autoComplete=\"given-name\" disabled={state.loading} required value={formState.first_name} onChange={(e) => setFormState({ ...formState, first_name: e.target.value })} placeholder='enter firstname' className='input' type='text' />\n                                <span className='icon is-left is-small'><FaUser /></span>\n                            </div>\n                        </div>\n                        <div className='field'>\n                            <div className='control has-icons-left '>\n                                <input autoComplete=\"family-name\" disabled={state.loading} required value={formState.last_name} onChange={(e) => setFormState({ ...formState, last_name: e.target.value })} placeholder='enter lastname' className='input' type='text' />\n                                <span className='icon is-left is-small'><FaUser /></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='field'>\n                    <div className='control has-icons-left '>\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.email} onChange={(e) => setFormState({ ...formState, email: e.target.value })} placeholder='enter your email address' className='input' type='email' />\n                        <span className='icon is-left is-small'><FaEnvelope /></span>\n                    </div>\n                </div>\n\n                <div className='field'>\n                    <div className='control has-icons-left '>\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.phone_number} onChange={(e) => setFormState({ ...formState, phone_number: e.target.value })} placeholder='enter your phone number include the \"+\" sign' className='input' type='tel' />\n                        <span className='icon is-left is-small'><FaPhoneAlt /></span>\n                    </div>\n                </div>\n\n                <div className='field is-horizontal'>\n                    <div className='field-body'>\n                        <div className='field has-addons'>\n                            <div className='control has-icons-left is-expanded'>\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password} onChange={(e) => setFormState({ ...formState, password: e.target.value })} placeholder='enter your password' className='input' type={state.showPassword ? 'text' : 'password'} />\n                                <span className='icon is-left is-small'><FaKey /></span>\n                            </div>\n                            <div className='control'>\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\n                                </button>\n                            </div>\n                        </div>\n\n                        <div className='field has-addons'>\n                            <div className='control has-icons-left is-expanded'>\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password_verify} onChange={(e) => setFormState({ ...formState, password_verify: e.target.value })} placeholder='re-enter your password' className='input' type={state.showPasswordVerify ? 'text' : 'password'} />\n                                <span className='icon is-left is-small'><FaKey /></span>\n                            </div>\n                            <div className='control'>\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPasswordVerify: !state.showPasswordVerify })}>{state.showPasswordVerify ? <FaEyeSlash /> : <FaEye />}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className='field mt-6'>\n                    <div className='control'>\n                        <button disabled={state.loading} className={`button is-rounded is-fullwidth is-uppercase is-success ${state.loading ? 'is-loading' : ''}`} type='submit'>\n                            <FaUserPlus />&nbsp; Register\n                    </button>\n                    </div>\n                </div>\n            </form>\n\n            <div className='section mt-6 is-size-7'>\n                <p>Already have an account?</p>\n                <Link to={links.login}>Click here to login</Link>\n            </div>\n        </div>\n    )\n\n}\n\n\nexport function LoginView() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({\n        showCodeRequest: true,\n        loading: false,\n        phone: ''\n    })\n\n    const { addToast } = useToasts()\n\n\n    /**\n     * Called to verify the user's number and send OTP through specified channel.\n     */\n    const onSubmitCodeRequest = useCallback(async (form: { phone: string, channel: 'sms' | 'call' }) => {\n        setState({ ...state, loading: true })\n\n        try {\n            // Check if number exists in database\n            await ctx.validateNumber(form.phone)\n            // Generate OTP code for provided number\n            const done = await ctx.triggerVerification(form.phone, form?.channel)\n\n            if (!done) {\n                throw new Error('Failed to verify phone number!')\n            }\n\n            addToast('Verification code sent to your phone!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false, phone: form.phone })\n            return true\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Verification failed!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n            return false\n        }\n    }, [state])\n\n    /**\n     * Called to login to application after the OTP has been received and inputted in the form.\n     */\n    const onSubmitVerified = useCallback(async (form: ILogin) => {\n        setState({ ...state, loading: true })\n\n        try {\n            const user = await ctx.login(form.phone_number, form.code, form.password)\n\n            if (!user) {\n                throw new Error('Failed to login!')\n            }\n\n            addToast('Login successful!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false, })\n            return true\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Login failed!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n            return false\n        }\n    }, [state])\n\n\n    return (\n        <div className='section'>\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\n                <img src={logo} className='is-rounded' />\n            </figure>\n\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\n\n            {state.showCodeRequest ? (\n                <CodeRequestForm onComplete={() => setState({ ...state, showCodeRequest: false })} loading={state.loading} onSubmit={onSubmitCodeRequest} />\n            ) : (\n                    <LoginForm onCancel={() => setState({ ...state, showCodeRequest: true })} loading={state.loading} phone={state.phone} onSubmit={onSubmitVerified} />\n                )}\n\n            <div className='section mt-6 is-size-7'>\n                <p>Are you a new user?</p>\n                <Link to={links.register}>Request access</Link>\n            </div>\n        </div>\n    )\n}\n\n\nfunction CodeRequestForm({ onSubmit, loading, onComplete }) {\n    const [state, setState] = useState({\n        phone: '',\n        channel: 'sms'\n    })\n    const [viewState, setView] = useState({\n        showOptions: false,\n        hold: false,\n        holdTimer: 0,\n    })\n\n    let intervalID\n\n    const onSubmitForm = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        // Trigger code to be sent. `success` decides if the code was successfully triggered.\n        const success = await onSubmit(state)\n        if (success) {\n            let counter = 59\n\n            clearInterval(intervalID)\n            intervalID = setInterval(() => {\n                if (counter === 0) {\n                    clearInterval(intervalID)\n                    setView({ ...viewState, hold: false, showOptions: true, holdTimer: counter })\n                    return\n                }\n                setView({ ...viewState, hold: true, holdTimer: counter, showOptions: true, })\n                counter--\n            }, 1000)\n        }\n    }, [state, viewState])\n\n    return (\n        <form onSubmit={onSubmitForm}>\n            <div className='field'>\n                <div className='control has-icons-left '>\n                    <input autoComplete=\"off\" disabled={loading || viewState.hold} required value={state.phone} onChange={(e) => setState({ ...state, phone: e.target.value })} placeholder='enter your phone number' className='input is-rounded' type='tel' />\n                    <span className='icon is-left is-small'><FaPhoneAlt /></span>\n                </div>\n\n            </div>\n            <div className='field mt-4'>\n                <div className='control'>\n                    {viewState.showOptions ?\n                        (\n                            <button onClick={onComplete} disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='button'>\n                                <FaAngleDoubleRight />&nbsp; Proceed\n                            </button>\n                        ) : (\n                            <button disabled={loading || viewState.hold} className={`button is-rounded is-uppercase is-info ${loading ? 'is-loading' : ''}`} type='submit'>\n                                {state.channel === 'sms' ? <><FaSms />&nbsp; Send Code</> : <><FaPhoneAlt />&nbsp; Call Me</>}\n                            </button>\n                        )\n                    }\n                </div>\n            </div>\n\n            <div className='field is-size-7'>\n\n                {viewState.showOptions ? (\n                    <>\n                        <p className='help mt-4 mb-2'>Didn't get code? {viewState.hold ? <span className='has-text-danger'>Try again in: {viewState.holdTimer}s</span> : null}</p>\n                        <div className='control buttons has-addons is-centered'>\n                            <button onClick={() => {\n                                setView({ ...viewState, showOptions: false })\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\n                                <span className='is-size-7'>Try Again</span>\n                            </button>\n                            <button onClick={() => {\n                                setState({ ...state, channel: state.channel === 'sms' ? 'call' : 'sms' })\n                                setView({ ...viewState, showOptions: false })\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\n                                <span className='is-size-7'> {state.channel === 'sms' ? \"Use voice\" : \"Use SMS\"}</span>\n                            </button>\n                        </div>\n                    </>\n                ) : null}\n            </div>\n\n        </form>\n    )\n}\n\n\nfunction LoginForm({ phone, loading, onSubmit, onCancel }) {\n    const [state, setState] = useState<ILogin>({\n        code: '',\n        phone_number: phone,\n        password: '',\n        showPassword: false,\n    })\n\n    const onSubmitForm = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        await onSubmit(state)\n    }, [state])\n\n    return (\n        <form onSubmit={onSubmitForm} >\n            <div className='field'>\n                <div className='control has-icons-left'>\n                    <input autoComplete=\"off\" disabled required value={state.phone_number} placeholder='enter your phone number' className='input' type='tel' />\n                    <span className='icon is-left is-small'><FaUser /></span>\n                </div>\n            </div>\n            <div className='field'>\n                <div className='control has-icons-left'>\n                    <input autoComplete=\"off\" pattern={'/.{4}/'} max={9999} maxLength={4} minLength={4} disabled={state.loading} required value={state.code} onChange={(e) => setState({ ...state, code: e.target.value })} placeholder='enter 4 digits code' className='input' type='number' />\n                    <span className='icon is-left is-small'><RiLockPasswordLine /></span>\n                </div>\n            </div>\n            <div className='field has-addons'>\n                <div className='control has-icons-left is-expanded'>\n                    <input autoComplete=\"off\" disabled={state.loading} required value={state.password} onChange={(e) => setState({ ...state, password: e.target.value })} placeholder='enter your password' className='input' type={state.showPassword ? 'text' : 'password'} />\n                    <span className='icon is-left is-small'><FaKey /></span>\n                </div>\n                <div className='control'>\n                    <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\n                    </button>\n                </div>\n            </div>\n            <div className='field mt-6'>\n                <div className='control buttons is-centered'>\n                    <button onClick={onCancel} disabled={loading} className={`button is-rounded is-uppercase is-dark is-outlined`} type='button'>\n                        <FaChevronLeft />&nbsp; Back\n                    </button>\n                    <button disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='submit'>\n                        <FaSignInAlt />&nbsp; Login\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { LoginView } from '../components/auth';\nimport { AuthHandler } from '../components/guard';\nimport { VIEW_CONTEXT } from '../lib';\n\nexport function Login() {\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({ showModal: false })\n\n    useEffect(() => {\n        viewCTX.showToolbar(false)\n        viewCTX.showFooter(false)\n\n        return () => {\n            viewCTX.showToolbar(true)\n            viewCTX.showFooter(true)\n        }\n    })\n\n    return (\n        <AuthHandler>\n            <div className='columns is-gapless is-fullheight is-multiline'>\n                <div className='column is-flex-centered is-atleast-fullheight'>\n                    <LoginView />\n                </div>\n                <div className='column is-6 is-hidden-touch is-flex has-background-info' />\n            </div>\n        </AuthHandler>\n    )\n}","import React, { useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\n\nexport function Logout() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n\n    useEffect(() => {\n        viewCTX.setAppReady(false)\n        viewCTX.showToolbar(false)\n        ctx.logout()\n\n        return () => {\n            viewCTX.showToolbar(true)\n            viewCTX.setAppReady(true)\n        }\n    }, [])\n\n    if (!viewCTX.signedIn) {\n        return <Redirect to={{ pathname: '/' }} />\n    }\n\n\n\n    return (\n        viewCTX.signedIn ? <></> : <Redirect to={{ pathname: '/' }} />\n    )\n}","import moment from \"moment\";\nimport React from 'react';\nimport { BsPencilSquare } from 'react-icons/bs';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport { FaSearch, FaComments } from 'react-icons/fa';\nimport { GoSettings } from 'react-icons/go';\nimport { User, DUMMY_USER } from '../lib/user';\nimport { NavLink } from \"react-router-dom\";\n\n\nexport function MessageListItem({ message }: { message: IMessage }) {\n    const time = moment.unix(message.timestamp / 1000)\n    return (\n        <NavLink activeClassName=\"is-active\" to={'./'} className={`message-item mb-8 is-block card is-shadowless has-background-white-ter`}>\n            <div className='card-content'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                            <figure className='image is-flex is-48x48'>\n                                <img className='is-rounded' src={message.author.profileImageURL} />\n                            </figure>\n                        </div>\n                        <div className='column'>\n                            <div className='columns mb-0 is-mobile name-bar'>\n                                <div className='has-text-left column is-narrow is-size-5 has-text-weight-medium'>\n                                    <p>{`${message.author.firstName} ${message.author.lastName}`}</p>\n                                </div>\n                                <div className='has-text-right column'>\n                                    <p>{time.calendar()}</p>\n                                </div>\n                            </div>\n                            <div className='content has-text-left'>\n                                <p>{message.content}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function MessageList({ onCreateNew = () => { }, className = '' }) {\n    return (\n        <div className={`${className} panel job-panel has-background-white-ter is-flex`}>\n            <div className='panel-heading is-flex is-vcentered'>\n                <p className='has-text-left'>Recent Messages</p>\n                <div className='field is-grouped is-grouped-right'>\n                    <button className='button is-rounded' onClick={onCreateNew}><BsPencilSquare /></button>\n                    <button className='button is-rounded' onClick={onCreateNew}><CgMoreAlt /></button>\n                </div>\n            </div>\n            <div className='panel-block'>\n                <div className='field has-addons' style={{ flex: 1 }}>\n                    <div className='control is-expanded has-icons-left'>\n                        <input style={{ borderRight: 0 }} className='input is-rounded' type='search' placeholder='Search Messages...' />\n                        <span className='icon is-left'><FaSearch /></span>\n                    </div>\n                    <div className='control'>\n                        <button style={{ borderLeft: 0 }} className='button is-rounded' onClick={() => window.alert(\"not ready yet\")}>\n                            <span className='icon is-right'><GoSettings /></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className='has-background-white-ter' style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n                {\n                    DUMMY_MESSAGES.map(m => <MessageListItem message={m} />)\n                }\n            </div>\n        </div>\n    )\n}\n\nexport function MessageDetail({ message, className, contact }: { contact?: User, className?: string, message: IMessage[] }) {\n    if (!message || !contact) {\n        return (\n            <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n                <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\n                    <span className='my-4' ><FaComments fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                    <p className='is-uppercase is-size-6 has-text-weight-bold'>Select a contact to start a chat</p>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n            <div className='card-content is-paddingless'>\n                <div className='level py-4 mb-0'>\n                    <div className='level-item is-size-6'></div>\n                    <div className='level-item is-size-4 has-text-weight-bold'>{`${contact.firstName} ${contact.lastName}`}</div>\n                    <div className='level-item is-size-6 pr-4' style={{ justifyContent: 'flex-end' }}>\n                        <button className='button is-rounded'><CgMoreAlt /></button>\n                    </div>\n                </div>\n                <div className='container is-fluid px-0'>\n                    <div className='columns is-fullheight mx-0 is-multiline'>\n                        <div className='column is-8-fullhd is-7-desktop is-12 px-0'>\n\n                        </div>\n                        <div className='column is-4-fullhd is-5-desktop is-12 is-flex'>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport interface IMessage {\n    content\n    author: User\n    timestamp\n    type: 'text' | 'image' | 'attachment'\n    id\n}\n\nexport const DUMMY_MESSAGES: IMessage[] = [\n    {\n        content: 'hello',\n        author: DUMMY_USER,\n        timestamp: Date.now(),\n        type: 'text',\n        id: 'abcdefgh'\n    }\n]","import React from 'react';\nimport { DUMMY_MESSAGES, MessageDetail, MessageList } from '../components/messages';\nimport { DUMMY_USER } from '../lib/user';\n\nexport function Messages() {\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <MessageList onCreateNew={() => { }} className='column is-3 is-12-touch is-clipped is-fullheight' />\n            <MessageDetail message={DUMMY_MESSAGES} contact={DUMMY_USER} className='column is-9 is-12-touch is-flex' />\n        </div>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { RegisterView } from '../components/auth';\nimport { AuthHandler } from '../components/guard';\nimport { VIEW_CONTEXT } from '../lib';\n\n\nexport function Register() {\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({ showModal: false })\n    const [formState, setFormState] = useState({\n        first_name: '',\n        last_name: '',\n        password: '',\n        password_verify: '',\n        email: '',\n        phone_number: '',\n        showPassword: false,\n        showPasswordVerify: false\n    })\n\n    useEffect(() => {\n        viewCTX.showToolbar(false)\n        viewCTX.showFooter(false)\n\n        return () => {\n            viewCTX.showFooter(true)\n            viewCTX.showToolbar(true)\n        }\n    })\n\n    return (\n        <AuthHandler>\n            <div className='columns is-gapless is-fullheight is-multiline'>\n                <div className='column is-flex-centered is-atleast-fullheight'>\n                    <RegisterView />\n                </div>\n                <div className='column is-6 is-hidden-touch is-flex has-background-success' />\n            </div>\n        </AuthHandler>\n    )\n}","import { unix } from 'moment';\nimport React, { useContext, useState } from 'react';\nimport { FaApple, FaChevronRight, FaCogs, FaPaypal } from 'react-icons/fa';\nimport { Link, NavLink, Route, Switch } from 'react-router-dom';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport links from '../lib/links';\n\nexport function SettingsDetail({ title, children = <></> }) {\n    return (\n        <div className=\"container is-fluid settings-detail\">\n            <div className='content mb-0 py-4'>\n                <p className='has-text-weight-bold is-size-4 has-text-left has-text-centered-mobile'>{title}</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport function Settings() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <div className={`box px-0 py-0`} style={{ flexDirection: 'column', flex: 1 }}>\n                <div className='card-content is-paddingless is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\n                    <div className='level py-4 mb-0' style={{ boxShadow: '0 0.125em 0.25em rgba(10, 10, 10, .1)' }}>\n                        <div className='level-left-item is-size-6'>\n                            <p className=\"title is-size-6 has-text-weight-bold pl-4\">Settings</p>\n                        </div>\n                    </div>\n                    <div className='container is-flex is-fluid px-0'>\n                        <div className='columns mx-0 is-multiline' style={{ flexGrow: 1 }}>\n                            <div className='column is-2-fullhd is-3-desktop is-12 px-0'>\n                                <div className='container'>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.loginAndSecurity} exact>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Login and Security</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.paymentMethods}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Payment Methods</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.additionalFeatures}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Additional Features</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.legalDocuments}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Legal Documents</p>\n                                        </div>\n                                    </NavLink>\n                                </div>\n                            </div>\n                            <div className='column is-10-fullhd is-9-desktop is-12 is-flex px-0'>\n                                <Switch >\n                                    <Route path={links.loginAndSecurity} exact render={() => (\n                                        <LoginAndSecurity />\n                                    )} />\n                                    <Route path={links.paymentMethods} exact render={() => (\n                                        <PaymentMethods />\n                                    )} />\n                                    <Route path={links.legalDocuments} exact render={() => (\n                                        <LegalDocuments />\n                                    )} />\n                                    <Route render={() => (\n                                        <div className=\"container is-fluid is-flex-centered settings-detail py-6\">\n                                            <div className='content has-text-grey'>\n                                                <span className='my-4' ><FaCogs fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                                                <p className='is-uppercase is-size-6 has-text-weight-bold'>Manage your account</p>\n                                            </div>\n                                        </div>\n                                    )} />\n                                </Switch>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport function LoginAndSecurity() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Login and Security\"} children={(\n            <>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Email Address</p>\n                        <p className='subtitle has-text-grey'>Email address connected to your account</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control`}>\n                            <input className={`input ${state.editEmail ? '' : 'is-static'} has-text-black is-size-5 has-text-right has-text-centered-mobile`} value={state.email} contentEditable={false} disabled={!state.editEmail} onChange={e => setState({ ...state, email: e.target.value })} />\n                        </div>\n                        <div className='field is-grouped is-grouped-right'>\n                            <div className='control'>\n                                <button className='button' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\n                            </div>\n                            {state.editEmail ? (\n                                <div className='control'>\n                                    <button className={`button is-info ${state.isLoadingEmail ? 'is-loading' : ''}`} onClick={() => {\n                                        setState({ ...state, isLoadingEmail: true })\n                                    }}>Change</button>\n                                </div>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Phone Number</p>\n                        <p className='subtitle has-text-grey'>Your phone number provided upon signing-up</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control`}>\n                            <input className={`input is-static has-text-right has-text-black is-size-5 has-text-centered-mobile`} disabled value={ctx.user?.phoneNumber} />\n                        </div>\n                        <p className='subtitle has-text-grey'>Due to restrictions, contact support to modify your phone number</p>\n\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Password</p>\n                        <p className='subtitle has-text-grey'>Maintain a strong, unique password to protect your account</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control title`}>\n                            <button className='button is-link' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\n                        </div>\n                        <p className='subtitle has-text-grey'>{state.lastPasswordChanged ? `Last modified ${state.lastPasswordChanged.calendar()}` : \"Never Changed\"}</p>\n\n                    </div>\n                </div>\n            </>\n        )} />\n    )\n}\n\n\nexport function PaymentMethods() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Payment Methods\"} children={(\n            <>\n                <div className='columns is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Preferred Method</p>\n                        <p className='subtitle has-text-grey'>Selected method of payment for jobs</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>{'VI 534***1234 12/22'}</p>\n                        <Link to={`${links.paymentMethods}/change`} >Change</Link>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Other Methods</p>\n                    </div>\n                </div>\n                <div className='columns' style={{ borderTop: 0 }}>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className='button is-white is-large'>\n                            <span className='icon'>\n                                <FaApple size={80} />\n                            </span>\n                            <span>Apple Pay</span>\n                            <span className='icon'>\n                                <FaChevronRight size={20} />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className='button is-white is-large'>\n                            <span className='icon'>\n                                <FaPaypal size={80} />\n                            </span>\n                            <span>PayPal</span>\n                            <span className='icon'>\n                                <FaChevronRight size={20} />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='columns' style={{ borderBottom: 0 }}>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <Link to={`${links.paymentMethods}/add`}>+ Add a Payment Method</Link>\n                    </div>\n                </div>\n            </>\n        )} />\n    )\n}\n\n\nexport function LegalDocuments() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Legal Documents\"} children={(\n            <>\n                <Link to={`${links.legalDocuments}/useragreement`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >User Agreement</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/privacy`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Privacy Policy</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/terms`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Terms of Service</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/cookie`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Cookie Policy</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n            </>\n        )} />\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Footer } from './components/footer';\nimport { AuthGuard } from './components/guard';\nimport Toolbar from './components/toolbar';\nimport { Loading } from './components/util';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from './lib';\nimport './lib/firebase';\nimport links from './lib/links';\nimport { User } from './lib/user';\nimport { Dashboard } from './pages/dashboard';\nimport { Jobs } from './pages/jobs';\nimport { Login } from './pages/login';\nimport { Logout } from './pages/logout';\nimport { Messages } from './pages/messages';\nimport { Register } from './pages/register';\nimport { Settings } from './pages/settings';\n\nfunction App() {\n  const ctx = useContext(APPLICATION_CONTEXT)\n  const [state, setState] = useState({ ready: false, })\n  const [showFooter, setShowFooter] = useState(true)\n  const [_showToolbar, showToolbar] = useState(true)\n  const [signedIn, setSignedIn] = useState<null | User>(null)\n\n  const viewContext = {\n    signedIn,\n    setSignedIn,\n    setAppReady: (ready) => setState({ ...state, ready }),\n    showToolbar,\n    showFooter: (showFooter) => setShowFooter(showFooter)\n  }\n\n  useEffect(() => {\n    ctx.loginListener = () => {\n      if (ctx.signedIn()) {\n        viewContext.setSignedIn(ctx.user as User)\n      }\n    }\n\n    ctx.logoutListener = () => viewContext.setSignedIn(null)\n\n    ctx.ready.then((ready) => {\n      if (!ready) {\n        return console.log('Failed to start application due to an internal error.', 'Please contact application admin')\n      }\n      setState({ ...state, ready: true })\n    })\n      .catch(e => {\n        console.log(e)\n      })\n  }, [])\n\n  return (\n    <VIEW_CONTEXT.Provider value={viewContext}>\n      {state.ready ?\n        <>\n          {_showToolbar ? <Toolbar /> : null}\n          <div className='App-Body'>\n            <div className='is-fullheight'>\n              <Switch>\n                <Route component={Login} path={links.login} exact />\n                <Route component={Register} path={links.register} exact />\n                <Route component={Logout} path={links.logout} exact />\n\n                <AuthGuard component={Settings} path={links.settings} />\n                <AuthGuard render={(props) => {\n                  return <Redirect to={{ pathname: links.activeJobs, state: props.location.state }} />\n                }} path={links.jobs} exact />\n                <Route component={Jobs} path={links._jobItem.active} />\n                <AuthGuard component={Jobs} path={links._jobItem.inactive} />\n                <AuthGuard component={Messages} path={links._messages} />\n                <Route component={Dashboard} path={links.dashboard} exact />\n\n                <Route path={links.home} strict={false} exact={true}>\n                  {ctx.signedIn() && viewContext.signedIn ? <Redirect to={links.dashboard} /> : <Redirect to={links.login} />}\n                </Route>\n                <AuthGuard />\n              </Switch>\n            </div>\n          </div>\n          {showFooter ? <Footer /> : null}\n        </> :\n        <Loading />\n      }\n    </VIEW_CONTEXT.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@yaireo/tagify/dist/tagify.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ToastProvider } from 'react-toast-notifications';\nimport { BrowserRouter } from 'react-router-dom';\nimport { APPLICATION_CONTEXT, DEFAULT_APPLICATION } from \"./lib\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider autoDismiss={5000} placement='top-center'>\n      <BrowserRouter basename='/contractoradmin'>\n        <APPLICATION_CONTEXT.Provider value={DEFAULT_APPLICATION}>\n          <App />\n        </APPLICATION_CONTEXT.Provider>\n      </BrowserRouter>\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}