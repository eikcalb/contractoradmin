{"version":3,"sources":["logo.jpg","lib/config.ts","lib/storage.ts","lib/firebase.ts","lib/user.ts","lib/message.ts","lib/index.tsx","lib/links.ts","components/footer.tsx","components/guard.tsx","lib/theme.ts","components/toolbar.tsx","components/util.tsx","lib/job.ts","components/map.tsx","components/job.tsx","components/JobList.tsx","components/notification.tsx","lib/payment.ts","components/payment.tsx","pages/dashboard.tsx","lib/location.ts","components/jobcreation.tsx","components/JobSideList.tsx","pages/jobs.tsx","components/auth.tsx","pages/login.tsx","pages/logout.tsx","components/messages.tsx","pages/messages.tsx","pages/profile.tsx","pages/register.tsx","pages/settings.tsx","pages/invoices.tsx","App.tsx","serviceWorker.ts","index.tsx","logo_runner.jpg"],"names":["module","exports","CONFIG","name","description","version","hostname","Google","mapKey","KEYS","initializeStorage","app","a","lf","config","driver","INDEXEDDB","LOCALSTORAGE","WEBSQL","storeName","ready","localforage","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","geoFirestore","GeoFirestore","enablePersistence","synchronizeTabs","User","data","raw","token","jobType","activeTask","lastPasswordChanged","this","profilePhoto","id","initiateNetworkRequest","method","referrerPolicy","headers","Authorization","response","ok","Error","json","message","jsonResponse","user","getPhotoURL","console","log","collection","doc","get","snap","docs","forEach","text","first_name","last_name","push","ctx","callback","err","noop","limit","query","unsubscribe","orderBy","onSnapshot","notifications","item","location","address","location_address","role","firstName","lastName","occupation","city","state","starRate","email","password","phoneNumber","profileBio","dateCreated","accountStatus","workHistory","educationalBackground","skills","licenses","star_rate","date_created","account_status","educational_background","phone_number","profile_photo","DUMMY_USER","Date","now","db","Message","content","sender","old","moment","createdAt","time1","time2","day","b","_id","avatar","chat","initialized","chatItem","generateID","recipient","newMessage","FieldValue","serverTimestamp","runTransaction","txn","set","users","last_message","read","merge","serialize","where","chats","messages","toDate","unshift","DEFAULT_SETTINGS","lastUserName","DEFAULT_APPLICATION","settings","logoutListener","loginListener","Promise","res","rej","init","getItem","appData","info","inflateUser","options","JSON","stringify","setItem","path","request","authenticated","isJson","Accept","reqObj","mode","fetch","resp","status","reauthenticate","logout","session","phone","trim","validator","isMobilePhone","startsWith","encodeURIComponent","valid","channel","body","username","code","validateLogin","success","getUser","userName","persistUser","matches","validateRegister","password_verify","isEmail","undefined","removeItem","APPLICATION_CONTEXT","createContext","VIEW_CONTEXT","setSignedIn","signedIn","setAppReady","showToolbar","show","showFooter","footer","active","inactive","Footer","useContext","className","getFullYear","to","links","AuthGuard","children","rest","viewCTX","useLocation","pathname","from","AuthHandler","timer","STYLES","toolbar","boxShadow","appLogoIcon","fontSize","marginRight","color","appLogoText","fontWeight","jobProgressBar","height","Toolbar","useState","showMenu","setState","style","aria-label","src","logo","width","aria-expanded","data-target","onClick","clearTimeout","setTimeout","aria-hidden","exact","activeClassName","type","placeholder","Empty","icon","onDismiss","props","Loading","alignItems","padding","max","CardFragment","header","optionsElement","optionsText","onOptionsTextClick","useLoadGoogleMaps","loading","setLoading","useEffect","Loader","libraries","load","then","JOB_TYPES","Job","job","photos","posted_by","job_title","salary","wage","tasks","length","job_description","required_count","coordinates","GeoPoint","coords","latitude","longitude","newDoc","photo_files","FormData","map","photo","append","apiResponse","jobID","delete","native","jobs","resolve","added","modified","removed","docChanges","change","MapView","memo","title","vertical","zoom","zoomControl","mapEl","useRef","setMap","marker","setMarker","current","_mapInstance","google","maps","Map","center","lat","lng","gestureHandling","mapTypeControl","fullscreenControl","Marker","position","animation","Animation","DROP","setCenter","setPosition","backgroundColor","minHeight","ref","JobListItem","time","whiteSpace","textOverflow","overflow","job_type","flexDirection","flex","justifyContent","calendar","sameElse","value","JobItem","PendingJobItem","key","endTime","toMillis","date_completed","overflowX","progress","lineHeight","JobDetail","onCancel","fill","zIndex","JobDetailTask","onJobCancel","borderLeft","JobDetailUser","startTime","totalTime","loadingCancel","addToast","useToasts","unix","diff","useCallback","window","confirm","cancelJob","appearance","JobReview","task","toFixed","alignSelf","disabled","borderBottom","border","onError","img","currentTarget","JobList","Array","listenForActiveJobs","all","v","executed_by","getExternalUser","background","j","NotificationContext","addNotification","notif","NotificationProvider","setNotifications","notification","listenForNotifications","Provider","NotificationItem","borderRadius","getNotificationIcon","maxLines","fromNow","NotificationList","expanded","setExpanded","notifCtx","size","transition","n","index","TRANSACTION_STATUS","CurrencyFormatter","Intl","NumberFormat","currency","maximumFractionDigits","Payment","page","timestamp","cost","amount","payee","result","invoices","payment","format","PaymentItem","getPaymentDescription","PaymentList","payments","setPayments","fetchPayment","pageToFetch","Math","floor","getTransactions","paymentData","p","Dashboard","marginBottom","getCurrentLocation","navigator","geolocation","getCurrentPosition","enableHighAccuracy","maximumAge","FormField","listener","autocomplete","label","onChange","readOnly","locationAutocomplete","tagifyRef","required","whitelist","tags","showBorder","containerClassName","isTextArea","maxLength","Number","MAX_SAFE_INTEGER","helpTextTop","helpTextLeft","helpTextRight","hasAddons","addon","inputRef","loadingGoogleMaps","places","Autocomplete","fields","addListener","place","getPlace","formatted_address","geometry","place_id","remove","unbindAll","event","clearInstanceListeners","autoComplete","enabled","rightKey","e","persist","target","borderRight","inputMode","FileInput","onRemovePhoto","el","files","i","multiple","accept","file","CreateJob","onClose","onComplete","requiredPersons","price","loadingTypes","fetchingLocation","manualAddress","setPhotos","types","useMemo","jobTypes","createRef","getJobTypes","tagify","dropdown","hide","call","onSubmit","stopPropagation","preventDefault","parse","newJob","parseInt","v4","accuracy","altitude","heading","altitudeAccuracy","speed","isEmpty","find","addNewJob","filter","_","JobSideList","activeJobs","isActive","inactiveJobs","onCreateNew","activeSearchData","setActiveSearchData","inactiveSearchData","setInactiveSearchData","searchText","setSearchText","isLoading","setIsLoading","searchAlg","regexp","RegExp","search","triggerSearch","useDebouncedCallback","overflowY","render","Jobs","showModal","selected","setActive","setInactive","dismissModal","containers","document","getElementsByClassName","removeEscapeHandler","handler","ev","addEventListener","removeEventListener","useEscapeHandler","listenForActiveAndPendingJobs","getInactiveJobs","catch","useParams","activeMatch","useRouteMatch","strict","inactiveMatch","RegisterView","showCodeRequest","showPassword","showPasswordVerify","formState","setFormState","history","useHistory","addAdmin","margin","LoginView","onSubmitCodeRequest","form","validateNumber","triggerVerification","onSubmitVerified","login","CodeRequestForm","LoginForm","intervalID","showOptions","hold","holdTimer","viewState","setView","onSubmitForm","counter","clearInterval","setInterval","pattern","minLength","Login","Logout","ChatContext","setChats","ChatListProvider","triggerListener","listenForChats","parsed","serverTimestamps","existing","parsedChats","MessageListItem","MessageItem","isCurrentUser","prevMessage","diffDay","isDifferentDay","flexGrow","profileImageURL","MessageList","onNewChat","onOptionsClick","searchedChat","setSearchedChat","results","m","MessageDetail","setMessages","setText","sending","setSending","userView","setUserView","sectionRef","sendMessage","listenForChatMessages","scrollHeight","clientHeight","scrollTop","scroll","activeElement","focus","paddingBottom","left","right","bottom","borderTop","autoFocus","Messages","setChat","Profile","setUser","comments","setComments","loadingComments","setLoadingComments","getComments","commentsData","top","comment","skill","license","license_number","expiration_date","Register","SettingsDetail","Settings","LoginAndSecurity","PaymentMethods","LegalDocuments","editEmail","isLoadingEmail","contentEditable","Invoices","setInvoices","getInvoices","display","minWidth","invoice","invoiceReference","jobTitle","deployee","paymentMethod","invoiceURL","App","setShowFooter","_showToolbar","viewContext","component","Boolean","match","ReactDOM","StrictMode","autoDismiss","placement","basename","getElementById","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.9ee88a7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0b76fcc5.jpg\";","import { Config } from \".\";\n\nconst CONFIG: Config = {\n    name: 'Gigchasers Admin',\n    description: 'Gigchasers admin dashboard',\n    version: '1.0',\n    hostname: 'https://contractor-app-test-api.herokuapp.com/v1',\n    // hostname: 'http://localhost:3001/v1',\n    Google: {\n        mapKey: 'AIzaSyDJYsVNmPa73T-okzgJTs3UKiUReJ8iHsU'\n    }\n}\n\nexport default CONFIG","import lf from \"localforage\";\nimport { Application } from \".\";\n\nexport const KEYS = {\n    USER_SESSION: 'app.user.session',\n    REFRESH_TOKEN: 'app.user.refreshtoken',\n    APP_DATA: 'app.data'\n}\n\nexport async function initializeStorage(app: Application) {\n    lf.config({\n        driver: [\n            lf.INDEXEDDB,\n            lf.LOCALSTORAGE,\n            lf.WEBSQL\n        ],\n        name: `${app.config.name} v${app.config.version}`,\n        version: 1,\n        storeName: 'adminstore',\n        description: 'Storage for Contractor application administrative interface'\n    })\n\n    await lf.ready()\n}\n\nexport const localforage = lf\n","import firebase from \"firebase/app\";\n// Required for side-effects\nimport \"firebase/firestore\";\nimport { GeoFirestore } from \"geofirestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjXx1AqIQnkyKkCPh8HZKZYyiKGfiLcbc\",\n  authDomain: \"contracting-app.firebaseapp.com\",\n  databaseURL: \"https://contracting-app.firebaseio.com\",\n  projectId: \"contracting-app\",\n  storageBucket: \"contracting-app.appspot.com\",\n  messagingSenderId: \"557426956160\",\n  appId: \"1:557426956160:web:c1393a9710ed0e40151365\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore(),\n  geoFirestore = new GeoFirestore(firestore)\n\n  firestore.enablePersistence({\n    synchronizeTabs:true\n  })","import { Application } from \".\";\nimport { INotification } from \"../components/notification\";\nimport { IEducationHistory, ILicense } from \"./education\";\nimport { firestore } from \"./firebase\";\nimport { IJobHistory } from \"./job\";\n\nexport const DUMMY_TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdlMDFmOTBiMjRmNzAwMTcyZmRkOTQiLCJlbWFpbCI6Inp6QGdtYWlsLmNvbSIsInBob25lX251bWJlciI6IisyMzQ4MDgzODIxNzgyIiwiaWF0IjoxNjE1NjYzNDQ4fQ.nHEwobqCa4yT1z27ydwpSHPg_6s4CEp1QarlJGU1HUo\"\nexport const DUMMY_TOKEN_SECRET = \"secret\"\n\nclass AppUser {\n    id\n    role: string\n    firstName: string\n    lastName: string\n    occupation: string\n    city: string\n    state: string\n    starRate: number = 5.0\n    email: string\n    password?: string\n    phoneNumber: string\n    profilePhoto: string\n    profileBio?: string\n    dateCreated?: Date\n    accountStatus: string = \"Pending\"\n    workHistory: IJobHistory[] = []\n    educationalBackground: IEducationHistory[] = []\n    skills: string[] = []\n    licenses: ILicense[] = []\n\n    constructor(data, raw?: boolean) {\n        if (raw) {\n            this.role = data.role\n            this.firstName = data.first_name\n            this.lastName = data.last_name\n            this.occupation = data.occupation\n            this.starRate = data.star_rate\n            this.dateCreated = data.date_created\n            this.city = data.city\n            this.email = data.email\n            this.accountStatus = data.account_status\n            this.educationalBackground = data.educational_background\n            this.phoneNumber = data.phone_number\n            this.profilePhoto = data.profile_photo\n            this.state = data.state\n            this.skills = data.skills\n        } else {\n            this.role = data.role\n            this.firstName = data.firstName\n            this.lastName = data.lastName\n            this.occupation = data.occupation\n            this.starRate = data.starRate\n            this.dateCreated = data.dateCreated\n            this.city = data.city\n            this.email = data.email\n            this.accountStatus = data.accountStatus\n            this.educationalBackground = data.educationalBackground\n            this.phoneNumber = data.phoneNumber\n            this.profilePhoto = data.profilePhoto\n            this.state = data.state\n            this.skills = data.skills\n        }\n\n        this.id = data.id\n    }\n}\n\nexport class User extends AppUser {\n    get profileImageURL() {\n        return this.profilePhoto\n    }\n    token\n    jobType?: \"onsite\" | \"remote\"\n    activeTask\n    lastPasswordChanged?: number\n\n    constructor(data, raw?: boolean) {\n        super(data, raw)\n        this.token = data.token\n        this.jobType = data.jobType\n        this.activeTask = data.activeTask\n        this.lastPasswordChanged = data.lastPasswordChanged\n    }\n\n    /**\n     * \n     * @param app Application object\n     * @param id Identity of user whose detail will be fetched\n     * @param token Secret token obtained from logging into the application.\n     */\n    static async getUser(app: Application, id: string, token: string) {\n        try {\n            const response = await app.initiateNetworkRequest(`/users/${id}`, {\n                method: 'GET',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    Authorization: `Bearer ${token}`\n                },\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Failed to fetch user data!\")\n            }\n\n            const jsonResponse = await response.json()\n            const user = new User(jsonResponse, true)\n            user.id = id\n            user.token = token\n            user.profilePhoto = User.getPhotoURL(app, id)\n\n            return user\n\n        } catch (e) {\n            throw e\n        }\n    }\n\n    /**\n       * \n       * @param app Application object\n       * @param id Identity of user whose detail will be fetched\n       */\n    static async getExternalUser(app: Application, id: string): Promise<User> {\n        try {\n            const response = await app.initiateNetworkRequest(`/users/${id}`, {\n                method: 'GET',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }, true)\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Failed to fetch user data!\")\n            }\n\n            const jsonResponse = await response.json()\n            const user = new User(jsonResponse, true)\n            user.id = id\n            user.profilePhoto = User.getPhotoURL(app, id)\n\n            return user\n        } catch (e) {\n            console.log('failed to fetch user data', e)\n            return new User({})\n        }\n    }\n\n    static async getComments(id: string): Promise<{ text: string, first_name: string, last_name: string }[]> {\n        if (!id) {\n            return []\n        }\n        const snap = await firestore.collection('comments').doc(id).collection('messages').get()\n        const docs: { text: string, first_name: string, last_name: string }[] = []\n        snap.forEach(({ text, first_name, last_name }: any) => docs.push({ text, first_name, last_name }))\n        return docs\n    }\n\n\n    static listenForNotifications(ctx: Application, callback = (err: Error | null, noop?: INotification[] | null) => { }, limit = 100) {\n        let query = firestore.collection('notifications')\n\n        // TODO: limit notifications displayed to non-admin\n        const unsubscribe = query.orderBy('dateCreated', 'desc').limit(limit).onSnapshot(async snap => {\n            const notifications: INotification[] = [];\n            (snap).forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                notifications.push(item)\n            })\n            callback(null, notifications)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n\n    static getPhotoURL(app: Application, id) {\n        return `${app.config.hostname}/images/${id}.jpg`\n    }\n\n}\n\nexport const DUMMY_USER: User = new User({})\n\nDUMMY_USER.firstName = \"Johnathan\"\nDUMMY_USER.lastName = \"Doe\"\nDUMMY_USER.id = 'unique'\nDUMMY_USER.email = 'a@example.com'\nDUMMY_USER.profileBio = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ullam vero iure, ducimus, explicabo vel nesciunt eveniet, enim quis quos ex autem!\"\nDUMMY_USER.jobType = 'onsite'\nDUMMY_USER.phoneNumber = '080838111111'\nDUMMY_USER.starRate = 4.2\nDUMMY_USER.lastPasswordChanged = Date.now()\nDUMMY_USER.dateCreated = new Date(\"20/07/2020\")\nDUMMY_USER.skills = ['Farming', 'Poultry']\n// DUMMY_USER.profileImageURL = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTv3f3Zf2onEOPtpRtWPoRX6SWQUSpV_GBB6Q&usqp=CAU\"\n","import firebase from 'firebase';\nimport moment from 'moment';\nimport { Application } from \".\";\nimport { firestore } from \"./firebase\";\nimport { User } from \"./user\";\n\nexport interface IChatItem {\n    last_message?: {\n        text: string\n        createdAt: Date\n        read: false\n        /**\n         * userID of the user who sent the last message to this chat thread\n         */\n        user: string\n    }\n    initialized: boolean\n    users: User[]\n    id: string\n\n    recipient: User\n\n}\n\n\nexport interface IMessage {\n    type: 'text' | 'image' | 'attachment'\n    _id: string | number\n    text: string\n    createdAt: any\n    user: User\n    image?: string\n    video?: string\n    audio?: string\n    system?: boolean\n    sent?: boolean\n    received?: boolean\n    pending?: boolean\n}\n\nconst db = firestore.collection('chats')\n\nexport class Message {\n    content\n    sender\n\n    isSameUser(message: Message) {\n        return message.sender === this.sender\n    }\n\n\n    static isDifferentDay(message: IMessage, old?: IMessage) {\n        if (!old) {\n            return moment(message.createdAt)\n        }\n        const time1 = moment(message.createdAt)\n        const time2 = moment(old.createdAt)\n\n        if (time1.day() === time2.day()) {\n            return false\n        }\n\n        return time1\n    }\n\n    static generateID(a: string, b: string) {\n        return a > b ? a + b : b + a\n    }\n\n    static serialize(data: Partial<IMessage>) {\n        return {\n            ...data, user: {\n                _id: data?.user?.id || null,\n                avatar: data?.user?.profilePhoto || null,\n                name: `${data.user?.firstName} ${data.user?.lastName}`\n            }\n        }\n    }\n\n    static async sendMessage(app: Application, chat: IChatItem, message: Partial<IMessage>) {\n        if (!message) {\n            throw new Error('Cannot send empty message!')\n        }\n        let chatItem: firebase.firestore.DocumentReference<firebase.firestore.DocumentData>\n        if (!chat.initialized) {\n            // initialize chat\n            const id = Message.generateID(app.user?.id, chat.recipient.id)\n            chatItem = db.doc(id)\n        } else {\n            chatItem = db.doc(chat.id)\n        }\n        const newMessage = chatItem.collection('messages').doc()\n        message._id = newMessage.id\n        message.createdAt = firebase.firestore.FieldValue.serverTimestamp()\n        await firestore.runTransaction(async (txn) => {\n            await txn.set(chatItem, { id: chatItem.id, users: [app.user!.id, chat.recipient.id], initialized: true, last_message: { text: message.text, createdAt: message.createdAt, read: false, user: app.user?.id } }, { merge: true })\n            await txn.set(newMessage, Message.serialize(message))\n        })\n    }\n\n    static listenForChats(app: Application, callback: (err?: Error | null, data?: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>[] | null) => any) {\n        let query = db\n        .where(\"users\", 'array-contains', app.user?.id)\n        .where('initialized', '==', true)\n        .orderBy(\"last_message.createdAt\", 'desc')\n        const unsubscribe = query.onSnapshot(async snap => {\n            const chats: any[] = [];\n            snap.forEach(doc => {\n                chats.push(doc)\n            })\n            callback(null, chats)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n\n    static listenForChatMessages(app: Application, chat: IChatItem, callback, limit = 50) {\n        let query = db.doc(chat.id)\n            .collection('messages')\n            .orderBy(\"createdAt\", 'desc')\n        const unsubscribe = query.limit(limit).onSnapshot(async snap => {\n            const messages: IMessage[] = [];\n            snap.forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.user._id === app.user?.id) {\n                    item.user = app.user\n                } else {\n                    item.user = chat.recipient\n                }\n                item.createdAt = item.createdAt.toDate()\n                messages.unshift(item)\n            })\n            callback(null, messages)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n}\n","import { createContext } from \"react\"\nimport validator from \"validator\"\nimport { IRegister } from \"../components/auth\"\nimport CONFIG from \"./config\"\nimport { initializeStorage, KEYS, localforage } from \"./storage\"\nimport { DUMMY_USER, User } from \"./user\"\nimport { Message } from \"./message\";\n\ninterface ISettings {\n    lastUserName: string\n}\n\nconst DEFAULT_SETTINGS = {\n    lastUserName: ''\n}\n\nexport class Application {\n    config: Config\n    user?: User\n    ready: Promise<boolean>\n\n    protected settings: ISettings = DEFAULT_SETTINGS\n\n    logoutListener?: () => any\n    loginListener?: () => any\n\n    constructor(config: Config) {\n        this.config = config\n        this.ready = new Promise(async (res, rej) => {\n            try {\n                await this.init()\n                res(true)\n            } catch (e) {\n                // if an error occurred during initialization, throw the error and handle within the application\n                console.log(e)\n                return rej(e)\n            }\n        })\n    }\n\n    /**\n     * Initialize application dependencies.\n     * \n     * Dependencies that fail to load should fail silently at this stage, unless required for application to function.\n     */\n    async init() {\n        await initializeStorage(this)\n\n        try {\n            const appData: ISettings | null = await localforage.getItem(KEYS.APP_DATA)\n            if (appData) {\n                this.settings = appData\n            }\n        } catch (e) {\n            console.info(e, 'No app data persisted!')\n        }\n\n        // check for existing user session\n        try {\n            await this.inflateUser()\n            // If user session exists, trigger login listener\n            if (this.loginListener) {\n                this.loginListener()\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n        return true\n    }\n\n\n    signedIn(): boolean {\n        return this.user && this.user?.token\n    }\n\n\n    async updateSettings(options: Partial<ISettings>) {\n        if (!options) {\n            throw new Error('Empty options provided!')\n        }\n        if (JSON.stringify(options) === JSON.stringify(this.settings)) {\n            return\n        }\n\n        this.settings = {\n            ...this.settings,\n            ...options\n        }\n\n        return await localforage.setItem(KEYS.APP_DATA, this.settings)\n    }\n\n    async initiateNetworkRequest(path: string, request?: RequestInit, authenticated = false, isJson = true): Promise<Response> {\n        const headers = {\n            ...request?.headers,\n            Accept: 'application/json',\n            Authorization: authenticated ? `Bearer ${this.user?.token}` : request?.headers?.['Authorization'],\n        }\n\n        if (isJson) {\n            headers['Content-Type'] = 'application/json'\n        }\n        \n        const reqObj: RequestInit = {\n            ...request,\n            referrerPolicy: 'no-referrer',\n            mode: 'cors',\n            headers\n        }\n\n        const resp = await fetch(`${this.config.hostname}${path}`, reqObj)\n        if (resp.status === 401) {\n            if (!this.user) {\n                throw new Error(\"Unauthenticated access not allowed!\")\n            }\n            // Authorization failed. This usually means the token has expired and refresh token could not be used to regenerate token\n            //\n            // Try to reauthenticate the user\n            try {\n                const { token } = await this.reauthenticate()\n                this.user.token = token\n                // since token is generated already, retry the request\n                if (reqObj && reqObj.headers && reqObj.headers['Authorization']) {\n                    reqObj.headers['Authorization'] = `Bearer ${token}`\n                }\n                return await this.initiateNetworkRequest(path, reqObj)\n            } catch (e) {\n                await this.logout()\n                throw e || new Error(\"App session expired. Login to continue!\")\n            }\n        }\n        return resp\n    }\n\n    protected async reauthenticate(): Promise<{ token: string }> {\n        // No logic to reauthenticate. Throw error, forcing user to logout.\n        throw new Error(\"Failed to authenticate user!\")\n    }\n\n    protected async inflateUser() {\n        // inflate user session\n        let session: User | null = await localforage.getItem(KEYS.USER_SESSION)\n        if (!session) throw new Error(\"No session available for user!\")\n\n        this.user = new User(session)\n        return this.user\n    }\n\n    protected async persistUser() {\n        if (!this.user) {\n            throw new Error('No user created!')\n        }\n\n        await localforage.setItem(KEYS.USER_SESSION, this.user)\n    }\n\n    async validateNumber(phone: string) {\n        if (!phone) {\n            throw new Error(\"Phone number must be provided!\")\n        }\n        phone = phone.trim()\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n\n        const response = await this.initiateNetworkRequest(`/users/phone/${encodeURIComponent(phone)}`, {\n            method: 'GET',\n        })\n\n        if (!response.ok) {\n            throw new Error((await response.json())?.message || \"Verification failed!\")\n        }\n\n        const jsonResponse = await response.json()\n        if (!jsonResponse.valid) {\n            throw new Error('Invalid phone number (ensure phone number is associated with a user)!')\n        }\n\n        return true\n    }\n\n    async triggerVerification(phone: string, channel: string = 'sms') {\n        if (!phone) {\n            throw new Error(\"Phone number must be provided!\")\n        }\n        phone = phone.trim()\n\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n\n        const response = await this.initiateNetworkRequest('/users/sms_registration', {\n            method: 'POST',\n            body: JSON.stringify({ phone_number: phone, channel })\n        })\n        if (!response.ok) {\n            throw new Error((await response.json())?.message || \"Verification failed!\")\n        }\n\n        return true\n    }\n\n    async login(username, code, password) {\n        try {\n            await this.validateLogin(username, code, password)\n\n            const response = await this.initiateNetworkRequest('/users/login', {\n                method: 'POST',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({ phone_number: username, code, password })\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Login failed!\")\n            }\n\n            const jsonResponse = await response.json()\n            if (!jsonResponse.success) {\n                throw new Error(\"Login failed!\")\n            }\n            this.user = await User.getUser(this, jsonResponse.userName, jsonResponse.token)\n            if (this.user.role !== 'admin') {\n                // TODO: Decide the kind of users that can access this webapp\n                // throw new Error(\"Authenticated access only allowed for administrators!\")\n            }\n\n            await this.persistUser()\n            if (this.loginListener) {\n                this.loginListener()\n            }\n\n            return this.user\n\n        } catch (e) {\n            throw e\n        }\n    }\n\n    protected async validateLogin(phone: string, code: string, password: string) {\n        if (!phone || !password || !code) {\n            throw new Error(\"Credentials not provided!\")\n        }\n        phone = phone.trim()\n\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n        if (!validator.matches(password, /.{6,}/i)) {\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\n        }\n        if (!validator.matches(code, /[0-9]{4}/)) {\n            throw new Error(\"Invalid code provided (provided code must have 4 digits)!\")\n        }\n    }\n\n    async addAdmin(data: IRegister) {\n        try {\n            await this.validateRegister(data)\n\n            const response = await this.initiateNetworkRequest('/users/new', {\n                method: 'POST',\n                body: JSON.stringify({\n                    ...data,\n                    role: 'admin',\n                    account_status: 'pending'\n                })\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message)\n            }\n\n            const jsonResponse = await response.json()\n\n            return jsonResponse\n        } catch (e) {\n            throw e\n        }\n    }\n\n    protected async validateRegister(data: IRegister) {\n        let { email, password, first_name, last_name, password_verify, phone_number } = data\n        if (!email || !password) {\n            throw new Error(\"Credentials not provided!\")\n        }\n        if (password !== password_verify) {\n            throw new Error('Passwords do not match!')\n        }\n        email = email.trim()\n        first_name = first_name.trim()\n        last_name = last_name.trim()\n        if (!first_name || !last_name) {\n            throw new Error('Firstname and lastname must be provided!')\n        }\n        if (!email || !validator.isEmail(email)) {\n            throw new Error(\"Invalid username provided!\")\n        }\n        if (!phone_number || !validator.isMobilePhone(phone_number)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone_number.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n        if (!validator.matches(password, /.{6,}/i)) {\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\n        }\n    }\n\n\n    async logout() {\n        new Message()\n        this.user = undefined\n        await localforage.removeItem(KEYS.USER_SESSION)\n        //await localforage.removeItem(KEYS.REFRESH_TOKEN)\n        if (this.logoutListener) {\n            this.logoutListener()\n        }\n    }\n}\n\nexport const DEFAULT_APPLICATION = new Application(CONFIG)\n/**\n * This is the application context used within the web application.\n * \n * This context provided the application engine and is not tied to any view rendering.\n * \n * The underlying aplication object exposes the required functions and do not modify the view.\n * This underlying object is made available to all React components via the application context.\n * \n * All view rendering is managed in React.\n * \n * **VIEW RENDERING SHOULD NOT DEPEND ON ANY PROPERTY OF THIS CONTEXT**\n */\nexport const APPLICATION_CONTEXT = createContext<Application>(DEFAULT_APPLICATION)\n\n/**\n * This context is used for managing the views within the web app.\n * Activities such as loading and splashscreen are implemented using this context.\n */\nexport const VIEW_CONTEXT = createContext<{\n    setSignedIn: any,\n    signedIn: null | User,\n    setAppReady: any,\n    showToolbar: any,\n    showFooter: any\n}>({\n    setSignedIn: (signedIn) => { },\n    signedIn: null,\n    setAppReady: (ready: boolean) => { },\n    showToolbar: (show: boolean) => { },\n    showFooter: (footer) => { }\n})\n\nexport interface Config {\n    name: string\n    version: string\n    description: string\n    hostname: string\n    Google: {\n        mapKey: string\n    }\n}\n","export default {\n    register: '/register',\n    login: '/login',\n    messages: '/messages',\n    _messages: '/messages/:id?',\n    home: '/',\n    dashboard: '/dashboard',\n    invoices: '/invoices',\n    jobs: '/jobs',\n    activeJobs: '/jobs/active',\n    inactiveJobs: '/jobs/inactive',\n    _jobItem: {\n        active: '/jobs/active/:id?',\n        inactive: '/jobs/inactive/:id?'\n    },\n    privacyPolicy: '/privacyPolicy',\n    termsOfService: '/terms',\n    profile: '/profile',\n    _profile: '/profile/:id',\n    helpCenter: '/help',\n    logout: '/logout',\n    settings: '/settings',\n    loginAndSecurity: '/settings',\n    paymentMethods: '/settings/payment',\n    additionalFeatures: '/settings/features',\n    legalDocuments: '/settings/legal'\n}","import React, { useContext } from \"react\";\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport links from '../lib/links'\nimport { Link } from \"react-router-dom\";\n\nexport function Footer() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    return (\n        <footer className='footer is-unselectable' >\n            <div className=\"content has-text-centered is-size-7-touch\">\n                <p>&copy; {ctx.config.name} {new Date().getFullYear()}. All Rights Reserved | <Link to={links.privacyPolicy}>Privacy Policy</Link> | <Link to={links.termsOfService}>Terms of Service</Link> </p>\n            </div>\n        </footer>\n    )\n}","import React, { useContext } from \"react\"\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from \"../lib\"\nimport { Redirect, Route, useLocation, useHistory, RouteProps } from \"react-router-dom\"\nimport links from \"../lib/links\"\n\n/**\n * HOC (high order component) for rendering private views only if the user is authenticated.\n * \n * @param children View to render if authenticated\n */\nexport function AuthGuard({ children, ...rest }: RouteProps) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const location = useLocation()\n\n    return (\n        <Route {...rest}>\n            {ctx.signedIn() && viewCTX.signedIn ? (\n                children\n            ) : (\n                    <Redirect to={{\n                        pathname: links.login,\n                        state: {\n                            from: location\n                        }\n                    }} />\n                )\n            }\n        </Route>\n    )\n}\n\n/**\n * HOC for rendering components based on the authenticated state of the application.\n * This HOC is used for conditionally rendering authentication views (like login pages) or redirect if the user is already authenticated.\n * \n * @param children View to render\n */\nexport function AuthHandler({ children }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const location = useLocation()\n\n    if (ctx.signedIn() && viewCTX.signedIn) {\n        const { from } = (location.state as any) || { from: { pathname: '/' } }\n        return <Redirect to={from} />\n    } else {\n        return children\n    }\n}","import React from 'react'\n\nexport const STYLES: { [key: string]: React.CSSProperties } = {\n    toolbar: {\n        boxShadow: \"-2px 2px 3px 0px #8888\",\n        // background: \"#282c34\",\n    },\n    appLogoIcon: {\n        fontSize: '2em',\n        marginRight: '.5em',\n        color: 'blue'\n    },\n    appLogoText: {\n        fontSize: '1.2em',\n        fontWeight: 'bold'\n    },\n    jobProgressBar:{\n        height:'.4em'\n    }\n}","import React, { useState, useContext, useCallback } from 'react'\nimport { STYLES } from '../lib/theme'\nimport { FaJoint, FaUser, FaContao, FaCog, FaSearch } from \"react-icons/fa\";\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\nimport { Link, NavLink } from 'react-router-dom';\nimport links from '../lib/links';\nimport logo from '../logo.jpg'\n\nconst AUTOHIDE_TIMEOUT = 20000\nlet timer: any\n// TODO: build your own toolbar styling.\n\nexport default function Toolbar() {\n    const [state, setState] = useState({ showMenu: false })\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const vctx = useContext(VIEW_CONTEXT)\n    const toggleMenu = () => {\n        // Clear the existing timer for closing menu and then hide/show the menu\n        clearTimeout(timer)\n        if (state.showMenu) {\n            setState({ ...state, showMenu: false })\n        } else {\n            setState({ ...state, showMenu: true })\n            timer = setTimeout(() => {\n                setState({ ...state, showMenu: false })\n            }, AUTOHIDE_TIMEOUT)\n        }\n    }\n\n    return (\n        <nav className='navbar' role='navigation' style={STYLES.toolbar} aria-label='main navigation'>\n            <div className='navbar-brand'>\n                <Link className='navbar-item' to={links.home}>\n                    <img src={logo} width=\"112\" height=\"28\" />\n                </Link>\n                <a role=\"button\" className={`navbar-burger burger ${state.showMenu ? 'is-active' : ''}`} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbar\" onClick={toggleMenu}>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n            <div className={`navbar-menu ${state.showMenu ? 'is-active' : ''}`} >\n                <div className='navbar-start'>\n                    <NavLink to={links.dashboard} exact activeClassName='is-active' className='navbar-item is-tab'>Dashboard</NavLink>\n                    <NavLink to={links.messages} activeClassName='is-active' className='navbar-item is-tab'>Messages</NavLink>\n                    <NavLink to={links.invoices} activeClassName='is-active' className='navbar-item is-tab'>Invoices</NavLink>\n                    <NavLink to={links.jobs} activeClassName='is-active' className='navbar-item is-tab'>Jobs</NavLink>\n                </div>\n                <div className='navbar-end'>\n                    <div className='navbar-item'>\n                        <div className='field'>\n                            <p className='control has-icons-left'>\n                                <input className='input is-rounded' type='search' placeholder='Type to search...' />\n                                <span className='icon is-small is-left'><FaSearch className='is-size-5' /></span>\n                            </p>\n                        </div>\n                    </div>\n                    <div className='navbar-item has-dropdown is-hoverable'>\n                        <span className='navbar-link'>\n                            {`${ctx.user?.firstName} ${ctx.user?.lastName}`}\n                        </span>\n                        <div className='navbar-dropdown'>\n                            <Link to={{ pathname: `${links.profile}/${ctx.user?.id}` }} className='navbar-item'>Profile</Link>\n                            <Link to={links.helpCenter} className='navbar-item'>Help Center</Link>\n                            <Link to={links.logout} className='navbar-item'>Sign Out</Link>\n                        </div>\n                    </div>\n                    <div className='navbar-item'>\n                        <Link to={links.settings} className='button is-rounded is-light is-fullwidth'><FaCog /></Link>\n                    </div>\n                </div>\n            </div>\n        </nav >\n    )\n}","import React, { ReactChild, useEffect, useState, useContext, HTMLAttributes } from 'react'\nimport { FaExclamationCircle } from 'react-icons/fa';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { APPLICATION_CONTEXT } from '../lib';\n\nexport function Empty({ content, icon, onDismiss, children, text, ...props }: { text?: string, content?: ReactChild, icon?: ReactChild, onDismiss?: any, children?: ReactChild } & HTMLAttributes<HTMLDivElement>) {\n    return (\n        <div {...props} className={`notification px-4 is-light is-uppercase is-warning has-text-centered ${props.className}`}>\n            {!!onDismiss && <button onClick={onDismiss} className='delete'></button>}\n            {icon ? icon :\n                <FaExclamationCircle className='has-text-warning-dark is-size-4 mb-2' />\n            }\n            {children ?\n                children :\n                content ? content :\n                    <p className='block has-text-grey is-size-7'>{text || 'No data'}</p>\n            }\n        </div>\n    )\n}\n\nexport function Loading() {\n    return (\n        <section className='hero is-fullheight is-bold is-flex-centered' style={{ alignItems: 'stretch', padding: '2em' }}>\n            <div className='hero-body is-flex-centered has-text-centered'>\n                <div className='column is-4 is-12-mobile'>\n                    <div className='section px-6'>\n                        <progress className=\"progress is-small is-danger\" max=\"100\">loading</progress>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport function CardFragment({ header, optionsElement, optionsText, onOptionsTextClick, children, style }: { header: string, optionsElement?: React.ReactChild, optionsText?: any, onOptionsTextClick?: any, children?: any, style?: React.CSSProperties }) {\n    return (\n        <div className=\"card\" style={style}>\n            <header className='card-header'>\n                <p className='card-header-title'>{header}</p>\n                <p className='card-header-icon'>\n                    {optionsElement ?\n                        optionsElement :\n                        <span className='has-text-link' onClick={onOptionsTextClick}>\n                            {optionsText}\n                        </span>\n                    }\n                </p>\n            </header>\n            <div className='card-content'>\n                <div className='container is-fluid px-0'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nlet mapsLoaded = false\nexport function useLoadGoogleMaps() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [loading, setLoading] = useState(!mapsLoaded)\n\n    useEffect(() => {\n        if (loading) {\n            new Loader({\n                apiKey: ctx.config.Google.mapKey,\n                version: \"weekly\",\n                libraries: ['places']\n            }).load()\n                .then(() => setLoading(false))\n        }\n    }, [])\n\n    return loading\n}\n\n/**\n * \n * @param func Function to debounce\n * @param wait Miliseconds delay for debounce\n * @param immediate Set to true to trigger immediately and kill other attempts\n */\nexport function debounce(func, wait: number, immediate: boolean = false) {\n    var timeout;\n    return async (...args) => {\n        var later = async () => {\n            timeout = null;\n            if (!immediate) return func(...args)\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) return func(...args)\n    };\n};\n\nexport async function wait(duration = 5000) {\n    await new Promise((res) => {\n        setTimeout(res, duration)\n    })\n}\n\nexport const useEscapeHandler = (callback: any) => {\n    const handler = (ev: KeyboardEvent) => {\n        if (ev.key === 'Escape') {\n            callback()\n        }\n    }\n    window.document.addEventListener('keydown', handler)\n    return () => window.document.removeEventListener('keydown', handler)\n}","import { geoFirestore } from \"./firebase\";\nimport firebase from 'firebase'\nimport { useCallback } from \"react\";\nimport { User } from \"./user\";\nimport { Application } from \".\";\n\n\nexport const JOB_MILE_RADIUS = 10\n\nconst JOB_TYPES = [\"Alarm Systems/Cameras\", \"Animal Grooming\", \"Auto Mechanic\", \"Baby Sitters/Nanny\", \"Beautician\", \"Cable/Satellite Installation\", \"Car Detailing\", \"Carpenter\", \"Carpet Cleaning\", \"Caterers\", \"Computer Repair\", \"Debris Removal\", \"Demolition\", \"Dump Truck Services\", \"Electrician\", \"Engineering\", \"Event Planner\", \"Flooring\", \"Garage Door Installation/Repair\", \"HVAC (Heating & Air Conditioning)\", \"Healthcare professionals\", \"Hot Shot Delivery & Courier Services\", \"IT Tech Support\", \"Janitorial/Maid/Cleaning Services\", \"Lawn care\", \"Masonry (Brick, Concrete)\", \"Modeling/Acting\", \"Networking Installation\", \"Painter/Finish\", \"Plumber\", \"Roof Repair\", \"Seamstress/Tailor\", \"Shipping Pallets, Containers and Custom Crate Builders\", \"Snow and Ice Removal\", \"Tow Truck and Roadside Assistance\", \"Tree Services\", \"Veterinarian Services\", \"Web Designer\", \"Window Blinds, Shades, Drapes, Curtains and Shutters\"]\n\nexport interface IJob {\n    id\n    coordinates: firebase.firestore.GeoPoint\n    date_completed: firebase.firestore.Timestamp | null\n    date_created: firebase.firestore.Timestamp\n    g: any\n    executed_by: string\n    job_title: string\n    job_description: string\n    job_type: string\n    location: {\n        coords: {\n            accuracy: number\n            altitude: number\n            altitudeAccuracy: number\n            heading: number\n            latitude: number\n            longitude: number\n            speed: number\n        }\n        timestamp\n        address\n        place_id\n        id\n    }\n    location_address: any\n    posted_by: string\n    salary: number\n    star_rate: number | null\n    status: \"available\" | \"in review\" | \"accepted\" | \"in progress\" | \"complete\"\n    tasks: { id: string, text: string }[]\n    wage: \"hr\"\n    required_count: number\n    progress?: number\n    user?: User\n}\n\nexport interface IJobHistory {\n    employer_name: string\n    employer_phone_number: string\n    employer_address: string\n    supervisor_name?: string\n    supervisor_title?: string\n    user_position_title?: string\n    date_started: Date\n    date_ended: Date\n    actual_job?: boolean\n    salary?: string\n    wage?: string\n    description?: string\n}\n\nexport class Job {\n    private static db = geoFirestore.collection('jobs')\n\n    static async getJobTypes(app: Application) {\n        return JOB_TYPES\n    }\n\n    static async addNewJob(app: Application, job, photos: File[] = []) {\n        if (!job.posted_by || !job.job_title || !job.salary || !job.wage || (!job.location && !job.location_address)) {\n            throw new Error('Complete all required fields to continue!')\n        }\n        if (job.tasks.length < 1) {\n            throw new Error('You must add at least 1 task for this job!')\n        }\n        if (job.job_title.length < 8 || job.job_description.length < 20) {\n            throw new Error(\"Kindly enter a more meaningful title and description!\")\n        }\n        if (job.required_count < 1) {\n            throw new Error(\"Provide the number of people you require for this job!\")\n        }\n        if (job.salary < 0) {\n            throw new Error(\"Salary must be more than $0!\")\n        }\n\n        job.coordinates = new firebase.firestore.GeoPoint(job.location.coords.latitude, job.location.coords.longitude)\n\n        const newDoc = Job.db.doc()\n        let photo_files = null\n\n        if (photos && photos.length > 0) {\n            // If photo is selected, add the photo\n            const body = new FormData()\n            photos.map((photo) => {\n                body.append(\"photo\", photo);\n            })\n            const apiResponse = await app.initiateNetworkRequest(`/job/upload`, {\n                method: \"POST\",\n                headers: {\n                    \"x-job-id\": newDoc.id,\n                },\n                body,\n            }, true, false)\n\n            if (!apiResponse.ok) {\n                throw new Error((await apiResponse.json()).message || \"Failed to upload job\");\n            }\n\n            photo_files = (await apiResponse.json()).data;\n        }\n\n        job.id = newDoc.id\n        return newDoc.set({ ...job, photo_files })\n    }\n\n    static async cancelJob(app: Application, job: IJob) {\n        if (job.status === 'complete') {\n            throw new Error('You cannot cancel a completed job!')\n        }\n\n        if (job.status === 'accepted') {\n            await app.initiateNetworkRequest(`users/cancelJob`, {\n                method: 'DELETE',\n                body: JSON.stringify({ jobID: job.id, role: app.user?.role })\n            }, true)\n        } else {\n            await Job.db.doc(job.id).delete()\n        }\n        return true\n    }\n\n    static async getInactiveJobs(app: Application, limit = 20) {\n        let query = Job.db.where('status', '==', 'complete')\n        // if (app.user?.role !== 'admin') {\n        //    query =  query.where('posted_by', '==', app.user?.id)\n        // }\n        return query.native.orderBy('date_created', 'desc').limit(limit).get().then(async snap => {\n            const jobs: IJob[] = []\n            snap.forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            return Promise.resolve(jobs)\n        })\n    }\n\n    static async getActiveJobs(app: Application, limit = 20) {\n        let query = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"])\n        // if (app.user?.role !== 'admin') {\n        //    query =  query.where('posted_by', '==', app.user?.id)\n        // }\n        return query.native.orderBy('date_created', 'desc').limit(limit).get().then(async snap => {\n            const jobs: IJob[] = []\n            snap.forEach(async doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            return Promise.resolve(jobs)\n        })\n    }\n\n    static listenForActiveAndPendingJobs(app: Application, callback, limit = 100) {\n        let query = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"])\n        // if (app.user?.role !== 'admin') {\n        //     query.where('posted_by', '==', app.user?.id)\n        // }\n        const unsubscribe = query.native.orderBy('date_created', 'desc').limit(limit).onSnapshot(async snap => {\n            const jobs: IJob[] = [];\n            (snap as firebase.firestore.QuerySnapshot).forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            callback(null, jobs)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n\n    static listenForActiveJobs(app: Application, callback, limit = 9) {\n        let query = Job.db.where('status', 'in', [\"in review\", \"accepted\", \"in progress\"])\n        // if (app.user?.role !== 'admin') {\n        //     query = query.where('posted_by', '==', app.user?.id)\n        // }\n        const unsubscribe = query.native.orderBy('date_created', 'desc').limit(limit).onSnapshot(async snap => {\n            const jobs: IJob[] = [];\n            (snap as firebase.firestore.QuerySnapshot).forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            callback(null, jobs)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n\n    static listenForActiveJobsWithChangeHandler(app: Application, { added, modified, removed }: {\n        added: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any,\n        modified: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any,\n        removed: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any\n    }) {\n        let query = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"])\n        // if (app.user?.role !== 'admin') {\n        //     query = query.where('posted_by', '==', app.user?.id)\n        // }\n        const unsubscribe = query.limit(6).onSnapshot(async snap => {\n            (snap.native as firebase.firestore.QuerySnapshot).docChanges().forEach(change => {\n                switch (change.type) {\n                    case 'added':\n                        added(change.doc)\n                        break\n                    case 'modified':\n                        modified(change.doc)\n                        break\n                    case 'removed':\n                        removed(change.doc)\n                        break\n                }\n            })\n        })\n\n        return unsubscribe\n    }\n\n    static getPhotoURL(app: Application, id) {\n        return `${app.config.hostname}/images/${id}.jpg`\n    }\n}","import React, { DetailedHTMLProps, useRef, useEffect, useContext, useState, memo, ReactNode, ReactElement, CSSProperties, useMemo } from 'react'\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport L from \"leaflet\";\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { ImSpinner } from 'react-icons/im';\nimport { useLoadGoogleMaps } from './util';\nimport { IJob } from '../lib/job';\nimport { FaMapPin } from 'react-icons/fa';\n\nexport const MapView = memo<{ job: IJob, vertical: boolean } & any>((props) => {\n    const { job: { coordinates, job_title: title }, vertical = true, zoom = 18, zoomControl = true } = props\n    const loading = useLoadGoogleMaps()\n    const mapEl = useRef<HTMLDivElement>()\n\n    const [map, setMap] = useState<google.maps.Map | null>(null)\n    const [marker, setMarker] = useState<google.maps.Marker>()\n\n    useEffect(() => {\n        if (mapEl.current && !loading) {\n            const _mapInstance = new google.maps.Map(mapEl.current, {\n                center: { lat: coordinates.latitude, lng: coordinates.longitude },\n                gestureHandling: 'none',\n                zoomControl: zoomControl,\n                zoom,\n                mapTypeControl: false,\n                fullscreenControl: true,\n            })\n            setMap(_mapInstance)\n            setMarker(new google.maps.Marker({\n                map: _mapInstance,\n                position: { lat: coordinates.latitude, lng: coordinates.longitude },\n                animation: google.maps.Animation.DROP,\n                title,\n            }))\n        }\n    }, [loading, mapEl])\n\n\n    useEffect(() => {\n        if (coordinates) {\n            map?.setCenter({ lat: coordinates.latitude, lng: coordinates.longitude })\n            marker?.setPosition({ lat: coordinates.latitude, lng: coordinates.longitude })\n        }\n    }, [coordinates])\n\n    return (\n        loading ?\n            <div {...props} className={`${props.className} is-flex is-flex-centered px-6`} style={{ width: '100%', height: '100%', backgroundColor: '#dadada', ...props?.style, }}>\n                <progress style={{ height: '0.2rem' }} className=\"progress is-small my-6 mx-6\" max=\"100\">loading</progress>\n            </div>\n            :\n            <div id='mapview' {...props} style={{ ...props?.style, width: '100%', height: '100%', backgroundColor: '#dadada', minHeight: vertical ? '50vh' : '12em', ...props?.style, }} ref={mapEl} />\n    )\n})","import moment, { unix } from 'moment'\nimport React, { useCallback, useState, useContext } from 'react'\nimport { FaExpandAlt, FaStar, FaMapMarkerAlt, FaGlobeAfrica, FaClipboardList, FaHardHat, FaCaretRight, FaArrowRight, FaChevronRight } from 'react-icons/fa'\nimport { ImSpinner } from \"react-icons/im\";\nimport { NavLink, Link } from 'react-router-dom'\nimport { STYLES } from '../lib/theme'\nimport { DUMMY_USER, User } from '../lib/user'\nimport { IJob, Job, JOB_MILE_RADIUS } from '../lib/job'\nimport firebase from \"firebase\";\nimport { useToasts } from 'react-toast-notifications';\nimport { wait } from './util';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { MapView } from './map';\nimport links from '../lib/links';\nimport { Message, IChatItem } from '../lib/message';\nimport logo from '../logo.jpg'\n\nexport function JobListItem({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    const time = moment(job.date_created.toDate())\n    return (\n        <div className='card'>\n            <div className='card-content'>\n                <div className='columns mb-0'>\n                    <div className='column is-6 has-text-centered-touch has-text-left'>\n                        <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_title}</p>\n                    </div>\n                    <div className='column has-text-centered-touch has-text-right'>\n                        <p>{job.location_address}</p>\n                    </div>\n\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left'>\n                        <p>{job.job_type}</p>\n                    </div>\n                </div>\n            </div>\n            <div className='card-footer'>\n                <div className='card-footer-item'>\n                    <div className='columns px-4 is-vcentered is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\n                        <div className='column is-12'>\n                            <div className='columns is-vcentered is-mobile'>\n                                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                                    <figure className='image is-flex is-32x32'>\n                                        <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                                    </figure>\n                                </div>\n                                <div className='column is-narrow'>\n                                    <div className='title is-6'>{`${job.user?.firstName} ${job.user?.lastName}`}</div>\n                                </div>\n                                <div className='column has-text-right'>\n                                    {time.calendar({ sameElse: 'DD/MMM/YYYY' })}\n                                </div>\n                            </div>\n                        </div>\n                        <div className='column is-12'>\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={0} max=\"100\">{0}</progress>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport function JobItem({ job, to }: { job: IJob, to: any }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    if (job.status === 'available') {\n        return <PendingJobItem job={job} to={to} key={`pending-${job.id}`} />\n    }\n\n    const time = moment(job.date_created.toMillis())\n    let endTime\n    if (job.date_completed) endTime = moment(job.date_completed.toMillis())\n\n    return (\n        <NavLink activeClassName=\"is-active\" to={to} style={{ overflowX: 'auto' }} className={`job-item is-size-7 px-1 py-1 is-block card is-shadowless is-radiusless has-background-white`}>\n            <div className='card-content py-2 px-2'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-6 has-text-centered-touch has-text-left'>\n                            <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_type}</p>\n                        </div>\n                        <div className='column has-text-centered-touch has-text-right has-text-grey'>\n                            <p>{job.location_address}</p>\n                        </div>\n                    </div>\n                    <div className='columns is-vcentered is-mobile'>\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                            <figure className='image is-flex is-48x48'>\n                                <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                            </figure>\n                        </div>\n                        <div className='column px-0 has-text-left'>\n                            <div className='title is-7 mb-1'>{`${job.user?.firstName || 'John'} ${job.user?.lastName || \"Doe\"}`}</div>\n                            <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate}</p>\n                        </div>\n                        <div className='column has-text-grey has-text-right'>\n                            {time.calendar({ sameElse: 'DD/MMM/YYYY' })}\n                        </div>\n                    </div>\n\n                </div>\n                <div className='columns mb-0 is-vcentered has-text-grey is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\n                    <div className='column is-12'>\n                        {job.progress && job.progress >= 100 ? (\n                            <p>Completed {endTime.calendar({ sameElse: 'DD/MMM/YYYY' })}</p>\n                        ) :\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={job.progress || 0} max=\"100\">{job.progress}</progress>\n                        }\n                    </div>\n                </div>\n                <div className='content has-text-left has-text-grey is-flex is-flex-align-items-center'>\n                    <span className='icon has-text-info is-size-6'><FaChevronRight /></span>\n                    <span style={{ lineHeight: '2em' }}>{job.job_title}</span>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function PendingJobItem({ job, to }: { job: IJob, to: any }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    return (\n        <NavLink activeClassName=\"is-active\" to={to} style={{ overflowX: 'auto' }} className={`job-item is-size-7 px-1 py-1 is-block card is-shadowless is-radiusless has-background-white`}>\n            <div className='card-content py-2 px-2'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-6 has-text-centered-touch has-text-left'>\n                            <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_type}</p>\n                        </div>\n                        <div className='column has-text-centered-touch has-text-right has-text-grey'>\n                            <p>{job.location_address}</p>\n                        </div>\n                    </div>\n                    <div className='columns is-vcentered is-mobile'>\n                        <div className='column has-text-left'>\n                            <p className='is-size-7 is-flex is-vcentered'>\n                                <span className='icon is-size-6 has-text-info spinner'><ImSpinner /></span>\n                                <span style={{ lineHeight: '2em' }}>Pending</span>\n                            </p>\n                        </div>\n                        <div className='column has-text-right'>\n                            <p>Searching for deployee</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function JobDetail({ job, className, onCancel }: { onCancel: (job: IJob) => any, job: IJob | null, className?: string }) {\n    if (!job) {\n        return (\n            <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n                <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\n                    <span className='my-4' ><FaHardHat fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                    <p className='is-uppercase is-size-6 has-text-weight-bold'>View and manage job listings</p>\n                </div>\n            </div>\n        )\n    }\n    const time = moment(job.date_created.toMillis())\n\n    return (\n        <div className={`${className} card job-detail is-size-6`} style={{ flexDirection: 'column' }}>\n            <div className='card-content is-paddingless'>\n                <div className='level py-4 mb-0' style={{ zIndex: 1 }}>\n                    <div className='level-item is-size-7'>POSTED {time.calendar({ sameElse: 'DD/MMM/YYYY' })}</div>\n                    <div className='level-item is-size-6 has-text-weight-bold'>{job.job_title}</div>\n                    <div className='level-item is-size-7 has-text-grey'>{job.id}</div>\n                </div>\n                <div className='container is-fluid px-0'>\n                    <div className='columns is-fullheight mx-0 my-0 is-multiline animate__animated animate__fadeIn'>\n                        <div className='column is-8-fullhd is-7-desktop is-12 px-0 pt-0'>\n                            <JobDetailTask onJobCancel={onCancel} job={job} />\n                        </div>\n\n                        {job.status === \"available\" || job.status === 'in review' ?\n                            <div style={{ borderLeft: 'solid 1px #8881' }} className='column is-4-fullhd is-5-desktop is-12 is-flex is-paddingless'>\n                                <MapView job={job} className='container pt-4 pb-0 is-flex' />\n                            </div>\n                            :\n                            <div style={{ borderLeft: 'solid 1px #8881' }} className='column is-4-fullhd is-5-desktop is-12 is-flex'>\n                                <JobDetailUser job={job} />\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function JobDetailTask({ job, onJobCancel }: { job: IJob, onJobCancel }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({ loadingCancel: false })\n    const { addToast } = useToasts()\n\n    let endTime, startTime, totalTime\n    if (job.date_completed) endTime = unix(job.date_completed.toMillis() / 1000)\n    if (job.date_created) startTime = unix(job.date_created.toMillis() / 1000)\n    if (endTime && startTime) totalTime = endTime.diff(startTime, 'h', true)\n\n    const onCancel = useCallback(async () => {\n        try {\n            const confirmed = window.confirm(\"Are you sure you want to cancel this job? If Job is accepted, it will return to the job pool. Otherwise, the job will be deleted\")\n            if (!confirmed) {\n                return\n            }\n            setState({ ...state, loadingCancel: true })\n            await Job.cancelJob(ctx, job)\n            addToast('Cancelled job successfully!', { appearance: 'success' })\n            onJobCancel(job)\n        } catch (e) {\n            addToast(e.message || 'Failed to cancel job!', { appearance: 'error' })\n        } finally {\n            setState({ ...state, loadingCancel: false })\n        }\n    }, [job, state])\n\n    return (\n        <div className='is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\n            {job.status === 'available' ?\n                <div className='section has-text-centered is-size-6'>\n                    <span className='px-4 py-4 is-flex is-flex-centered'>Searching for deployees within {JOB_MILE_RADIUS} mile radius from you</span>\n                </div>\n                :\n                job.status === 'in review' ?\n                    <JobReview job={job} />\n                    :\n                    <MapView zoom={15} zoomControl={false} vertical={false} job={job} className='container pb-0 is-flex' />\n            }\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\n                <div className='section py-2 pb-3'>\n                    <table className='table is-hoverable is-fullwidth'>\n                        <tbody className='is-flex is-flex-direction-column is-size-7'>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>TYPE</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.job_type}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>LOCATION</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.location_address}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>DESCRIPTION</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.job_description}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>PAY</td>\n                                <td style={{ flex: 2 }} className='is-flex-align-items-center is-flex has-text-left'><span>${job.salary}</span>&nbsp;<span className='has-text-grey-light'>/{job.wage || 'deployment'}</span></td>\n                            </tr>\n                            {job.tasks && job.tasks.length > 0 ?\n                                <tr className='is-flex has-text-left'>\n                                    <td style={{ flex: 1 }} className='has-text-grey'>TASKS</td>\n                                    <td style={{ flex: 2 }} className=' has-text-left'>\n                                        {job.tasks?.map(task => <p key={task.text}>- {task.text}</p>)}\n                                    </td>\n                                </tr>\n                                : null}\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'> START</td>\n                                <td style={{ flex: 2 }} className='has-text-left'>{startTime.calendar({ sameElse: 'DD/MMM/YYYY' }) || `-`}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>END</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{endTime?.calendar({ sameElse: 'DD/MMM/YYYY' }) || `-`}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>TOTAL TIME</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{totalTime?.toFixed(2) || `-`}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                {job.progress && job.progress >= 100 ? (\n                    <button className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-end' }}>View Invoice</button>\n                ) :\n                    <button disabled={state.loadingCancel} onClick={onCancel} className={`button is-white is-uppercase is-inverted mx-4 ${state.loadingCancel ? 'is-loading' : ''}`} style={{ alignSelf: 'flex-start', color: 'white' }}>Cancel Job</button>\n                }\n            </div>\n        </div >\n    )\n}\n\nexport function JobDetailUser({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    let startTime\n    if (job.date_created) startTime = moment(job.date_created.toMillis())\n\n    return (\n        <div className='container pt-4 pb-0 is-flex' style={{ flexDirection: 'column' }} >\n            <div style={{ borderBottom: 'solid #aaa4 0.2px' }} className='columns is-vcentered'>\n                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                    <figure className='image is-80x80 is-flex'>\n                        <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} style={{ border: 'solid #eaeaea 0.5px' }} onError={(img) => img.currentTarget.src = logo} />\n                    </figure>\n                </div>\n                <div className='column'>\n                    <div className='container'>\n                        <div className='columns is-marginless is-vcentered is-mobile'>\n                            <div className='column pb-0 pl-0'>\n                                <p className='is-size-6 has-text-left has-text-weight-bold'>{`${job.user?.firstName} ${job.user?.lastName}`}</p>\n                            </div>\n                            <Link to={{ pathname: `${links.profile}/${job.user!.id}`, state: { user: job.user } }} className=\"column is-narrow has-text-right has-text-link pr-0 pb-0 is-size-7\">View Profile</Link>\n                        </div>\n                        <div className='content has-text-left'>\n                            <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate}\n                                {/* TODO: should option of remote or onsite be present?\n                             &nbsp;{generateUserJobType(DUMMY_USER)} \n                             */}\n                            </p>\n                            <p className='is-size-7'>{job.user?.profileBio}</p>\n                            <p className='has-text-left has-text-grey-light is-size-8'><span className='is-uppercase'>member since</span>&nbsp; {moment(job.user?.dateCreated).calendar({ sameElse: 'DD/MMM/YYYY' })}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\n                <table className='table is-hoverable is-fullwidth'>\n                    <tbody className='is-size-7'>\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>CONTACT</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>{job.user?.phoneNumber}</td>\n                        </tr>\n                        {/* <tr>\n                            <td className='has-text-right'>ACTIVE TASK</td>\n                            <td className='has-text-left'>{job.user?.activeTask}</td>\n                        </tr> */}\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>START TIME</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>{startTime.calendar({ sameElse: 'DD/MMM/YYYY' })}</td>\n                        </tr>\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>HIGHLIGHTED SKILLS AND LICENSES</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>\n                                {job.user?.skills && job.user.skills.length > 0 ? job.user.skills?.map(task => <p>- {task}</p>) : `-`}\n                            </td>\n\n                        </tr>\n                    </tbody>\n                </table>\n                <Link to={{\n                    pathname: `${links.messages}/${Message.generateID(ctx.user?.id, job.user?.id)}`,\n                    state: {\n                        chat: {\n                            id: Message.generateID(ctx.user?.id, job.user?.id),\n                            initialized: false,\n                            recipient: job.user,\n                            users: [ctx.user, job.user],\n                        } as IChatItem\n                    }\n                }} className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-start' }}>Message</Link>\n            </div>\n        </div>\n    )\n}\n\n\nexport function JobReview({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    let startTime\n    if (job.date_created) startTime = moment(job.date_created.toMillis())\n\n    return (\n        <div className='section pt-5 is-flex is-clipped' style={{ flexDirection: 'column' }} >\n            <div className='columns is-paddingless'>\n                <div className='content column is-narrow is-size-6 has-text-centered px-4'>\n                    <span className='is-flex is-flex-centered'>Deployee Found</span>\n                </div>\n                <div className='columns column is-vcentered'>\n                    <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                        <figure className='image is-80x80 is-flex'>\n                            <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} style={{ border: 'solid #eaeaea 0.5px' }} onError={(img) => img.currentTarget.src = logo} />\n                        </figure>\n                    </div>\n                    <div className='column'>\n                        <div className='container'>\n                            <div className='columns is-marginless is-vcentered is-mobile'>\n                                <div className='column pb-0 pl-0'>\n                                    <p className='is-size-6 has-text-left has-text-weight-bold'>{`${job.user?.firstName || \"John\"} ${job.user?.lastName || 'Doe'}`}</p>\n                                </div>\n                                <div className=\"column is-narrow has-text-right has-text-info pr-0 pb-0 is-size-7\">View Profile</div>\n                            </div>\n                            <div className='content has-text-left'>\n                                <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate}\n                                    {/* TODO: should option of remote or onsite be present?\n                             &nbsp;{generateUserJobType(DUMMY_USER)} \n                             */}\n                                </p>\n                                <p className='is-size-7'>{job.user?.profileBio}</p>\n                                <p className='has-text-left has-text-grey-light is-size-7'><span className='is-uppercase'>member since</span>&nbsp; {moment(job.user?.dateCreated).calendar({ sameElse: 'DD/MMM/YYYY' })}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function generateUserJobType(user: User) {\n    switch (user.jobType) {\n        case 'onsite':\n            return <><span className='icon has-text-info'><FaMapMarkerAlt /></span> On Site</>\n        case 'remote':\n            return <><span className='icon has-text-info'><FaGlobeAfrica /></span> Remote</>\n    }\n}\n\nexport interface IJobSample {\n    user: User\n    timestamp: number\n    title: string\n    description: string\n    location: string\n    progress?: number\n    startTime?: number\n    endTime?: number\n    tasks?: string[]\n    fullLocation?: string\n    id\n}\n\nexport const DUMMY_JOBS: IJobSample[] = [\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        progress: 80,\n        tasks: [],\n        id: 'papdsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdefvzsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 99,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 20,\n        id: 'padpp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 90,\n        id: 'papdvp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        id: 'papdfp'\n    }\n]\n\nexport const DUMMY_COMPLETED: IJobSample[] = [\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n]","import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DUMMY_USER, User } from '../lib/user';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { Job, IJob } from '../lib/job';\nimport { useToasts } from 'react-toast-notifications';\nimport { JobListItem } from './job';\nimport links from '../lib/links';\nimport { Empty } from './util';\nimport { FaHardHat } from 'react-icons/fa';\n\nexport function JobList({ className }: { className?: string; }) {\n    const ctx = useContext(APPLICATION_CONTEXT);\n    const [state, setState] = useState({ jobs: new Array<IJob>(), loading: false });\n\n    const { addToast } = useToasts();\n\n    useEffect(() => {\n        setState({ ...state, loading: true });\n        const unsubscribe = Job.listenForActiveJobs(ctx, async (err, docs: IJob[]) => {\n            if (err) {\n                setState({ ...state, loading: false });\n                return addToast(err.message || 'Failed to get jobs!');\n            }\n            docs = await Promise.all(\n                docs.map(async (v) => {\n                    if (v.status !== 'available' && v.executed_by) {\n                        v.user = await User.getExternalUser(ctx, v.executed_by);\n                    }\n                    return v;\n                })\n            );\n            setState({ ...state, jobs: docs, loading: false });\n        });\n\n        return unsubscribe;\n    }, []);\n\n    return (\n        <div className={className}>\n            {state.loading ?\n                <progress className=\"progress is-small is-info my-6\" max=\"100\">loading</progress>\n                :\n                <>\n                    {state.jobs.length < 1 &&\n                        <Empty style={{ background: 'transparent' }} text='No Active Job Available!' icon={<FaHardHat className='has-text-warning-dark is-size-4 mb-2' />} />}\n                    {state.jobs.map(j => (\n                        <Link key={j.id} to={`${links.activeJobs}/${j.id}`} className={`column ${state.jobs.length == 1 ? 'is-12' : 'is-4-fullhd is-6-desktop is-12-touch'} list-item`}>\n                            <JobListItem job={j} />\n                        </Link>\n                    ))}\n                </>\n            }\n        </div>\n    );\n}\n","import moment from \"moment\";\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport { FaCaretDown, FaCaretUp, FaCheck, FaMapMarkerAlt, FaSearch, FaBell } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport { User } from \"../lib/user\";\nimport { Empty } from './util';\n\nconst NotificationContext = createContext<{ notifications: INotification[], addNotification: (notif: INotification) => any }>({ notifications: [], addNotification: (notif) => { } })\n\nexport function NotificationProvider(props) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [notifications, setNotifications] = useState<INotification[]>([])\n    const addNotification = useCallback((notification: INotification) => {\n        setNotifications([notification, ...notifications])\n    }, [notifications])\n\n    useEffect(() => {\n        if (ctx.user) {\n            const unsubscribe = User.listenForNotifications(ctx, (err, notifications) => {\n                if (err) {\n                    console.log(err)\n                } else {\n                    setNotifications(notifications || [])\n                }\n            })\n\n            return unsubscribe\n        }\n    }, [ctx.user])\n\n    return (\n        <NotificationContext.Provider value={{ notifications, addNotification }}>\n            {props.children}\n        </NotificationContext.Provider>\n    )\n}\n\nexport function NotificationItem({ notification }: { notification: INotification }) {\n    const time = moment.unix(notification.dateCreated.toMillis() / 1000)\n    return (\n        <div className='container is-fluid is-paddingless list-item py-2' title={notification.title}>\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\n                <div className='column is-paddingless is-6 has-text-left has-text-centered-mobile  list-item-title'>\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{getNotificationIcon(notification)} {notification.title}</p>\n                </div>\n                <div className='column is-paddingless has-text-right has-text-centered-mobile list-item-subtitle'>\n                    <p style={{ maxLines: 2 }}>{time.fromNow()}</p>\n                </div>\n            </div>\n            <div className='content'>\n                <p>\n                    {notification.content}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport function getNotificationIcon(notif: INotification) {\n    switch (notif.type) {\n        case 'discovery':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaSearch /> </span>\n        case 'location':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaMapMarkerAlt /> </span>\n        case 'progress':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaCheck /> </span>\n    }\n}\n\nexport function NotificationList({ className }) {\n    const [expanded, setExpanded] = useState(true)\n    const notifCtx = useContext(NotificationContext)\n    console.log()\n    return (\n        <nav className={className}>\n            <div className='panel is-clipped' >\n                <div onClick={() => setExpanded(!expanded)} className='panel-heading is-size-6 has-text-left has-background-white-bis is-align-items-center is-flex is-flex-direction-row is-justify-content-space-between'>\n                    <p>Notifications</p>\n                    <button className='button is-static has-background-white is-rounded is-size-8 is-small'>\n                        {!expanded ?\n                            <FaCaretUp size={16} className={`icon has-text-black is-small`} />\n                            :\n                            <FaCaretDown size={16} className={`icon has-text-black is-small`} />}\n                    </button>\n                </div>\n                <div style={{ transition: \"all 0.500s linear\" }} className={`${!expanded ? 'is-height-0' : ''}`}>\n                    {notifCtx.notifications.length > 0 ?\n                        notifCtx.notifications.map((n, index) => (\n                            <div key={`${n.id}-${index}`} className='panel-block'>\n                                <NotificationItem notification={n} />\n                            </div>\n                        ))\n                        :\n                        <Empty icon={<FaBell className='has-text-warning-dark is-size-4 mb-2' />} text='No Notification available' />\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport interface INotification {\n    content: string\n    dateCreated\n    type: 'discovery' | 'location' | 'progress'\n    title: string\n    id: string\n}","import { Application } from \".\";\n\nexport const TRANSACTION_STATUS = {\n    PENDING: 0,\n    SUCCESS: 1,\n    FAILED: 2,\n    DECLINED: 3,\n    UNCAPTURED: 4\n}\n\nexport interface ICard {\n    mask: string\n    year: number\n    month: number\n    brand: string\n    name: string\n}\n\nexport interface IPayment {\n    status: 'pending' | 'paid'\n    timestamp\n    cost: number\n    title\n    payee\n    id: string\n}\n\nexport interface IInvoice {\n    invoiceReference: string\n    description?: string\n    jobTitle?: string\n    jobStatus?: string\n    location?: string\n    amount: string\n    fees: string\n    total: string\n    deployee?: string\n    paymentMethod: string\n    invoiceURL: string\n    transactionStatus: string\n    transactionID: string\n    user: String\n    dateCreated: Date\n}\n\nexport interface ITransaction extends ICard {\n    id: string\n    amount: number\n    description: string\n}\n\nconst CurrencyFormatter = Intl.NumberFormat('en-US', { currency: 'USD', style: 'currency', maximumFractionDigits: 2 })\nexport const PAYMENT_PAGE_LIMIT = 30\nexport const INVOICE_PAGE_LIMIT = 30\n\nexport class Payment {\n    static async getTransactions(app: Application, page = 1, limit = PAYMENT_PAGE_LIMIT): Promise<IPayment[]> {\n        const resp = await app.initiateNetworkRequest(`/payments/transactions?page=${page}&limit=${limit}`, undefined, true)\n        if (!resp.ok) {\n            if (resp.status === 418) {\n                throw new Error((await resp.json()).message || 'Failed to fetch transactions')\n            } else {\n                throw new Error('Failed to fetch transactions')\n            }\n        }\n\n        return (await resp.json()).map(({ id, dateCreated: timestamp, amount: cost, user: payee, title, status }): IPayment => ({\n            id,\n            timestamp,\n            cost,\n            title,\n            payee,\n            status: status === TRANSACTION_STATUS.SUCCESS ? 'paid' : 'pending'\n        }))\n    }\n\n    static async getInvoices(app: Application, page = 1, limit = PAYMENT_PAGE_LIMIT): Promise<IInvoice[]> {\n        const resp = await app.initiateNetworkRequest(`/payments/invoices?page=${page}&limit=${limit}`, undefined, true)\n        if (!resp.ok) {\n            if (resp.status === 418) {\n                throw new Error((await resp.json()).message || 'Failed to fetch transactions')\n            } else {\n                throw new Error('Failed to fetch transactions')\n            }\n        }\n\n        const result = (await resp.json())\n        return result.invoices\n    }\n\n    static getPaymentDescription(payment: IPayment): string {\n        switch (payment.status) {\n            case 'pending':\n                return `Pending charge of ${CurrencyFormatter.format(payment.cost)} for the completion of this job by ${payment.payee}`\n            case 'paid':\n                return `A payment of ${CurrencyFormatter.format(payment.cost)} has been submitted to ${payment.payee}`\n        }\n    }\n}","import moment from 'moment';\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { FaCaretDown, FaCaretUp, FaMoneyBill, FaMoneyBillWave, FaMoneyBillWaveAlt, FaMoneyBillAlt } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { IPayment, Payment, PAYMENT_PAGE_LIMIT } from \"../lib/payment\";\nimport { Empty } from './util';\n\nexport function PaymentItem({ payment }: { payment: IPayment }) {\n    const time = moment.unix(payment.timestamp / 1000)\n\n    return (\n        <div className='container is-fluid is-paddingless list-item py-2' title={payment.title}>\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\n                <div className='column is-paddingless is-6 has-text-left has-text-centered-mobile list-item-title'>\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{payment.title}</p>\n                </div>\n                <div className='column is-paddingless has-text-right has-text-centered-mobile list-item-subtitle'>\n                    <p>{time.fromNow()}</p>\n                </div>\n            </div>\n            <div className='content'>\n                <p>\n                    {Payment.getPaymentDescription(payment)}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport function PaymentList({ className }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [expanded, setExpanded] = useState(true)\n    const [payments, setPayments] = useState<IPayment[]>([])\n    const fetchPayment = useCallback(async () => {\n        try {\n            const pageToFetch = Math.max(0, Math.floor(payments.length / PAYMENT_PAGE_LIMIT)) + 1\n            // This loads the specified page limit and includes count of imcomplete previous page\n            const limit = PAYMENT_PAGE_LIMIT + (PAYMENT_PAGE_LIMIT - (payments.length % PAYMENT_PAGE_LIMIT))\n            const paymentData = await Payment.getTransactions(ctx, pageToFetch, limit)\n            setPayments([...payments, ...paymentData])\n        } catch (e) {\n            console.log(e, 'failed to fetch payment data')\n        }\n    }, [payments])\n\n    useEffect(() => {\n        fetchPayment()\n    }, [ctx.user, ctx.user?.id])\n\n    return (\n        <nav className={className} >\n            <div className='panel is-clipped'>\n                <div onClick={() => setExpanded(!expanded)} className='panel-heading is-size-6 has-text-left has-background-white-bis is-align-items-center is-flex is-flex-direction-row is-justify-content-space-between'>\n                    <p>Payments</p>\n                    <button className='button is-static has-background-white is-rounded is-size-8 is-small'>\n                        {!expanded ?\n                            <FaCaretUp size={16} className={`icon has-text-black is-small`} />\n                            :\n                            <FaCaretDown size={16} className={`icon has-text-black is-small`} />}\n                    </button>\n                </div>\n                <div style={{ transition: \"all 0.500s linear\" }} className={`${!expanded ? 'is-height-0' : ''}`}>\n                    {payments.length > 0 ?\n                        payments.map(p => (\n                            <Link to={`/ f`} key={p.id} className='panel-block'>\n                                <PaymentItem payment={p} />\n                            </Link>\n                        ))\n                        :\n                        <Empty icon={<FaMoneyBillAlt className='has-text-warning-dark is-size-4 mb-2' />} text='No Payment data available' />\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport const DUMMY_PAYMENTS: IPayment[] = [\n    {\n        status: 'pending',\n        timestamp: Date.now(),\n        cost: 20.405,\n        title: 'Clear lawn',\n        payee: 'Philip Barnabas',\n        id: '2ss354'\n    },\n    {\n        status: 'paid',\n        timestamp: Date.now(),\n        cost: 200.405,\n        title: 'Clear lawn and take out firewood',\n        payee: 'Philip Barnabas',\n        id: '23sss54'\n    },\n    {\n        status: 'pending',\n        timestamp: Date.now(),\n        cost: 3000.405,\n        title: 'Clear lawn',\n        payee: 'Philip Barnabas',\n        id: '235s4'\n    }\n]","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { JobList } from \"../components/JobList\";\nimport { NotificationList } from '../components/notification';\nimport { PaymentList } from '../components/payment';\nimport { CardFragment } from \"../components/util\";\nimport links from '../lib/links';\n\nexport function Dashboard() {\n    return (\n        <div className='columns is-1 is-variable px-3 py-3 is-atleast-fullheight'>\n            <NotificationList className='column is-3 is-2-widescreen' />\n            <div className='column is-6 is-8-widescreen is-flex' style={{ flexDirection: 'column', justifyContent: 'space-between' }}>\n                <CardFragment header='Active Jobs' optionsElement={<Link to={links.activeJobs}>View All</Link>} style={{ marginBottom: '0.8em' }}>\n                    <JobList className={'columns is-centered is-vcentered is-multiline is-1 is-variable'} />\n                </CardFragment>\n            </div>\n            <PaymentList className='column is-3 is-2-widescreen' />\n        </div>\n    )\n}","// Check geolocation exists\nexport function isGeoLocationSupported() {\n    return 'geolocation' in navigator\n}\n\nexport function getCurrentLocation(): Promise<Position> {\n    return new Promise((res, rej) => {\n        if (!isGeoLocationSupported()) {\n            throw new Error('Geolocation is not supported! Cannot find current location!')\n        }\n\n        navigator.geolocation.getCurrentPosition(res, rej, {\n            enableHighAccuracy: true,\n            maximumAge: 1000\n        })\n    })\n}","import Tags from \"@yaireo/tagify/dist/react.tagify\";\nimport React, { useState, useCallback, useMemo, useContext, useEffect, useLayoutEffect, createRef, Ref, useRef } from 'react';\nimport { FaChevronLeft, FaMapMarkerAlt, FaSearch, FaUpload, FaDollarSign } from 'react-icons/fa';\nimport { useToasts } from 'react-toast-notifications';\nimport { debounce, useLoadGoogleMaps } from \"./util\";\nimport { Job, IJob } from \"../lib/job\";\nimport firebase from 'firebase'\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport validator from \"validator\";\nimport { getCurrentLocation } from \"../lib/location\";\nimport { v4 } from \"uuid\";\n\n/**\n * Component for creating a form field.\n * \n * @param param Object containing parameters to build the input field\n */\nexport function FormField({ label, value, onChange, className, type, placeholder, icon, readOnly = false, locationAutocomplete = false, tagifyRef = null as any, required = false, whitelist = [] as any[], mode = 'select', disabled = false, loading = false, tags = false, showBorder = true, containerClassName = '', isTextArea = false, maxLength = Number.MAX_SAFE_INTEGER, helpTextTop = \"\", helpTextLeft = \"\", helpTextRight = \"\", hasAddons = false, addon = <></> }) {\n    const inputRef = useRef<HTMLInputElement>(null)\n    const loadingGoogleMaps = useLoadGoogleMaps()\n    let listener: google.maps.MapsEventListener\n    let autocomplete: google.maps.places.Autocomplete\n\n    useEffect(() => {\n\n        if (inputRef.current && locationAutocomplete && !loadingGoogleMaps) {\n            autocomplete = new google.maps.places.Autocomplete(inputRef.current, {\n                fields: ['formatted_address', 'geometry', 'place_id']\n            })\n\n            listener = autocomplete.addListener('place_changed', () => {\n                const place = autocomplete.getPlace()\n                const data = {\n                    address: place.formatted_address,\n                    coords: {\n                        longitude: place.geometry?.location?.lng(),\n                        latitude: place.geometry?.location?.lat(),\n                    },\n                    id: place.place_id,\n                    place_id: place.place_id\n                }\n                onChange(data)\n            })\n        }\n\n        return () => {\n            listener?.remove()\n            autocomplete?.unbindAll()\n        }\n    }, [loadingGoogleMaps, locationAutocomplete])\n\n    useEffect(() => {\n        if (!locationAutocomplete && inputRef.current && google) {\n            listener?.remove()\n            google.maps?.event?.clearInstanceListeners(inputRef.current)\n        }\n    }, [locationAutocomplete])\n\n    return (\n        <div className={`${containerClassName} ${showBorder ? 'job-form-field' : ''} field has-text-left`}>\n            <label className='label is-flex' style={{ justifyContent: 'space-between', alignItems: 'center' }}><span>{label}</span> <span className='has-text-right has-text-weight-normal is-size-7'>{helpTextTop}</span></label>\n            {!hasAddons ?\n                <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\n                    {isTextArea ?\n                        tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode: null,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                inputMode='textarea'\n                                className={`${className}`}\n                                loading={loading}\n                                maxLength={maxLength}\n                                required={required}\n                                disabled={disabled}\n                                onChange={e => (onChange(e.target.value))}\n                            />\n                            :\n                            <textarea required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} className={`${className} textarea`} maxLength={maxLength} placeholder={placeholder} />\n                        :\n                        tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    },\n                                    maxLength\n                                }}\n                                readOnly={readOnly}\n                                required={required}\n                                className={`${className} input`}\n                                loading={loading}\n                                maxLength={maxLength}\n                                disabled={disabled}\n                                onChange={e => (e.persist(), onChange(e.target.value))}\n                            />\n                            :\n                            locationAutocomplete ?\n                                <input ref={inputRef} key={'autocomplete'} required={required} disabled={disabled} value={undefined} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} />\n                                :\n                                <input ref={inputRef} key={'nonutocomplete'} required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} />\n                    }\n                    {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\n                </div>\n                :\n                <div className={`${hasAddons ? 'has-addons' : ''} field`}>\n                    <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\n                        {tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                readOnly={readOnly}\n                                required={required}\n                                className={`${className} input`}\n                                disabled={disabled}\n                                loading={loading}\n                                maxLength={maxLength}\n                                onChange={e => (e.persist(), onChange(e.target.value))}\n                            />\n                            :\n                            locationAutocomplete ?\n                                <input ref={inputRef} key='autocomplete-2' required={required} disabled={disabled} value={undefined} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} style={{ borderRight: 0 }} />\n                                :\n                                <input ref={inputRef} key='non-autocomplete-2' required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} style={{ borderRight: 0 }} />\n                        }\n                        {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\n                    </div>\n                    {addon}\n                </div>\n            }\n            <div className='help'>\n                <div className='container'>\n                    <div className='columns'>\n                        {helpTextLeft ? <p className='column has-text-left has-text-centered-touch'>{helpTextLeft} </p> : null}\n                        {helpTextRight ? <p className='column has-text-right has-text-centered-touch'>{helpTextRight} </p> : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function FileInput({ disabled, value, onChange, onRemovePhoto }) {\n    const ref = useRef<HTMLInputElement>(null)\n\n    return (\n        <div className='field job-form-field has-text-left my-4'>\n            <label className='label is-flex' style={{ justifyContent: 'space-between', alignItems: 'center' }}><span>Job Photos</span> <span className='has-text-right has-text-weight-normal is-size-7'>Add photos to help describe this job</span></label>\n            <div className='control is-expanded'>\n                <div className='file is-flex is-centered is-normal'>\n                    <label className='file-label is-flex-grow-1'>\n                        <input onChange={(el) => {\n                            if (el.target.files) {\n                                const files: File[] = []\n                                for (let i = 0; i < el.target.files?.length; i++) {\n                                    files.push(el.target.files[i])\n                                }\n                                if (files.length > 0) {\n                                    onChange(files)\n                                }\n                            }\n                        }} className='file-input' multiple ref={ref} disabled={disabled} type='file' accept='image/*' />\n                        <span className='file-cta is-flex is-flex-centered' style={{ width: '100%' }}>\n                            <span className='file-icon'>\n                                <FaUpload />\n                            </span>\n                            <span className='file-label'>\n                                SELECT PHOTOS\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                {value && value.length > 0 ?\n                    <div className='field is-grouped is-grouped-multiline'>\n                        {value.map((file: File, index) =>\n                            <div key={`${index}-${file.name}`} className='control mr-2 my-2 '>\n                                <div className='tags has-addons'>\n                                    <span key={`${file.name}-${file.size}-${index}`} className='tag is-dark'>{file.name}</span>\n                                    <button onClick={() => { onRemovePhoto(index) }} className='tag is-delete'></button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    : null}\n            </div>\n        </div>\n    )\n}\n\nexport function CreateJob({ onClose, show, onComplete }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        loading: false,\n        tasks: '',\n        type: '',\n        title: '',\n        description: '',\n        address: '',\n        requiredPersons: '',\n        price: '',\n        loadingTypes: true,\n        fetchingLocation: false,\n        manualAddress: false,\n        location: null as any,\n    })\n    const [photos, setPhotos] = useState([] as File[])\n    const { addToast } = useToasts()\n    const types = useMemo(() => {\n        return {\n            jobTypes: new Array<string>(),\n            location: [],\n        }\n    }, [])\n    const tagifyRef = createRef(), tagifyRef2 = createRef()\n\n\n    // const _search = debounce(async (ctx, cb) => {\n    //     try {\n    //         const jobTypes = types.allJobTypes.filter(type=>type)\n    //         return cb(null, jobTypes)\n    //     } catch (e) {\n    //         cb(e, null)\n    //     }\n    // }, 500)\n\n    useEffect(() => {\n        new Promise(async () => {\n            try {\n                types.jobTypes = await Job.getJobTypes(ctx)\n                const tagify: any = tagifyRef.current\n                console.log(tagifyRef)\n                if (tagify) {\n                    tagify.settings.whitelist.length = 0; // reset current whitelist\n                    tagify.loading(true).dropdown.hide.call(tagify)\n                    tagify.settings.whitelist.push(...types.jobTypes, ...tagify.value)\n                    tagify.loading(false).dropdown.hide.call(tagify, tagify.value);\n\n                    (tagifyRef.current as any).settings.whitelist = types.jobTypes\n                }\n            } catch (e) {\n                console.log(e)\n                addToast('Failed to load job types!', { appearance: 'error' })\n            }\n        })\n    }, [])\n\n    return (\n        <form className={`modal ${show ? 'is-active' : ''}`} onSubmit={async (e) => {\n            e.stopPropagation()\n            e.preventDefault()\n            setState({ ...state, loading: true })\n            try {\n                const job_type = JSON.parse(state.type)[0]?.value\n                console.log(job_type, state.type)\n                const newJob: any = {\n                    date_created: firebase.firestore.FieldValue.serverTimestamp(),\n                    job_title: state.title,\n                    job_type,\n                    posted_by: ctx.user?.id,\n                    salary: parseInt(state.price, 10),\n                    required_count: parseInt(state.requiredPersons, 10),\n                    wage: 'deployment',\n                    status: 'available',\n                    tasks: JSON.parse(state.tasks).map(v => ({ id: v4(), text: v.value })),\n                    location: state.location ? {\n                        id: state.location.place_id,\n                        place_id: state.location.place_id,\n                        address: state.location.address,\n                        coords: {\n                            latitude: state.location.coords.latitude || null,\n                            longitude: state.location.coords.longitude || null,\n                            accuracy: state.location.coords.accuracy || null,\n                            altitude: state.location.coords.altitude || null,\n                            heading: state.location.coords.heading || null,\n                            altitudeAccuracy: state.location.coords.altitudeAccuracy || null,\n                            speed: state.location.coords.speed || null,\n                        }, timestamp: state.location.timestamp || Date.now()\n                    } : undefined,\n                    job_description: state.description\n                }\n                if (state.manualAddress && !state.address) {\n                    throw new Error('You must provide your address manually!')\n                } else if (state.manualAddress) {\n                    newJob.location.address = state.address\n                }\n\n                console.log(newJob)\n\n                if (newJob.job_type && !validator.isEmpty(newJob.job_type) && !types.jobTypes.find(type => type === newJob.job_type)) {\n                    // Job type is new. \n                    throw new Error('Invalid job type!')\n                }\n\n                await Job.addNewJob(ctx, newJob, photos)\n                setState({ ...state, loading: false })\n                addToast(\"Successfully added job!\", { appearance: 'success' })\n                onComplete()\n            } catch (e) {\n                console.log(e);\n                setState({ ...state, loading: false })\n                addToast(e.message || \"Failed to add job!\", { appearance: 'error' })\n            }\n        }}>\n            <div className='modal-background'></div>\n            <div className='modal-card'>\n                <header className='modal-card-head'>\n                    <div className='modal-card-title is-mobile is-vcentered columns'>\n                        <div className='column has-text-left'>\n                            <button className='button' onClick={onClose}><span className='icon'><FaChevronLeft /></span><span className='is-hidden-mobile'> View Current Jobs</span></button>\n                        </div>\n                        <div className='column has-text-left-mobile is-10-mobile'>\n                            <span>New Job Listing</span>\n                        </div>\n                        <a className='column is-hidden-mobile'></a>\n                    </div>\n                </header>\n                <div className='modal-card-body px-0'>\n                    <div className='container'>\n                        <div className='level px-4 pb-4' style={{ borderBottom: 'solid 1px #1112' }}>\n                            <p className='level-item has-text-left is-block is-size-4 has-text-centered-touch'>Job Details</p>\n                            <p className='level-item has-text-right is-block has-text-grey-light has-text-centered-touch'>All fields are required to be filled out</p>\n                        </div>\n                        <div className='container is-fluid pb-4 px-0'>\n                            <div className='columns mx-0 px-4'>\n                                <div className='column is-6'>\n                                    <FormField required disabled={state.loading} maxLength={types.jobTypes.length} value={state.type} tagifyRef={tagifyRef} tags whitelist={types.jobTypes} onChange={(type) => { setState((state) => ({ ...state, type })) }} className='' containerClassName='mb-4' label=\"Job Type\" placeholder='Begin typing a job type' type='text' icon={<FaSearch />} helpTextLeft='Search and select a job type to improve search results when finding a contractor' />\n                                    <FormField required disabled={state.loading} value={state.title} onChange={(title) => setState({ ...state, title })} className='' containerClassName='my-4' label=\"Title\" placeholder='Provide a title for the job' type='text' icon={null} helpTextLeft='Will be seen by contractors in search result and as an active status' helpTextRight='Maximum 30 characters' maxLength={30} />\n                                    <FormField required disabled={state.loading} value={state.description} onChange={(description) => setState({ ...state, description })} className='' containerClassName='my-4' label=\"Description\" isTextArea placeholder='Provide a description of the job' type='text' icon={null} helpTextLeft='Give a short description to improve finding a contractor that fits the job' helpTextRight='Maximum 80 characters' maxLength={80} />\n                                    <FormField locationAutocomplete={!state.manualAddress} required={!state.manualAddress} disabled={state.loading || state.fetchingLocation} value={state.address} onChange={(e) => {\n                                        if (state.manualAddress) {\n                                            return setState({ ...state, address: e })\n                                        }\n                                        const { address, coords, place_id } = e\n                                        setState((state) => ({\n                                            ...state,\n                                            location: {\n                                                address,\n                                                place_id,\n                                                id: place_id,\n                                                coords\n                                            },\n                                        }))\n                                    }} className='' containerClassName='my-4' label=\"Location Address\" placeholder='Begin typing the first line of the address' type='text' icon={<FaMapMarkerAlt />}\n                                        hasAddons addon={(\n                                            <div className='control'>\n                                                <button disabled={state.loading || state.fetchingLocation} className={`button ${state.fetchingLocation ? 'is-loading' : ''} ${state.manualAddress ? 'is-info has-text-white' : ''}`} onClick={async () => {\n                                                    const manualAddress = !state.manualAddress\n                                                    if (manualAddress) {\n                                                        // If manual address is true, fetch the current location\n                                                        setState({ ...state, fetchingLocation: true })\n                                                        try {\n                                                            setState({ ...state, location: await getCurrentLocation() })\n                                                            addToast(\"Using your current location!\", { appearance: 'success' })\n                                                            setState((state) => ({ ...state, address: '', manualAddress, fetchingLocation: false }))\n                                                        } catch (e) {\n                                                            console.log(e);\n                                                            setState((state) => ({ ...state, fetchingLocation: false }))\n                                                            addToast(e.message || \"Failed to set location manually!\", { appearance: 'error' })\n                                                        }\n                                                    } else {\n                                                        setState((state) => ({ ...state, location: null, manualAddress }))\n                                                    }\n                                                }} type='button' style={{ color: state.manualAddress ? 'unset' : 'black', borderLeft: 0, zIndex: 4 }}><span className='is-size-7'>{state.manualAddress ? 'using current location' : 'or use current location'}</span></button>\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n                                <div className='column is-6'>\n                                    <FormField required disabled={state.loading} value={state.requiredPersons} onChange={(requiredPersons) => setState({ ...state, requiredPersons })} hasAddons className='' containerClassName='mb-4' label=\"How many persons are needed for the job\"\n                                        placeholder='How many persons are needed for the job'\n                                        type='number' helpTextRight='e.g. 10 persons maximum per job'\n                                        icon={null}\n                                        addon={(\n                                            <div className='control'>\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Persons</button>\n                                            </div>\n                                        )}\n                                    />\n                                    <FormField required disabled={state.loading} value={state.price} onChange={(price) => setState({ ...state, price })} hasAddons className='' containerClassName='my-4' label=\"Pay\"\n                                        placeholder='Provide an amount'\n                                        type='number' helpTextLeft='Will be seen in search results. Cannot be adjusted once the listing is pending or active'\n                                        icon={<FaDollarSign />}\n                                        addon={(\n                                            <div className='control'>\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Per Deployment</button>\n                                            </div>\n                                        )}\n                                    />\n                                    <FormField required disabled={state.loading} value={state.tasks} tags onChange={(tasks) => setState((state) => ({ ...state, tasks }))} isTextArea className='' containerClassName='my-4' label=\"Tasks\" placeholder='Add a task' type='text' icon={null} helpTextTop='Provide each task required to be completed for this listing' helpTextRight='Separate each task with a comma (,)' />\n\n                                    <FileInput disabled={state.loading} value={photos} onRemovePhoto={(i) => { setPhotos(photos.filter((_, index) => index !== i)) }} onChange={(photos) => setPhotos(photos)} />\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <footer className='modal-card-foot is-flex-centered'>\n                    <button disabled={state.loading} className='button' onClick={onClose}>Cancel</button>\n                    <button disabled={state.loading} className={`button is-info ${state.loading ? 'is-loading' : ''}`} type='submit'>Confirm</button>\n                </footer>\n            </div>\n        </form>\n    )\n}","import React, { useCallback, useState, useEffect, memo } from 'react';\nimport { BsPencilSquare } from \"react-icons/bs\";\nimport { FaSearch } from 'react-icons/fa';\nimport { NavLink, Route } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { IJob } from '../lib/job';\nimport links from '../lib/links';\nimport { JobItem } from './job';\nimport { Empty, Loading } from './util';\nimport { useDebouncedCallback } from \"use-debounce\";\n\nexport interface IJobListProps {\n    className\n    activeJobs: IJob[]\n    inactiveJobs: IJob[]\n    onCreateNew: any\n    isActive: boolean\n}\n\nexport const JobSideList = ({ className, activeJobs, isActive, inactiveJobs, onCreateNew }) => {\n    const [activeSearchData, setActiveSearchData] = useState<IJob[] | null>(null)\n    const [inactiveSearchData, setInactiveSearchData] = useState<IJob[] | null>(null)\n    const [searchText, setSearchText] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n\n    const searchAlg = useCallback((query: string, jobs: IJob[], callback: (err?: Error, job?: IJob[]) => void) => {\n        if (!query || jobs?.length <= 0) {\n            return jobs\n        }\n        const regexp = new RegExp(query, 'i')\n\n        const result = jobs.filter(job => {\n            return job.job_description?.search(regexp) >= 0 || job.job_title?.search(regexp) >= 0\n                || job.location_address?.search(regexp) >= 0 || job.job_type?.search(regexp) >= 0\n                || (job.user ? job.user.firstName.search(regexp) >= 0 : false) || (job.user ? job.user.lastName.search(regexp) >= 0 : false)\n        })\n        callback(undefined, result)\n    }, [activeJobs, inactiveJobs, searchText])\n\n    const triggerSearch = useCallback(async (search) => {\n        setIsLoading(true)\n        try {\n            if (isActive) {\n                if (activeJobs.length < 1) {\n                    throw new Error('There is no active job to search')\n                }\n                setActiveSearchData(await new Promise<IJob[]>((res, rej) => {\n                    searchAlg(search, activeJobs, ((err, result) => {\n                        if (err) {\n                            rej(err)\n                        } else {\n                            if (!result || result.length < 1) {\n                                rej(new Error('No data'))\n                            } else {\n                                setIsLoading(false)\n                                res(result)\n                            }\n                        }\n                    }))\n                }))\n            } else {\n                if (inactiveJobs.length < 1) {\n                    throw new Error('There is no inactive job to search')\n                }\n                setInactiveSearchData(await (new Promise<IJob[]>((res, rej) => {\n                    searchAlg(search, inactiveJobs, ((err, result) => {\n                        if (err) {\n                            rej(err)\n                        } else {\n                            if (!result || result.length < 1) {\n                                rej(new Error('No data'))\n                            } else {\n                                setIsLoading(false)\n                                res(result)\n                            }\n                        }\n\n                    }))\n                })))\n            }\n        } catch (e) {\n            console.log(e)\n            setActiveSearchData([])\n            setInactiveSearchData([])\n            setIsLoading(false)\n        }\n    }, [activeJobs, inactiveJobs])\n\n    const search = useDebouncedCallback((() => {\n        const search = searchText.trim()\n        if (!search) {\n            setActiveSearchData(null)\n            setInactiveSearchData(null)\n        }\n        if (search) {\n            triggerSearch(search)\n        }\n    }), 800)\n\n    useEffect(() => {\n        search()\n    }, [searchText])\n\n    return (\n        <div className={`${className} panel job-panel has-background-white-ter is-flex is-size-7`}>\n            <div className='panel-heading is-flex is-vcentered pb-4'>\n                <p className='has-text-left is-size-6'>Job Listings</p>\n                <a className='button is-small is-rounded is-size-7' onClick={onCreateNew}><BsPencilSquare /></a>\n            </div>\n            <div className='panel-block'>\n                <form onSubmit={(e) => {\n                    e.stopPropagation()\n                    e.preventDefault()\n                    search()\n                }} className='field has-addons' style={{ flex: 1 }}>\n                    <div className={`control is-expanded has-icons-left`}>\n                        <input style={{ borderRight: 0 }} className='input is-rounded' value={searchText} onChange={(e => setSearchText(e.target.value))} type='search' placeholder='Search Jobs...' />\n                        <span className='icon is-left'><FaSearch /></span>\n                    </div>\n                    {/* <div className='control'>\n                        <button style={{ borderLeft: 0 }} className='button is-rounded' onClick={() => window.alert(\"not ready yet!\")} >\n                            <span className='icon is-right'><GoSettings /></span>\n                        </button>\n                    </div> */}\n                </form>\n            </div>\n            <div className='panel-tabs'>\n                <NavLink to={`${links.activeJobs}`} activeClassName='is-active'>Active</NavLink>\n                <NavLink to={`${links.inactiveJobs}`} activeClassName='is-active'>Inactive</NavLink>\n            </div>\n            <div className='has-background-white-ter' style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n\n                <Route path={`${links.activeJobs}`} render={() => {\n                    if (isLoading) {\n                        return <div key='active-loader' className='px-6 my-6 is-flex'><progress style={{ height: '0.4rem' }} className=\"progress is-small my-6\" max=\"100\">loading</progress></div>\n                    } else if (searchText && activeSearchData && activeSearchData.length < 1) {\n                        return <Empty key='active-empty' className='my-6' style={{ backgroundColor: 'transparent' }} text={'Search did not return any job'} />\n                    } else {\n                        return (searchText && activeSearchData ? activeSearchData : activeJobs).map(j => <JobItem key={j.id} job={j} to={`${links.activeJobs}/${j.id}`} />)\n                    }\n                }} />\n                <Route path={`${links.inactiveJobs}`}\n                    render={() => {\n                        if (isLoading) {\n                            return <div className='px-6 my-6 is-flex'><progress style={{ height: '0.4rem' }} className=\"progress is-small my-6\" max=\"100\">loading</progress></div>\n                        } else if (searchText && inactiveSearchData && inactiveSearchData.length < 1) {\n                            return <Empty className='my-6' style={{ backgroundColor: 'transparent' }} text={'Search did not match any job'} />\n                        } else {\n                            return (searchText && inactiveSearchData ? inactiveSearchData : inactiveJobs).map(j => <JobItem key={j.id} job={j} to={`${links.inactiveJobs}/${j.id}`} />)\n                        }\n                    }} />\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState, useContext } from 'react';\nimport { useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { JobDetail } from '../components/job';\nimport { CreateJob } from '../components/jobcreation';\nimport { JobSideList } from \"../components/JobSideList\";\nimport { useEscapeHandler } from \"../components/util\";\nimport { IJob, Job } from '../lib/job';\nimport links from '../lib/links';\nimport { DUMMY_USER, User } from '../lib/user';\nimport { APPLICATION_CONTEXT } from '../lib';\n\nexport function Jobs() {\n    const ctx = useContext(APPLICATION_CONTEXT);\n    const [state, setState] = useState({ loading: false, showModal: false, selected: null as null | IJob })\n    const [active, setActive] = useState([] as IJob[])\n    const [inactive, setInactive] = useState([] as IJob[])\n    const { addToast } = useToasts()\n    const location = useLocation()\n\n    const dismissModal = () => {\n        setState({ ...state, showModal: false })\n        const containers = window.document.getElementsByClassName('pac-container')\n        for (let i; i < containers.length; i++) {\n            containers.item(i)?.remove()\n        }\n    }\n\n    const removeEscapeHandler = useEscapeHandler(dismissModal)\n\n    useEffect(() => {\n        return removeEscapeHandler()\n    }, [])\n\n    useEffect(() => {\n        setState({ ...state, loading: true });\n        const unsubscribe = Job.listenForActiveAndPendingJobs(ctx, async (err, docs: IJob[]) => {\n            if (err) {\n                setState({ ...state, loading: false });\n                return addToast(err.message || 'Failed to get jobs!');\n            }\n            docs = await Promise.all(\n                docs.map(async (v) => {\n                    if (v.status !== 'available' && v.executed_by) {\n                        v.user = await User.getExternalUser(ctx, v.executed_by);\n                    }\n                    return v;\n                })\n            );\n            setState({ ...state, loading: false });\n            setActive(docs)\n        })\n\n        Job.getInactiveJobs(ctx).then(async (jobs) => await jobs.map(async (v: IJob) => {\n            v.user = await User.getExternalUser(ctx, v.executed_by);\n            return v;\n        })).then(jobs => {\n            setInactive(jobs)\n        }).catch(e => {\n            console.log(e)\n            addToast(e.message || \"Failed to get inactive jobs\", {\n                appearance: 'error'\n            })\n        })\n\n        return unsubscribe;\n    }, []);\n\n    const { id } = useParams()\n    const activeMatch = useRouteMatch({\n        path: links._jobItem.active,\n        strict: true,\n        exact: true\n    })\n    const inactiveMatch = useRouteMatch({\n        path: links._jobItem.inactive\n    })\n\n    useEffect(() => {\n        if (id) {\n            if (activeMatch) {\n                const selected = active.find(v => v.id === id)\n                setState({ ...state, selected: selected || null })\n            } else if (inactiveMatch) {\n                const selected = inactive.find(v => v.id === id)\n                setState({ ...state, selected: selected || null })\n            }\n        }\n    }, [location, active, inactive])\n\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <JobSideList isActive={!!activeMatch} activeJobs={active} inactiveJobs={inactive} onCreateNew={() => setState({ ...state, showModal: true })} className='column is-3 is-12-mobile is-12-touch is-clipped is-fullheight' />\n            <JobDetail onCancel={(job: IJob) => {\n                if (job.status === 'complete') {\n                    setInactive(inactive.filter(v => v.id !== job.id))\n                } else {\n                    setActive(active.filter(v => v.id !== job.id))\n                }\n                setState({ ...state, selected: null })\n            }}\n                job={id ? state.selected : null} className='column is-9 is-12-touch is-12-mobile is-flex' />\n            {state.showModal ?\n                <CreateJob show={state.showModal} onClose={dismissModal} onComplete={() => {\n                    dismissModal()\n                }} />\n                : null}\n        </div>\n    )\n}","import React, { useCallback, useContext, useState } from 'react';\nimport { FaAngleDoubleRight, FaChevronLeft, FaEnvelope, FaEye, FaEyeSlash, FaKey, FaPhoneAlt, FaSignInAlt, FaSms, FaUser, FaUserPlus } from 'react-icons/fa';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\nimport links from '../lib/links';\nimport logo from \"../logo_runner.jpg\";\n\nexport interface IRegister {\n    first_name: string,\n    last_name: string,\n    password: string,\n    password_verify: string,\n    email: string,\n    phone_number: string,\n}\n\nexport interface ILogin {\n    code: string,\n    phone_number: string,\n    password: string,\n    showPassword: boolean,\n    loading?: boolean\n}\n\nexport function RegisterView() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        showModal: false,\n        showCodeRequest: true,\n        showPassword: false,\n        showPasswordVerify: false,\n        loading: false,\n    })\n    const [formState, setFormState] = useState<IRegister>({\n        email: '',\n        first_name: '',\n        last_name: '',\n        password: '',\n        password_verify: '',\n        phone_number: ''\n    })\n\n    const { addToast } = useToasts()\n    const history = useHistory()\n    const location = useLocation()\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        setState({ ...state, loading: true })\n\n        try {\n            const response = await ctx.addAdmin(formState)\n\n            if (!response || !response.success) {\n                throw new Error('Failed to register user!')\n            }\n            addToast('User registered successfully!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false })\n            history.push(links.login, location.state)\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Failed to add new user!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n        }\n    }, [state, formState])\n\n\n    return (\n        <div className='section'>\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\n                <img src={logo} className='is-rounded' />\n            </figure>\n\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\n\n            <form className='my-2' onSubmit={onSubmit}>\n                <div className='field is-horizontal'>\n                    <div className='field-body'>\n                        <div className='field'>\n                            <div className='control has-icons-left '>\n                                <input autoComplete=\"given-name\" disabled={state.loading} required value={formState.first_name} onChange={(e) => setFormState({ ...formState, first_name: e.target.value })} placeholder='enter firstname' className='input' type='text' />\n                                <span className='icon is-left is-small'><FaUser /></span>\n                            </div>\n                        </div>\n                        <div className='field'>\n                            <div className='control has-icons-left '>\n                                <input autoComplete=\"family-name\" disabled={state.loading} required value={formState.last_name} onChange={(e) => setFormState({ ...formState, last_name: e.target.value })} placeholder='enter lastname' className='input' type='text' />\n                                <span className='icon is-left is-small'><FaUser /></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='field'>\n                    <div className='control has-icons-left '>\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.email} onChange={(e) => setFormState({ ...formState, email: e.target.value })} placeholder='enter your email address' className='input' type='email' />\n                        <span className='icon is-left is-small'><FaEnvelope /></span>\n                    </div>\n                </div>\n\n                <div className='field'>\n                    <div className='control has-icons-left '>\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.phone_number} onChange={(e) => setFormState({ ...formState, phone_number: e.target.value })} placeholder='enter your phone number include the \"+\" sign' className='input' type='tel' />\n                        <span className='icon is-left is-small'><FaPhoneAlt /></span>\n                    </div>\n                </div>\n\n                <div className='field is-horizontal'>\n                    <div className='field-body'>\n                        <div className='field has-addons'>\n                            <div className='control has-icons-left is-expanded'>\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password} onChange={(e) => setFormState({ ...formState, password: e.target.value })} placeholder='enter your password' className='input' type={state.showPassword ? 'text' : 'password'} />\n                                <span className='icon is-left is-small'><FaKey /></span>\n                            </div>\n                            <div className='control'>\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\n                                </button>\n                            </div>\n                        </div>\n\n                        <div className='field has-addons'>\n                            <div className='control has-icons-left is-expanded'>\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password_verify} onChange={(e) => setFormState({ ...formState, password_verify: e.target.value })} placeholder='re-enter your password' className='input' type={state.showPasswordVerify ? 'text' : 'password'} />\n                                <span className='icon is-left is-small'><FaKey /></span>\n                            </div>\n                            <div className='control'>\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPasswordVerify: !state.showPasswordVerify })}>{state.showPasswordVerify ? <FaEyeSlash /> : <FaEye />}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className='field mt-6'>\n                    <div className='control'>\n                        <button disabled={state.loading} className={`button is-rounded is-fullwidth is-uppercase is-success ${state.loading ? 'is-loading' : ''}`} type='submit'>\n                            <FaUserPlus />&nbsp; Register\n                    </button>\n                    </div>\n                </div>\n            </form>\n\n            <div className='section mt-6 is-size-7'>\n                <p>Already have an account?</p>\n                <Link to={links.login}>Click here to login</Link>\n            </div>\n        </div>\n    )\n\n}\n\n\nexport function LoginView() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({\n        showCodeRequest: true,\n        loading: false,\n        phone: ''\n    })\n\n    const { addToast } = useToasts()\n\n\n    /**\n     * Called to verify the user's number and send OTP through specified channel.\n     */\n    const onSubmitCodeRequest = useCallback(async (form: { phone: string, channel: 'sms' | 'call' }) => {\n        setState({ ...state, loading: true })\n\n        try {\n            // Check if number exists in database\n            await ctx.validateNumber(form.phone)\n            // Generate OTP code for provided number\n            const done = await ctx.triggerVerification(form.phone, form?.channel)\n\n            if (!done) {\n                throw new Error('Failed to verify phone number!')\n            }\n\n            addToast('Verification code sent to your phone!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false, phone: form.phone })\n            return true\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Verification failed!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n            return false\n        }\n    }, [state])\n\n    /**\n     * Called to login to application after the OTP has been received and inputted in the form.\n     */\n    const onSubmitVerified = useCallback(async (form: ILogin) => {\n        setState({ ...state, loading: true })\n\n        try {\n            const user = await ctx.login(form.phone_number, form.code, form.password)\n\n            if (!user) {\n                throw new Error('Failed to login!')\n            }\n\n            addToast('Login successful!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false, })\n            return true\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Login failed!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n            return false\n        }\n    }, [state])\n\n\n    return (\n        <div className='section'>\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\n                <img src={logo} className='is-rounded' />\n            </figure>\n\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\n\n            {state.showCodeRequest ? (\n                <CodeRequestForm onComplete={() => setState({ ...state, showCodeRequest: false })} loading={state.loading} onSubmit={onSubmitCodeRequest} />\n            ) : (\n                    <LoginForm onCancel={() => setState({ ...state, showCodeRequest: true })} loading={state.loading} phone={state.phone} onSubmit={onSubmitVerified} />\n                )}\n\n            <div className='section mt-6 is-size-7'>\n                <p>Are you a new user?</p>\n                <Link to={links.register}>Request access</Link>\n            </div>\n        </div>\n    )\n}\n\n\nfunction CodeRequestForm({ onSubmit, loading, onComplete }) {\n    const [state, setState] = useState({\n        phone: '',\n        channel: 'sms'\n    })\n    const [viewState, setView] = useState({\n        showOptions: false,\n        hold: false,\n        holdTimer: 0,\n    })\n\n    let intervalID\n\n    const onSubmitForm = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        // Trigger code to be sent. `success` decides if the code was successfully triggered.\n        const success = await onSubmit(state)\n        if (success) {\n            let counter = 59\n\n            clearInterval(intervalID)\n            intervalID = setInterval(() => {\n                if (counter === 0) {\n                    clearInterval(intervalID)\n                    setView({ ...viewState, hold: false, showOptions: true, holdTimer: counter })\n                    return\n                }\n                setView({ ...viewState, hold: true, holdTimer: counter, showOptions: true, })\n                counter--\n            }, 1000)\n        }\n    }, [state, viewState])\n\n    return (\n        <form onSubmit={onSubmitForm}>\n            <div className='field'>\n                <div className='control has-icons-left '>\n                    <input autoComplete=\"off\" disabled={loading || viewState.hold} required value={state.phone} onChange={(e) => setState({ ...state, phone: e.target.value })} placeholder='enter your phone number' className='input is-rounded' type='tel' />\n                    <span className='icon is-left is-small'><FaPhoneAlt /></span>\n                </div>\n\n            </div>\n            <div className='field mt-4'>\n                <div className='control'>\n                    {viewState.showOptions ?\n                        (\n                            <button onClick={onComplete} disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='button'>\n                                <FaAngleDoubleRight />&nbsp; Proceed\n                            </button>\n                        ) : (\n                            <button disabled={loading || viewState.hold} className={`button is-rounded is-uppercase is-info ${loading ? 'is-loading' : ''}`} type='submit'>\n                                {state.channel === 'sms' ? <><FaSms />&nbsp; Send Code</> : <><FaPhoneAlt />&nbsp; Call Me</>}\n                            </button>\n                        )\n                    }\n                </div>\n            </div>\n\n            <div className='field is-size-7'>\n\n                {viewState.showOptions ? (\n                    <>\n                        <p className='help mt-4 mb-2'>Didn't get code? {viewState.hold ? <span className='has-text-danger'>Try again in: {viewState.holdTimer}s</span> : null}</p>\n                        <div className='control buttons has-addons is-centered'>\n                            <button onClick={() => {\n                                setView({ ...viewState, showOptions: false })\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\n                                <span className='is-size-7'>Try Again</span>\n                            </button>\n                            <button onClick={() => {\n                                setState({ ...state, channel: state.channel === 'sms' ? 'call' : 'sms' })\n                                setView({ ...viewState, showOptions: false })\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\n                                <span className='is-size-7'> {state.channel === 'sms' ? \"Use voice\" : \"Use SMS\"}</span>\n                            </button>\n                        </div>\n                    </>\n                ) : null}\n            </div>\n\n        </form>\n    )\n}\n\n\nfunction LoginForm({ phone, loading, onSubmit, onCancel }) {\n    const [state, setState] = useState<ILogin>({\n        code: '',\n        phone_number: phone,\n        password: '',\n        showPassword: false,\n    })\n\n    const onSubmitForm = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        await onSubmit(state)\n    }, [state])\n\n    return (\n        <form onSubmit={onSubmitForm} >\n            <div className='field'>\n                <div className='control has-icons-left'>\n                    <input autoComplete=\"off\" disabled required value={state.phone_number} placeholder='enter your phone number' className='input' type='tel' />\n                    <span className='icon is-left is-small'><FaUser /></span>\n                </div>\n            </div>\n            <div className='field'>\n                <div className='control has-icons-left'>\n                    <input autoComplete=\"off\" pattern={'/.{4}/'} max={9999} maxLength={4} minLength={4} disabled={state.loading} required value={state.code} onChange={(e) => setState({ ...state, code: e.target.value })} placeholder='enter 4 digits code' className='input' type='number' />\n                    <span className='icon is-left is-small'><RiLockPasswordLine /></span>\n                </div>\n            </div>\n            <div className='field has-addons'>\n                <div className='control has-icons-left is-expanded'>\n                    <input autoComplete=\"off\" disabled={state.loading} required value={state.password} onChange={(e) => setState({ ...state, password: e.target.value })} placeholder='enter your password' className='input' type={state.showPassword ? 'text' : 'password'} />\n                    <span className='icon is-left is-small'><FaKey /></span>\n                </div>\n                <div className='control'>\n                    <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\n                    </button>\n                </div>\n            </div>\n            <div className='field mt-6'>\n                <div className='control buttons is-centered'>\n                    <button onClick={onCancel} disabled={loading} className={`button is-rounded is-uppercase is-dark is-outlined`} type='button'>\n                        <FaChevronLeft />&nbsp; Back\n                    </button>\n                    <button disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='submit'>\n                        <FaSignInAlt />&nbsp; Login\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { LoginView } from '../components/auth';\nimport { AuthHandler } from '../components/guard';\nimport { VIEW_CONTEXT } from '../lib';\n\nexport function Login() {\n    const viewCTX = useContext(VIEW_CONTEXT)\n\n    useEffect(() => {\n        viewCTX.showToolbar(false)\n        viewCTX.showFooter(false)\n\n        return () => {\n            viewCTX.showToolbar(true)\n            viewCTX.showFooter(true)\n        }\n    })\n\n    return (\n        <AuthHandler>\n            <div className='columns is-gapless is-fullheight is-multiline'>\n                <div className='column is-flex-centered is-atleast-fullheight'>\n                    <LoginView />\n                </div>\n                <div className='column is-6 is-hidden-touch is-flex has-background-info' />\n            </div>\n        </AuthHandler>\n    )\n}","import React, { useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\n\nexport function Logout() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n\n    useEffect(() => {\n        viewCTX.setAppReady(false)\n        viewCTX.showToolbar(false)\n        ctx.logout()\n\n        return () => {\n            viewCTX.showToolbar(true)\n            viewCTX.setAppReady(true)\n        }\n    }, [])\n\n    if (!viewCTX.signedIn) {\n        return <Redirect to={{ pathname: '/' }} />\n    }\n\n\n\n    return (\n        viewCTX.signedIn ? <></> : <Redirect to={{ pathname: '/' }} />\n    )\n}","import moment from \"moment\";\nimport React, { createContext, HTMLAttributes, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { BsPencilSquare } from 'react-icons/bs';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport { FaComments, FaSearch, FaStar } from 'react-icons/fa';\nimport { NavLink, Route, Link } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport links from \"../lib/links\";\nimport { IChatItem, IMessage, Message } from \"../lib/message\";\nimport { User } from '../lib/user';\nimport { Empty } from \"./util\";\nimport logo from '../logo_runner.jpg'\nimport { useDebouncedCallback } from \"use-debounce\";\n\nexport const ChatContext = createContext<{ chats: IChatItem[], setChats: (messages: IChatItem[]) => any }>({ chats: [], setChats: (chats) => { } })\n\nexport const ChatListProvider = (props) => {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [chats, setChats] = useState<IChatItem[]>([])\n\n    const triggerListener = useCallback(() => {\n        const unsubscribe = Message.listenForChats(ctx, async (err, docs) => {\n            if (err) {\n                console.log(err)\n                return\n            }\n            if (!docs) {\n                return\n            }\n            const parsedChats: IChatItem[] = await Promise.all(await docs.map(async (doc) => {\n                const parsed: any = doc.data({ serverTimestamps: 'estimate' })\n                const old = chats.find(chat => chat?.id === doc.id)\n                parsed.id = doc.id\n                try {\n                    parsed.users = await Promise.all(await parsed.users.map(async (user: string) => {\n                        if (user === ctx.user!.id) {\n                            return ctx.user\n                        } else if (old) {\n                            const existing = old.users.find((existing: User) => existing.id === user)\n                            if (existing) {\n                                parsed.recipient = existing\n                                return existing\n                            } else {\n                                const recipient = await User.getExternalUser(ctx, user)\n                                parsed.recipient = recipient\n                                return recipient\n                            }\n                        }\n                        const recipient = await User.getExternalUser(ctx, user)\n                        parsed.recipient = recipient\n                        return recipient\n                    }))\n                    parsed.last_message = { ...parsed.last_message, createdAt: parsed.last_message?.createdAt.toDate() }\n                    return parsed\n                } catch (e) {\n                    console.log('Failed to get user data', e)\n                }\n            }))\n\n            setChats(parsedChats)\n        })\n\n        return () => unsubscribe()\n    }, [chats, ctx])\n\n    useEffect(() => {\n        if (ctx.user) {\n            return triggerListener()\n        }\n    }, [ctx.user])\n\n\n    return (\n        <ChatContext.Provider value={{ chats, setChats }}>\n            {props.children}\n        </ChatContext.Provider>\n    )\n}\n\nexport function MessageListItem({ chat, to }: { chat: IChatItem, to: any }) {\n    const time = moment(chat.last_message!.createdAt)\n\n    return (\n        <NavLink activeClassName=\"is-active\" to={to} className={`job-item message-iitem mb-8 py-2 is-block card is-shadowless has-background-white-ter`}>\n            <div className='card-content'>\n                <div className='container is-paddingless'>\n                    <div className='columns '>\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                            <figure className='image is-flex is-48x48'>\n                                <img className='is-rounded' onError={(img) => img.currentTarget.src = logo} src={chat.recipient.profilePhoto} />\n                            </figure>\n                        </div>\n                        <div className='column'>\n                            <div className='columns mb-0 is-mobile is-vcentered name-bar'>\n                                <div className='has-text-left column has-text-weight-bold'>\n                                    <p>{`${chat.recipient.firstName} ${chat.recipient.lastName}`}</p>\n                                </div>\n                                <div className='has-text-right is-3-mobile column'>\n                                    <p>{time.calendar({ sameElse: 'DD/MMM/YYYY' })}</p>\n                                </div>\n                            </div>\n                            <div className='content has-text-left has-text-centered-mobile'>\n                                <p>{chat.last_message!.text}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function MessageItem({ message, isCurrentUser, prevMessage, ...props }: { isCurrentUser: boolean, message: IMessage, prevMessage?: IMessage } & HTMLAttributes<HTMLDivElement>) {\n    const diffDay = Message.isDifferentDay(message, prevMessage)\n    return (\n        <>\n            {!!diffDay && <p className='is-size-8 my-4 has-text-grey-light'>{diffDay.calendar({ sameElse: 'DD/MMM/YYYY' })}</p>}\n            <div {...props} style={{ flexGrow: 0, ...props.style }} className={`container my-1 ${props.className} ${isCurrentUser ? 'mr-0' : 'ml-0'}`}>\n                <div className={`columns my-0 mx-0 is-vcentered ${isCurrentUser ? 'is-flex-direction-row-reverse' : ''}`}>\n                    <div className='column is-paddingless is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                            <figure className='image is-32x32 is-flex'>\n                                <img className='is-rounded' style={{ border: 'solid #eaeaea 0.5px' }} onError={(img) => img.currentTarget.src = logo} src={message.user.profileImageURL} />\n                            </figure>\n                        </div>\n                        <div className='column is-size-7'>\n                            <span>{message.user.firstName} {message.user.lastName}</span>\n                        </div>\n                    </div>\n                </div>\n                <article style={{ borderRadius: '2em', border: isCurrentUser ? 'solid #dadada88 1px' : 0 }} className={`content px-4 py-2 ${isCurrentUser ? 'has-background-white has-text-black' : 'has-background-link has-text-white'}`}>\n                    <p>{message.text}</p>\n                </article>\n            </div>\n        </>\n    )\n}\n\nexport function MessageList({ onNewChat = () => { }, onOptionsClick = () => { }, className = '' }) {\n    const { chats } = useContext(ChatContext)\n    const [searchedChat, setSearchedChat] = useState<IChatItem[] | null>(null)\n    const [searchText, setSearchText] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n\n    const triggerSearch = useCallback(async (search) => {\n        setIsLoading(true)\n        try {\n            if (chats.length < 1) {\n                throw new Error('There is no chat to search')\n            }\n            if (!search) {\n                setSearchedChat(null)\n            }\n            const regexp = new RegExp(search, 'i')\n\n            const results = chats.filter((chat: IChatItem) => {\n                return (chat.last_message ? chat.last_message.text.search(regexp) >= 0 : false) || chat.recipient.firstName?.search(regexp) >= 0 || chat.recipient.lastName?.search(regexp) >= 0\n            })\n            console.log(results)\n            setSearchedChat(results)\n            setIsLoading(false)\n        } catch (e) {\n            console.log(e)\n            setSearchedChat([])\n            setIsLoading(false)\n        }\n    }, [chats])\n\n    const search = useDebouncedCallback(((e?: any) => {\n        if (e) {\n            e.stopPropagation()\n            e.preventDefault()\n        }\n\n        const search = searchText.trim()\n        if (!search) {\n            setSearchedChat(null)\n        }\n        if (search) {\n            triggerSearch(search)\n        }\n    }), 800)\n\n    useEffect(() => {\n        search()\n    }, [searchText])\n\n    return (\n        <div className={`${className} panel job-panel has-background-white-ter is-flex is-size-7`}>\n            <div className='panel-heading is-flex is-vcentered pb-4'>\n                <p className='has-text-left is-size-6'>Recent Messages</p>\n                <div className='field is-grouped is-grouped-right'>\n                    <p className='control'>\n                        <button className='button is-rounded is-small' onClick={onNewChat}>\n                            <span className='icon'>\n                                <BsPencilSquare />\n                            </span>\n                        </button>\n                    </p>\n                    <p className='control'>\n                        <button className='button is-rounded is-small' onClick={onOptionsClick}>\n                            <span className='icon'>\n                                <CgMoreAlt />\n                            </span>\n                        </button>\n                    </p>\n                </div>\n            </div>\n            <div className='panel-block'>\n                <div className='field has-addons' style={{ flex: 1 }}>\n                    <form onSubmit={(e) => {\n                        e.stopPropagation()\n                        e.preventDefault()\n                        search()\n                    }} className='control is-expanded has-icons-left'>\n                        <input value={searchText} onChange={e => setSearchText(e.target.value)} style={{ borderRight: 0 }} className='input is-rounded' type='search' placeholder='Search Messages...' />\n                        <span className='icon is-left'><FaSearch /></span>\n                    </form>\n                    {/* <div className='control'>\n                        <button style={{ borderLeft: 0 }} className='button is-rounded' onClick={() => window.alert(\"not ready yet\")}>\n                            <span className='icon is-right'><GoSettings /></span>\n                        </button>\n                    </div> */}\n                </div>\n            </div>\n            <div className='has-background-white-ter' style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n                <Route path={`${links.messages}`} render={() => {\n                    if (isLoading) {\n                        return <div key='meassages-loader' className='px-6 my-6 is-flex'><progress style={{ height: '0.4rem' }} className=\"progress is-small my-6\" max=\"100\">loading</progress></div>\n                    } else if (searchText && searchedChat && searchedChat.length < 1) {\n                        return <Empty key='messages-search-empty' className='my-6' style={{ backgroundColor: 'transparent' }} text={'Search did not return any chat'} />\n                    } else if (chats.length < 1) {\n                        return <Empty key='messages-empty' className='my-6' style={{ backgroundColor: 'transparent' }} text={'No chat started yet!'} />\n                    } else {\n                        return (searchText && searchedChat ? searchedChat : chats).map(m => <MessageListItem key={m.id} chat={m} to={`${links.messages}/${m.id}`} />)\n                    }\n                }} />\n            </div>\n        </div>\n    )\n}\n\nexport function MessageDetail({ chat, className }: { chat?: IChatItem, className?: string }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [messages, setMessages] = useState<IMessage[]>([])\n    const [text, setText] = useState('')\n    const [sending, setSending] = useState(false)\n    const [userView, setUserView] = useState<User | null>(null)\n    const { addToast } = useToasts()\n    const sectionRef = useRef<HTMLElement>(null)\n    const inputRef = useRef<HTMLTextAreaElement>(null)\n\n    const onOptionsClick = useCallback(async () => {\n        if (userView) {\n            return setUserView(null)\n        }\n        if (chat?.recipient) {\n            setUserView(chat?.recipient)\n        }\n    }, [chat?.recipient, userView])\n\n    const sendMessage = useCallback(async () => {\n        setSending(true)\n        try {\n            const message = text.trim()\n            if (!message) {\n                throw new Error('Cannot send empty message!')\n            }\n            if (!chat || !ctx.user) {\n                throw new Error('No chat thread available!')\n            }\n            await Message.sendMessage(ctx, chat, {\n                text: message,\n                type: 'text',\n                user: ctx.user,\n            })\n            setText('')\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Failed to send message', {\n                appearance: 'error'\n            })\n        } finally {\n            setSending(false)\n        }\n    }, [text])\n\n    useEffect(() => {\n        if (chat && chat.initialized) {\n            const unsubscribe = Message.listenForChatMessages(ctx, chat, (err, messages) => {\n                if (err) {\n                    console.log(err)\n                } else if (messages) {\n                    setMessages(messages)\n                }\n            })\n            return () => { unsubscribe() }\n        }\n    }, [chat?.recipient, chat?.initialized])\n\n    useEffect(() => {\n        setText('')\n        if (chat?.recipient && userView && userView.id !== chat?.recipient.id) {\n            setUserView(chat.recipient)\n        }\n\n        if (sectionRef.current) {\n            const el = sectionRef.current\n            if (el.scrollHeight > el.clientHeight && el.scrollTop < (el.scrollHeight - el.clientHeight)) {\n                if (sectionRef.current.scroll) {\n                    sectionRef.current.scroll(0, el.scrollHeight - el.clientHeight)\n                } else {\n                    sectionRef.current.scrollTop = el.scrollHeight - el.clientHeight\n                }\n            }\n        }\n        if (chat?.recipient && document.activeElement !== inputRef.current) {\n            inputRef.current?.focus()\n        }\n    }, [chat?.recipient, messages.length])\n\n    if (!chat) {\n        return (\n            <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n                <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\n                    <span className='my-4' ><FaComments fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                    <p className='is-uppercase is-size-6 has-text-weight-bold'>Select a contact to start a chat</p>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className={`${className} card job-detail is-fullheight is-flex-direction-column`} style={{ zIndex: 1, animation: 'all 0.5s linear' }}>\n            <div className='card-content is-paddingless is-atleast-fullheight'>\n                <div className='level py-4 mb-0 is-mobile' style={{ zIndex: 2 }}>\n                    <div className='level-item is-size-7'></div>\n                    <div className='level-item is-size-5 has-text-weight-bold'>{`${chat.recipient.firstName} ${chat.recipient.lastName}`}</div>\n                    <div className='level-item is-size-7 pr-4' style={{ justifyContent: 'flex-end' }}>\n                        <button onClick={onOptionsClick} className='button is-rounded is-small'><CgMoreAlt /></button>\n                    </div>\n                </div>\n                <div className='columns mx-0 my-0 is-fullheight is-clipped'>\n                    <div className={`container is-fullheight is-fluid px-0 is-clipped ${userView ? 'column is-7 is-hidden-mobile' : ''}`} style={{ position: 'relative', paddingBottom: '6em' }}>\n                        <section ref={sectionRef} style={{ overflowY: 'auto' }} className='section is-flex pt-1 pb-0 is-fullheight is-flex-direction-column'>\n                            {(chat.initialized === false || messages.length < 1) && (\n                                <div className={`is-flex`} style={{ flexDirection: 'column' }}>\n                                    <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\n                                        <span className='my-4' ><FaComments fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                                        <p className='is-uppercase is-size-6 has-text-weight-bold'>Send your first chat to `{chat.recipient.firstName} {chat.recipient.lastName}`</p>\n                                    </div>\n                                </div>\n                            )}\n                            {messages.map((message, i) => <MessageItem isCurrentUser={message.user.id === ctx.user?.id} message={message} prevMessage={messages[i - 1]} key={message._id} />)}\n                        </section>\n                        <div className='columns is-mobile is-fullheight mx-0 my-0' style={{\n                            position: 'relative', left: 0, right: 0,\n                            bottom: 0, height: '6em',\n                            borderTop: 'solid #dadada88 1px',\n                        }}>\n                            <div className='column is-8 is-mobile'>\n                                <div className={`control ${sending && 'is-loading'}`}>\n                                    <textarea autoFocus ref={inputRef} onChange={(e) => setText(e.target.value)} value={text} style={{ border: 0, height: '100%', minHeight: 'unset' }} className='textarea has-fixed-size' placeholder='Type a message...'></textarea>\n                                </div>\n                            </div>\n                            <div className='column columns is-centered mx-0 my-0 is-4 is-mobile is-flex'>\n                                <div className='buttons'>\n                                    <button className='button is-success is-rounded' disabled={!text || sending} onClick={sendMessage}>SEND</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {!!userView && (\n                        <div className='column is-5' style={{ borderLeft: 'solid 1px #8884' }}>\n                            <div className='container pt-4 pb-0 is-flex' style={{ flexDirection: 'column' }} >\n                                <div style={{ borderBottom: 'solid #aaa4 0.2px', alignItems: 'stretch' }} className='columns is-centered mb-0 is-flex is-flex-direction-column px-4'>\n                                    <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                                        <figure className='image is-128x128 is-flex'>\n                                            <img key={userView.profilePhoto} className='is-rounded' src={userView.profilePhoto} />\n                                        </figure>\n                                    </div>\n                                    <div className='column'>\n                                        <div className='container has-text-centered '>\n                                            <p className='is-size-6 has-text-weight-bold'>{`${userView.firstName} ${userView.lastName}`}</p>\n                                            <div className='content'>\n                                                <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{userView.starRate}</p>\n                                                <p className='is-size-6'>{userView.profileBio}</p>\n                                                <p className='has-text-grey-light is-size-8'><span className='is-uppercase'>member since</span>&nbsp; {moment(userView.dateCreated).calendar({ sameElse: 'DD/MMM/YYYY' })}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\n                                    <table className='table is-hoverable is-fullwidth'>\n                                        <tbody className='is-size-6'>\n                                            <tr className='is-flex has-text-left'>\n                                                <td style={{ flex: 1 }} className='has-text-grey is-size-6'>{userView.phoneNumber}</td>\n                                                <td style={{ flex: 2 }} className='has-text-right'>\n                                                    <Link to={{ pathname: `${links.profile}/${userView.id}`, state: { user: userView } }} className=\"has-text-link pr-0 pb-0 is-size-6\">View Profile</Link>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { ChatContext, MessageDetail, MessageList } from '../components/messages';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { IChatItem } from '../lib/message';\n\nexport function Messages() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const { chats } = useContext(ChatContext)\n    const [chat, setChat] = useState<IChatItem | undefined>(undefined)\n    const location = useLocation()\n\n    const { id } = useParams()\n\n    useEffect(() => {\n        if (id) {\n            const chat = chats.find(chat => chat.id === id)\n            if (chat) {\n                setChat(chat)\n            } else {\n                // Check if chat object was passed in order to initialize a chat, the ID in this scenario should be `new`\n                const { chat } = location.state as { chat: IChatItem } || { chat: null }\n                if (chat) {\n                    // TODO: always check database if the chat thread has already been created\n                    setChat(chat)\n                } else {\n                    setChat(undefined)\n                }\n            }\n        } else {\n            setChat(undefined)\n        }\n    }, [location, chats])\n\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <MessageList onNewChat={() => { }} className='column is-3 is-12-mobile is-clipped is-fullheight' />\n            <MessageDetail chat={chat} className='column is-7 is-12-mobile is-flex' />\n        </div>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { FaEnvelope, FaExclamationCircle, FaGraduationCap, FaMapMarkerAlt, FaStar } from 'react-icons/fa';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { Empty } from \"../components/util\";\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { Job } from '../lib/job';\nimport { User } from '../lib/user';\nimport moment from \"moment\";\nimport logo from '../logo_runner.jpg'\n\n\n/**\n * Profile component for viewing details of a user's profile. \n */\nexport function Profile() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [user, setUser] = useState<User>()\n    const [loading, setLoading] = useState<boolean>(true)\n    const [comments, setComments] = useState<{ text: string, first_name: string, last_name: string }[]>([])\n    const [loadingComments, setLoadingComments] = useState<boolean>(true)\n    const location = useLocation()\n    const { id } = useParams()\n    const { addToast } = useToasts()\n\n    useEffect(() => {\n        (async () => {\n            try {\n                setLoading(true)\n                const { user } = location.state as { user: User } || { user: null }\n                if (user) {\n                    setUser(user)\n                } else {\n                    if (!id) {\n                        throw new Error('No user found!')\n                    }\n                    const user = await User.getExternalUser(ctx, id)\n                    setUser(user)\n                }\n            } catch (e) {\n                console.log(e)\n                addToast(e.message || 'Failed to load user data!', { appearance: 'error' })\n            } finally {\n                setLoading(false)\n            }\n        })()\n    }, [location])\n\n    useEffect(() => {\n        (async () => {\n            if (!user) {\n                setLoadingComments(false)\n                return\n            }\n            try {\n                setLoadingComments(true)\n                const commentsData = await User.getComments(id)\n                setComments(commentsData)\n            } catch (e) {\n                console.log(e)\n                addToast(e.message || 'Failed to load comments!', { appearance: 'error' })\n            } finally {\n                setLoadingComments(false)\n            }\n        })()\n    }, [user])\n\n    return (\n        <div className='is-1 is-variable px-3 py-3 my-0 is-fullheight is-multiline'>\n            <div className='has-background-link' style={{\n                height: '10em',\n                width: '100%',\n                borderRadius: '1em 1em 0 0',\n                border: 'solid #dadada88 1px',\n                borderBottom: 0\n            }}></div>\n            {loading ?\n                <div className='columns is-flex-centered is-gapless is-clipped' style={{\n                    marginBottom: '0.8em',\n                    borderRadius: '0 0 1em 1em',\n                    backgroundColor: '#fafafa',\n                    border: 'solid #dadada88 1px',\n                    borderTop: 0,\n                    height: '76%',\n                }}>\n                    <div className='column is-4 is-12-mobile'>\n                        <div className='section px-6'>\n                            <progress className=\"progress is-small is-danger\" max=\"100\">loading</progress>\n                        </div>\n                    </div>\n                </div>\n                :\n                !user ?\n                    <Empty className='is-flex is-flex-direction-column is-size-5 is-flex-centered'\n                        icon={<FaExclamationCircle className='has-text-danger is-size-1 mb-4' />}\n                        style={{\n                            marginBottom: '0.8em',\n                            borderRadius: '0 0 1em 1em',\n                            backgroundColor: '#fafafa',\n                            border: 'solid #dadada88 1px',\n                            borderTop: 0,\n                            height: '76%',\n                        }}>\n                        <p className='block has-text-grey is-size-6'>No user found!</p>\n                    </Empty>\n                    :\n                    <div className='columns is-gapless' style={{\n                        marginBottom: '0.8em',\n                        borderRadius: '0 0 1em 1em',\n                        backgroundColor: '#fafafa',\n                        border: 'solid #dadada88 1px',\n                        borderTop: 0,\n                        minHeight: '68%',\n                    }}>\n                        <div className='column is-3 is-flex is-flex-direction-column has-text-left' style={{ alignItems: 'stretch' }}>\n                            <figure className='image is-flex is-128x128' style={{ top: '-5.6em', alignSelf: 'center' }}>\n                                <img className='is-rounded' onError={(img) => img.currentTarget.src = logo} src={Job.getPhotoURL(ctx, user.id)} style={{ background: 'radial-gradient(#fff ,#3273dc 300% 4%)', border: 'solid #8884 0.1px' }} />\n                            </figure>\n                            <div className='is-flex mb-4 is-flex-direction-column px-5' style={{ justifyContent: 'space-between', alignItems: 'stretch', flexGrow: 1, position: 'relative' }}>\n                                <div className='content has-text-left' style={{ position: 'relative', top: '-4em', width: '100%' }}>\n                                    <p className='mb-1 has-text-weight-bold'>{user.firstName} {user.lastName}</p>\n                                    <p className='mb-2 is-inline-flex has-text-grey-light'>\n                                        <span className='is-capitalized mr-2'>{user.occupation}</span>\n                                        <span className='is-inline-flex'>\n                                            <span className='icon has-text-info'><FaStar /></span>\n                                            <span>{user.starRate}</span>\n                                        </span>\n                                    </p>\n                                    <p className='mb-2'>{user.profileBio}</p>\n                                    <p className='mb-1 is-flex has-text-grey' style={{ alignItems: 'center' }}>\n                                        <span className='icon mr-2'><FaMapMarkerAlt /></span>{user.city || <span className='has-text-grey-light is-italic is-size-7'>Not Specified</span>}\n                                    </p>\n                                    <p className='mb-1 is-flex has-text-grey' style={{ alignItems: 'center' }}>\n                                        <span className='icon mr-2'><FaEnvelope /></span>{user.email || <span className='has-text-grey-light is-italic is-size-7'>Not Specified</span>}\n                                    </p>\n                                    <p className='mb-1 is-flex has-text-grey' style={{ alignItems: 'center' }}>\n                                        <span className='icon mr-2 is-size-5'><FaGraduationCap /></span>{user.educationalBackground[0] || <span className='has-text-grey-light is-italic is-size-7'>Not Specified</span>}\n                                    </p>\n                                </div>\n                                <div className='has-text-grey-light is-uppercase has-text-left is-size-7'>Joined {moment(user.dateCreated).calendar({ sameElse: 'DD/MMM/YYYY' })}</div>\n                            </div>\n                        </div>\n                        <div className='column is-5 is-flex is-flex-direction-column has-text-left' style={{ alignItems: 'stretch', border: 'solid #dadada88 1px', }}>\n                            <div className='is-flex is-flex-direction-column' style={{ justifyContent: 'flex-start', alignItems: 'stretch', flexGrow: 1, position: 'relative' }}>\n                                <header className='px-5 py-3 is-size-7 has-text-weight-bold is-uppercase'>Comments</header>\n                                <div className='content has-text-left px-5 py-2 is-size-7 has-background-white' style={{ flexGrow: 1 }}>\n                                    {loadingComments ?\n                                        <div className='section px-6'>\n                                            <progress className=\"progress is-small is-danger\" max=\"100\">loading</progress>\n                                        </div>\n                                        :\n                                        <>\n                                            {comments.length < 1 && <Empty className='mb-4' icon={<FaExclamationCircle className='has-text-warning-dark is-size-2 mb-3' />} style={{ backgroundColor: 'transparent' }} text={`${user.id === ctx.user!.id ? 'You have' : 'User has'} not received any comment yet!`} />}\n                                            {comments.map(comment => <p className='my-3'><span>\"{comment.text}\"</span><span>-{`${comment.first_name} ${comment.last_name}`}</span></p>)}\n                                        </>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        <div className='column is-4 is-flex is-flex-direction-column has-text-left' style={{ alignItems: 'stretch' }}>\n                            <div className='is-flex is-flex-direction-column' style={{ justifyContent: 'flex-start', alignItems: 'stretch', flexGrow: 1, position: 'relative' }}>\n                                <header className='px-5 py-3 is-size-7 has-text-weight-bold is-uppercase'>Skills</header>\n                                <div className='has-text-left px-5 py-2 is-size-7 has-background-white'>\n                                    {user.skills.length < 1 && <Empty className='mb-4' icon={<FaExclamationCircle className='has-text-warning-dark is-size-2 mb-3' />} style={{ backgroundColor: 'transparent' }} text={`${user.id === ctx.user!.id ? 'You have' : 'User has'} not selected any skill yet!`} />}\n                                    {user.skills.map(skill => {\n                                        return <p className='my-3'>- {skill}</p>\n                                    })}\n                                </div>\n                                <header className='px-5 py-3 is-size-7 has-text-weight-bold is-uppercase'>Licenses</header>\n                                <div className='has-text-left px-5 py-2 is-size-7 has-background-white' style={{ flexGrow: 1 }}>\n                                    {user.licenses.length < 1 && <Empty icon={<FaExclamationCircle className='has-text-warning-dark is-size-2 mb-3' />} style={{ backgroundColor: 'transparent' }} text={`${user.id === ctx.user!.id ? 'You have' : 'User has'} not provided any licnese yet!`} />}\n                                    {user.licenses.map(license => {\n                                        return (\n                                            <div className='columnsmy-3 has-text-centered-mobile'>\n                                                <p className='column'>- {license.license_number}</p>\n                                                <p className='column is-3'>Expires {moment(license.expiration_date).calendar({ sameElse: 'DD/MMM/YYYY' })}</p>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            }\n        </div>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { RegisterView } from '../components/auth';\nimport { AuthHandler } from '../components/guard';\nimport { VIEW_CONTEXT } from '../lib';\n\n\nexport function Register() {\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({ showModal: false })\n    const [formState, setFormState] = useState({\n        first_name: '',\n        last_name: '',\n        password: '',\n        password_verify: '',\n        email: '',\n        phone_number: '',\n        showPassword: false,\n        showPasswordVerify: false\n    })\n\n    useEffect(() => {\n        viewCTX.showToolbar(false)\n        viewCTX.showFooter(false)\n\n        return () => {\n            viewCTX.showFooter(true)\n            viewCTX.showToolbar(true)\n        }\n    })\n\n    return (\n        <AuthHandler>\n            <div className='columns is-gapless is-fullheight is-multiline'>\n                <div className='column is-flex-centered is-atleast-fullheight'>\n                    <RegisterView />\n                </div>\n                <div className='column is-6 is-hidden-touch is-flex has-background-success' />\n            </div>\n        </AuthHandler>\n    )\n}","import { unix } from 'moment';\nimport React, { useContext, useState } from 'react';\nimport { FaApple, FaChevronRight, FaCogs, FaPaypal } from 'react-icons/fa';\nimport { Link, NavLink, Route, Switch } from 'react-router-dom';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport links from '../lib/links';\n\nexport function SettingsDetail({ title, children = <></> }) {\n    return (\n        <div className=\"container is-fluid settings-detail\">\n            <div className='content mb-0 py-4'>\n                <p className='has-text-weight-bold is-size-4 has-text-left has-text-centered-mobile'>{title}</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport function Settings() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <div className={`box px-0 py-0`} style={{ flexDirection: 'column', flex: 1 }}>\n                <div className='card-content is-paddingless is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\n                    <div className='level py-4 mb-0' style={{ boxShadow: '0 0.125em 0.25em rgba(10, 10, 10, .1)' }}>\n                        <div className='level-left-item is-size-6'>\n                            <p className=\"title is-size-6 has-text-weight-bold pl-4\">Settings</p>\n                        </div>\n                    </div>\n                    <div className='container is-flex is-fluid px-0'>\n                        <div className='columns mx-0 is-multiline' style={{ flexGrow: 1 }}>\n                            <div className='column is-2-fullhd is-3-desktop is-12 px-0'>\n                                <div className='container'>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.loginAndSecurity} exact>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Login and Security</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.paymentMethods}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Payment Methods</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.additionalFeatures}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Additional Features</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.legalDocuments}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Legal Documents</p>\n                                        </div>\n                                    </NavLink>\n                                </div>\n                            </div>\n                            <div className='column is-10-fullhd is-9-desktop is-12 is-flex px-0'>\n                                <Switch >\n                                    <Route path={links.loginAndSecurity} exact render={() => (\n                                        <LoginAndSecurity />\n                                    )} />\n                                    <Route path={links.paymentMethods} exact render={() => (\n                                        <PaymentMethods />\n                                    )} />\n                                    <Route path={links.legalDocuments} exact render={() => (\n                                        <LegalDocuments />\n                                    )} />\n                                    <Route render={() => (\n                                        <div className=\"container is-fluid is-flex-centered settings-detail py-6\">\n                                            <div className='content has-text-grey'>\n                                                <span className='my-4' ><FaCogs fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                                                <p className='is-uppercase is-size-6 has-text-weight-bold'>Manage your account</p>\n                                            </div>\n                                        </div>\n                                    )} />\n                                </Switch>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport function LoginAndSecurity() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Login and Security\"} children={(\n            <>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Email Address</p>\n                        <p className='subtitle has-text-grey'>Email address connected to your account</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control`}>\n                            <input className={`input ${state.editEmail ? '' : 'is-static'} has-text-black is-size-5 has-text-right has-text-centered-mobile`} value={state.email} contentEditable={false} disabled={!state.editEmail} onChange={e => setState({ ...state, email: e.target.value })} />\n                        </div>\n                        <div className='field is-grouped is-grouped-right'>\n                            <div className='control'>\n                                <button className='button' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\n                            </div>\n                            {state.editEmail ? (\n                                <div className='control'>\n                                    <button className={`button is-info ${state.isLoadingEmail ? 'is-loading' : ''}`} onClick={() => {\n                                        setState({ ...state, isLoadingEmail: true })\n                                    }}>Change</button>\n                                </div>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Phone Number</p>\n                        <p className='subtitle has-text-grey'>Your phone number provided upon signing-up</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control`}>\n                            <input className={`input is-static has-text-right has-text-black is-size-5 has-text-centered-mobile`} disabled value={ctx.user?.phoneNumber} />\n                        </div>\n                        <p className='subtitle has-text-grey'>Due to restrictions, contact support to modify your phone number</p>\n\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Password</p>\n                        <p className='subtitle has-text-grey'>Maintain a strong, unique password to protect your account</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control title`}>\n                            <button className='button is-link' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\n                        </div>\n                        <p className='subtitle has-text-grey'>{state.lastPasswordChanged ? `Last modified ${state.lastPasswordChanged.calendar({sameElse:'DD/MMM/YYYY'})}` : \"Never Changed\"}</p>\n\n                    </div>\n                </div>\n            </>\n        )} />\n    )\n}\n\n\nexport function PaymentMethods() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Payment Methods\"} children={(\n            <>\n                <div className='columns is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Preferred Method</p>\n                        <p className='subtitle has-text-grey'>Selected method of payment for jobs</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>{'VI 534***1234 12/22'}</p>\n                        <Link to={`${links.paymentMethods}/change`} >Change</Link>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Other Methods</p>\n                    </div>\n                </div>\n                <div className='columns' style={{ borderTop: 0 }}>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className='button is-white is-large'>\n                            <span className='icon'>\n                                <FaApple size={80} />\n                            </span>\n                            <span>Apple Pay</span>\n                            <span className='icon'>\n                                <FaChevronRight size={20} />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className='button is-white is-large'>\n                            <span className='icon'>\n                                <FaPaypal size={80} />\n                            </span>\n                            <span>PayPal</span>\n                            <span className='icon'>\n                                <FaChevronRight size={20} />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='columns' style={{ borderBottom: 0 }}>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <Link to={`${links.paymentMethods}/add`}>+ Add a Payment Method</Link>\n                    </div>\n                </div>\n            </>\n        )} />\n    )\n}\n\n\nexport function LegalDocuments() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Legal Documents\"} children={(\n            <>\n                <Link to={`${links.legalDocuments}/useragreement`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >User Agreement</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/privacy`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Privacy Policy</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/terms`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Terms of Service</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/cookie`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Cookie Policy</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n            </>\n        )} />\n    )\n}","import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { FaEnvelope, FaExclamationCircle, FaGraduationCap, FaMapMarkerAlt, FaStar, FaDownload } from 'react-icons/fa';\nimport { useLocation, useParams, Link } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { Empty } from \"../components/util\";\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { Job } from '../lib/job';\nimport { User } from '../lib/user';\nimport moment from \"moment\";\nimport logo from '../logo_runner.jpg'\nimport { IInvoice, Payment, INVOICE_PAGE_LIMIT } from '../lib/payment';\n\n\n/**\n * Profile component for viewing details of a user's profile. \n */\nexport function Invoices() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [invoices, setInvoices] = useState<IInvoice[]>([])\n    const [loading, setLoading] = useState<boolean>(true)\n    const location = useLocation()\n    const { id } = useParams()\n    const { addToast } = useToasts()\n\n    const fetchPayment = useCallback(async () => {\n        try {\n            setLoading(true)\n            const pageToFetch = Math.max(0, Math.floor(invoices.length / INVOICE_PAGE_LIMIT)) + 1\n            // This loads the specified page limit and includes count of imcomplete previous page\n            const limit = INVOICE_PAGE_LIMIT + (INVOICE_PAGE_LIMIT - (invoices.length % INVOICE_PAGE_LIMIT))\n            const paymentData = await Payment.getInvoices(ctx, pageToFetch, limit)\n            setInvoices([...invoices, ...paymentData])\n        } catch (e) {\n            addToast(e.message || 'Failed to fetch invoices', { appearance: 'error' })\n            console.log(e, 'failed to fetch invoices')\n        } finally {\n            setLoading(false)\n        }\n    }, [invoices])\n\n    useEffect(() => {\n        fetchPayment()\n    }, [ctx.user, ctx.user?.id])\n\n    return (\n        <div className='is-1 is-variable px-3 py-3 my-0 is-fullheight is-uppercase is-multiline'>\n            <nav style={{\n                width: '100%',\n                borderRadius: '1em 1em 0 0',\n                border: 'solid #dadada88 1px',\n            }}>\n                <div className='level py-3 px-5 mb-0'>\n                    <div className='level-item py-1 is-size-7'><span className='is-flex-grow-1 has-text-left has-text-centered-mobile'>Invoices</span></div>\n                    <div className='level-item py-1 is-size-7 has-text-centered'>search</div>\n                    <div className='level-item py-1 is-size-7'><span className='is-flex-grow-1 has-text-right has-text-centered-mobile'>Page 1 of 10</span></div>\n                </div>\n            </nav>\n            {loading ?\n                <div className='columns is-flex-centered is-gapless is-clipped' style={{\n                    marginBottom: '0.8em',\n                    borderRadius: '0 0 1em 1em',\n                    backgroundColor: '#fafafa',\n                    border: 'solid #dadada88 1px',\n                    borderTop: 0,\n                    height: '80%',\n                }}>\n                    <div className='column is-4 is-12-mobile'>\n                        <div className='section px-6'>\n                            <progress className=\"progress is-small is-danger\" max=\"100\">loading</progress>\n                        </div>\n                    </div>\n                </div>\n                :\n                <div className='columns is-gapless' style={{\n                    marginBottom: '0.8em',\n                    borderRadius: '0 0 1em 1em',\n                    backgroundColor: '#fafafa',\n                    border: 'solid #dadada88 1px',\n                    borderTop: 0,\n                    minHeight: '80%',\n                }}>\n                    {invoices.length <= 0 && <Empty style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: 'transparent', width: '100%' }} text=\"No invoice available yet\" />}\n\n                    {invoices.length > 0 &&\n                        <div className='table-container' style={{ width: '100%' }}>\n                            <table className='table is-clipped is-bordered is-striped is-hoverable is-fullwidth' style={{\n                                minWidth: '100%',\n                                minHeight: '100%',\n                                borderRadius: '0 0 1em 1em',\n                                border: 'solid #dadada88 1px',\n                            }}>\n                                <thead>\n                                    <tr className='is-size-7 py-2'>\n                                        <th>Invoice ID</th>\n                                        <th>Invoice Date</th>\n                                        <th>Job title</th>\n                                        <th>Location</th>\n                                        <th>Amount</th>\n                                        <th>Contractor Name</th>\n                                        <th>Payment Method</th>\n                                        <th>Invoice PDF</th>\n                                    </tr>\n                                </thead>\n                                <tbody className='is-size-7 py-2'>\n                                    {invoices.map(invoice => (\n                                        <tr>\n                                            <td>{invoice.invoiceReference}</td>\n                                            <td>{moment(invoice.dateCreated).format('DD-MMM-YYYY')}</td>\n                                            <td>{invoice.jobTitle}</td>\n                                            <td>{invoice.location}</td>\n                                            <td>{invoice.amount}</td>\n                                            <td>{invoice.deployee}</td>\n                                            <td>{invoice.paymentMethod}</td>\n                                            <td><Link to={invoice.invoiceURL}>View PDF <FaDownload /></Link></td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    }\n                </div>\n            }\n        </div>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Footer } from './components/footer';\nimport { AuthGuard } from './components/guard';\nimport Toolbar from './components/toolbar';\nimport { Loading } from './components/util';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from './lib';\nimport './lib/firebase';\nimport links from './lib/links';\nimport { User } from './lib/user';\nimport { Dashboard } from './pages/dashboard';\nimport { Jobs } from './pages/jobs';\nimport { Login } from './pages/login';\nimport { Logout } from './pages/logout';\nimport { Messages } from './pages/messages';\nimport { Profile } from './pages/profile';\nimport { Register } from './pages/register';\nimport { Settings } from './pages/settings';\nimport { NotificationProvider } from './components/notification';\nimport { ChatListProvider } from './components/messages';\nimport { Invoices } from './pages/invoices';\n\nfunction App() {\n  const ctx = useContext(APPLICATION_CONTEXT)\n  const [state, setState] = useState({ ready: false, })\n  const [showFooter, setShowFooter] = useState(true)\n  const [_showToolbar, showToolbar] = useState(true)\n  const [signedIn, setSignedIn] = useState<null | User>(null)\n\n  const viewContext = {\n    signedIn,\n    setSignedIn,\n    setAppReady: (ready) => setState({ ...state, ready }),\n    showToolbar,\n    showFooter: (showFooter) => setShowFooter(showFooter)\n  }\n\n  useEffect(() => {\n    ctx.loginListener = () => {\n      if (ctx.signedIn()) {\n        viewContext.setSignedIn(ctx.user as User)\n      }\n    }\n\n    ctx.logoutListener = () => viewContext.setSignedIn(null)\n\n    ctx.ready.then((ready) => {\n      if (!ready) {\n        return console.log('Failed to start application due to an internal error.', 'Please contact application admin')\n      }\n      setState({ ...state, ready: true })\n    })\n      .catch(e => {\n        console.log(e)\n      })\n  }, [])\n\n  return (\n    <NotificationProvider>\n      <ChatListProvider>\n        <VIEW_CONTEXT.Provider value={viewContext}>\n          {state.ready ?\n            <>\n              {_showToolbar ? <Toolbar /> : null}\n              <div className='App-Body'>\n                <div className='is-fullheight'>\n                  <Switch>\n                    <Route component={Login} path={links.login} exact />\n                    <Route component={Register} path={links.register} exact />\n                    <Route component={Logout} path={links.logout} exact />\n\n                    <AuthGuard component={Settings} path={links.settings} />\n                    <AuthGuard render={(props) => {\n                      return <Redirect to={{ pathname: links.activeJobs, state: props.location.state }} />\n                    }} path={links.jobs} exact />\n                    <AuthGuard component={Jobs} path={links._jobItem.active} />\n                    <AuthGuard component={Jobs} path={links._jobItem.inactive} />\n                    <AuthGuard component={Messages} path={links._messages} />\n                    <AuthGuard component={Profile} path={links._profile} />\n                    <AuthGuard component={Invoices} path={links.invoices} exact />\n                    <AuthGuard component={Dashboard} path={links.dashboard} exact />\n\n                    <Route path={links.home} strict={false} exact={true}>\n                      {ctx.signedIn() && viewContext.signedIn ? <Redirect to={links.dashboard} /> : <Redirect to={links.login} />}\n                    </Route>\n                    <AuthGuard />\n                  </Switch>\n                </div>\n              </div>\n              {showFooter ? <Footer /> : null}\n            </> :\n            <Loading />\n          }\n        </VIEW_CONTEXT.Provider>\n      </ChatListProvider>\n    </NotificationProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@yaireo/tagify/dist/tagify.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ToastProvider } from 'react-toast-notifications';\nimport { BrowserRouter } from 'react-router-dom';\nimport { APPLICATION_CONTEXT, DEFAULT_APPLICATION } from \"./lib\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider autoDismiss={5000} placement='top-center'>\n      <BrowserRouter basename='/contractoradmin'>\n        <APPLICATION_CONTEXT.Provider value={DEFAULT_APPLICATION}>\n          <App />\n        </APPLICATION_CONTEXT.Provider>\n      </BrowserRouter>\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_runner.f7055140.jpg\";"],"sourceRoot":""}