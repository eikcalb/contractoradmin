{"version":3,"sources":["logo.svg","lib/config.ts","lib/user.ts","lib/storage.ts","lib/index.tsx","components/toolbar.tsx","lib/theme.ts","lib/links.ts","components/util.tsx","components/footer.tsx","components/notification.tsx","components/payment.tsx","components/job.tsx","components/user.tsx","pages/dashboard.tsx","components/jobcreation.tsx","pages/jobs.tsx","pages/settings.tsx","components/guard.tsx","components/auth.tsx","pages/login.tsx","pages/register.tsx","pages/logout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","CONFIG","name","description","version","hostname","User","data","raw","token","jobType","activeTask","lastPasswordChanged","this","profilePhoto","app","id","initiateNetworkRequest","method","referrerPolicy","headers","Authorization","response","ok","Error","json","message","jsonResponse","user","role","firstName","lastName","occupation","city","state","starRate","email","password","phoneNumber","profileBio","dateCreated","accountStatus","workHistory","educationalBackground","skills","licenses","first_name","last_name","star_rate","date_created","account_status","educational_background","phone_number","profile_photo","DUMMY_USER","Date","now","KEYS","initializeStorage","a","lf","config","driver","INDEXEDDB","LOCALSTORAGE","WEBSQL","storeName","ready","localforage","DEFAULT_SETTINGS","lastUserName","DEFAULT_APPLICATION","settings","logoutListener","loginListener","Promise","res","rej","init","console","log","getItem","appData","info","inflateUser","options","JSON","stringify","setItem","path","request","authenticated","reqObj","Accept","fetch","resp","status","reauthenticate","logout","session","phone","trim","validator","isMobilePhone","encodeURIComponent","valid","channel","body","username","code","validateLogin","success","getUser","userName","persistUser","matches","validateRegister","password_verify","isEmail","undefined","removeItem","timer","APPLICATION_CONTEXT","createContext","VIEW_CONTEXT","setSignedIn","signedIn","setAppReady","showToolbar","show","showFooter","footer","STYLES","toolbar","boxShadow","appLogoIcon","fontSize","marginRight","color","appLogoText","fontWeight","jobProgressBar","height","Toolbar","useState","showMenu","setState","ctx","useContext","className","style","aria-label","to","links","aria-expanded","data-target","onClick","clearTimeout","setTimeout","aria-hidden","exact","activeClassName","type","placeholder","Loading","alignItems","padding","max","CardFragment","header","optionsText","children","Footer","getFullYear","NotificationItem","notification","time","moment","unix","timestamp","title","whiteSpace","textOverflow","overflow","notif","borderRadius","getNotificationIcon","maxLines","fromNow","content","NotificationList","DUMMY_NOTIFICATIONS","map","n","key","CurrencyFormatter","Intl","NumberFormat","currency","maximumFractionDigits","PaymentItem","payment","format","cost","payee","getPaymentDescription","PaymentList","DUMMY_PAYMENTS","p","JobListItem","job","location","flexDirection","flex","justifyContent","src","profileImageURL","calendar","value","progress","JobItem","endTime","JobDetail","fill","width","JobDetailTask","JobDetailUser","startTime","totalTime","diff","position","paddingTop","bottom","right","background","border","tasks","length","task","toFixed","alignSelf","generateUserJobType","toDateString","JobList","DUMMY_JOBS","j","JobSideList","onCreateNew","borderRight","borderLeft","window","alert","overflowY","overflowX","render","DUMMY_COMPLETED","UserListItem","UserList","u","Dashboard","marginBottom","flexGrow","FormField","label","icon","showBorder","containerClassName","isTextArea","maxLength","Number","MAX_SAFE_INTEGER","helpTextTop","helpTextLeft","helpTextRight","hasAddons","addon","CreateJob","onClose","onComplete","onSubmit","e","stopPropagation","preventDefault","disabled","Jobs","showModal","SettingsDetail","Settings","LoginAndSecurity","PaymentMethods","LegalDocuments","editEmail","isLoadingEmail","contentEditable","onChange","target","borderTop","size","borderBottom","AuthGuard","rest","viewCTX","useLocation","pathname","from","AuthHandler","RegisterView","showCodeRequest","showPassword","showPasswordVerify","loading","formState","setFormState","addToast","useToasts","history","useHistory","useCallback","addAdmin","appearance","push","margin","logo","autoComplete","required","LoginView","onSubmitCodeRequest","form","validateNumber","triggerVerification","onSubmitVerified","login","CodeRequestForm","LoginForm","onCancel","intervalID","showOptions","hold","holdTimer","viewState","setView","onSubmitForm","counter","clearInterval","setInterval","pattern","minLength","Login","useEffect","Register","Logout","App","setShowFooter","_showToolbar","viewContext","then","catch","Provider","component","props","strict","Boolean","match","ReactDOM","StrictMode","autoDismiss","placement","document","getElementById","navigator","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.57eaa1d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { Config } from \".\";\r\n\r\nconst CONFIG: Config = {\r\n    name: 'Contractor',\r\n    description: 'Contractor admin dashboard',\r\n    version: '1.0',\r\n    hostname:'https://contractor-app-test-api.herokuapp.com/v1'\r\n}\r\n\r\nexport default CONFIG","import { IJobHistory } from \"./job\";\r\nimport { IEducationHistory, ILicense } from \"./education\";\r\nimport { Application } from \".\";\r\n\r\nexport const DUMMY_TOKEN = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEyMzQ1NiwiZW1haWwiOiJ6ekBnbWFpbC5jb20iLCJwaG9uZV9udW1iZXIiOiIrMjM0ODA4MzgyMTc4MiIsImp0aSI6ImEyZjI5YzU3LTliZTQtNDBlYi1hOGQ2LTJjMTYxNjNkYTk5YSIsImlhdCI6MTYwMjQxNjg4NSwiZXhwIjoxNjAyNDIwNDg1fQ.ReW81UZOLp2tv1TWpTZ-SiBcCqsZzMHg4tsYehzk4KA\"\r\nexport const DUMMY_TOKEN_SECRET = \"secret\"\r\n\r\nclass AppUser {\r\n    id\r\n    role: string\r\n    firstName: string\r\n    lastName: string\r\n    occupation: string\r\n    city: string\r\n    state: string\r\n    starRate: number = 5.0\r\n    email: string\r\n    password?: string\r\n    phoneNumber: string\r\n    profilePhoto: string\r\n    profileBio?: string\r\n    dateCreated?: Date\r\n    accountStatus: string = \"Pending\"\r\n    workHistory: IJobHistory[] = []\r\n    educationalBackground: IEducationHistory[] = []\r\n    skills: string[] = []\r\n    licenses: ILicense[] = []\r\n\r\n    constructor(data, raw?: boolean) {\r\n        if (raw) {\r\n            this.role = data.role\r\n            this.firstName = data.first_name\r\n            this.lastName = data.last_name\r\n            this.occupation = data.occupation\r\n            this.starRate = data.star_rate\r\n            this.dateCreated = data.date_created\r\n            this.city = data.city\r\n            this.email = data.email\r\n            this.accountStatus = data.account_status\r\n            this.educationalBackground = data.educational_background\r\n            this.phoneNumber = data.phone_number\r\n            this.profilePhoto = data.profile_photo\r\n            this.state = data.state\r\n            this.skills = data.skills\r\n        } else {\r\n            this.role = data.role\r\n            this.firstName = data.firstName\r\n            this.lastName = data.lastName\r\n            this.occupation = data.occupation\r\n            this.starRate = data.starRate\r\n            this.dateCreated = data.dateCreated\r\n            this.city = data.city\r\n            this.email = data.email\r\n            this.accountStatus = data.accountStatus\r\n            this.educationalBackground = data.educationalBackground\r\n            this.phoneNumber = data.phoneNumber\r\n            this.profilePhoto = data.profilePhoto\r\n            this.state = data.state\r\n            this.skills = data.skills\r\n        }\r\n        \r\n        this.id = data.id\r\n    }\r\n}\r\n\r\nexport class User extends AppUser {\r\n    get profileImageURL() {\r\n        return this.profilePhoto\r\n    }\r\n    token\r\n    jobType?: \"onsite\" | \"remote\"\r\n    activeTask\r\n    lastPasswordChanged?: number\r\n\r\n    constructor(data, raw?: boolean) {\r\n        super(data, raw)\r\n        this.token = data.token\r\n        this.jobType = data.jobType\r\n        this.activeTask = data.activeTask\r\n        this.lastPasswordChanged = data.lastPasswordChanged\r\n    }\r\n\r\n    static async getUser(app: Application, id: string, token: string) {\r\n        try {\r\n            const response = await app.initiateNetworkRequest(`/users/${id}`, {\r\n                method: 'GET',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json())?.message || \"Failed to fetch user data!\")\r\n            }\r\n\r\n            const jsonResponse = await response.json()\r\n            const user = new User(jsonResponse, true)\r\n            user.id = id\r\n            user.token = token\r\n\r\n            return user\r\n\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n}\r\n\r\nexport const DUMMY_USER: User = new User({})\r\n\r\nDUMMY_USER.firstName = \"John\"\r\nDUMMY_USER.lastName = \"Doe\"\r\nDUMMY_USER.id = 'unique'\r\nDUMMY_USER.email = 'a@example.com'\r\nDUMMY_USER.profileBio = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ullam vero iure, ducimus, explicabo vel nesciunt eveniet, enim quis quos ex autem!\"\r\nDUMMY_USER.jobType = 'onsite'\r\nDUMMY_USER.phoneNumber = '080838111111'\r\nDUMMY_USER.starRate = 4.2\r\nDUMMY_USER.lastPasswordChanged = Date.now()\r\nDUMMY_USER.dateCreated = new Date(\"20/07/2020\")\r\nDUMMY_USER.skills = ['Farming', 'Poultry']\r\n// DUMMY_USER.profileImageURL = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTv3f3Zf2onEOPtpRtWPoRX6SWQUSpV_GBB6Q&usqp=CAU\"\r\n","import lf from \"localforage\";\r\nimport { Application } from \".\";\r\n\r\nexport const KEYS = {\r\n    USER_SESSION: 'app.user.session',\r\n    REFRESH_TOKEN: 'app.user.refreshtoken',\r\n    APP_DATA: 'app.data'\r\n}\r\n\r\nexport async function initializeStorage(app: Application) {\r\n    lf.config({\r\n        driver: [\r\n            lf.INDEXEDDB,\r\n            lf.LOCALSTORAGE,\r\n            lf.WEBSQL\r\n        ],\r\n        name: `${app.config.name} v${app.config.version}`,\r\n        version: 1,\r\n        storeName: 'adminstore',\r\n        description: 'Storage for Contractor application administrative interface'\r\n    })\r\n\r\n    await lf.ready()\r\n}\r\n\r\nexport const localforage = lf\r\n","import React, { createContext } from \"react\"\r\nimport CONFIG from \"./config\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { User, DUMMY_USER } from \"./user\"\r\nimport { initializeStorage, KEYS, localforage } from \"./storage\"\r\nimport validator from \"validator\"\r\nimport { isNewExpression } from \"typescript\"\r\nimport { IRegister } from \"../components/auth\"\r\n\r\ninterface ISettings {\r\n    lastUserName: string\r\n}\r\n\r\nconst DEFAULT_SETTINGS = {\r\n    lastUserName: ''\r\n}\r\n\r\nexport class Application {\r\n    config: Config\r\n    user?: User\r\n    ready: Promise<boolean>\r\n\r\n    protected settings: ISettings = DEFAULT_SETTINGS\r\n\r\n    logoutListener?: () => any\r\n    loginListener?: () => any\r\n\r\n    constructor(config: Config) {\r\n        this.config = config\r\n        this.ready = new Promise(async (res, rej) => {\r\n            try {\r\n                await this.init()\r\n                res(true)\r\n            } catch (e) {\r\n                // if an error occurred during initialization, throw the error and handle within the application\r\n                console.log(e)\r\n                return rej(e)\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Initialize application dependencies.\r\n     * \r\n     * Dependencies that fail to load should fail silently at this stage, unless required for application to function.\r\n     */\r\n    async init() {\r\n        await initializeStorage(this)\r\n\r\n        try {\r\n            const appData: ISettings | null = await localforage.getItem(KEYS.APP_DATA)\r\n            if (appData) {\r\n                this.settings = appData\r\n            }\r\n        } catch (e) {\r\n            console.info(e, 'No app data persisted!')\r\n        }\r\n\r\n        // check for existing user session\r\n        try {\r\n            await this.inflateUser()\r\n            // If user session exists, trigger login listener\r\n            if (this.loginListener) {\r\n                this.loginListener()\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n\r\n    signedIn(): boolean {\r\n        return this.user && this.user?.token\r\n    }\r\n\r\n\r\n    async updateSettings(options: Partial<ISettings>) {\r\n        if (!options) {\r\n            throw new Error('Empty options provided!')\r\n        }\r\n        if (JSON.stringify(options) === JSON.stringify(this.settings)) {\r\n            return\r\n        }\r\n\r\n        this.settings = {\r\n            ...this.settings,\r\n            ...options\r\n        }\r\n\r\n        return await localforage.setItem(KEYS.APP_DATA, this.settings)\r\n    }\r\n\r\n    async initiateNetworkRequest(path: string, request?: RequestInit, authenticated = false): Promise<Response> {\r\n        const reqObj: RequestInit = {\r\n            ...request,\r\n            referrerPolicy: 'no-referrer',\r\n            headers: {\r\n                ...request?.headers,\r\n                Accept: 'application/json',\r\n                Authorization: authenticated ? `Bearer ${this.user?.token}` : request?.headers?.['Authorization'],\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const resp = await fetch(`${this.config.hostname}${path}`, reqObj)\r\n        if (resp.status === 401) {\r\n            if (!this.user) {\r\n                throw new Error(\"Unauthenticated access not allowed!\")\r\n            }\r\n            // Authorization failed. This usually means the token has expired and refresh token could not be used to regenerate token\r\n            //\r\n            // Try to reauthenticate the user\r\n            try {\r\n                const { token } = await this.reauthenticate()\r\n                this.user.token = token\r\n                // since token is generated already, retry the request\r\n                if (reqObj && reqObj.headers && reqObj.headers['Authorization']) {\r\n                    reqObj.headers['Authorization'] = `Bearer ${token}`\r\n                }\r\n                return await this.initiateNetworkRequest(path, reqObj)\r\n            } catch (e) {\r\n                await this.logout()\r\n                throw e || new Error(\"App session expired. Login to continue!\")\r\n            }\r\n        }\r\n        return resp\r\n    }\r\n\r\n    protected async reauthenticate(): Promise<{ token: string }> {\r\n        // No logic to reauthenticate. Throw error, forcing user to logout.\r\n        throw new Error(\"Failed to authenticate user!\")\r\n    }\r\n\r\n    protected async inflateUser() {\r\n        // inflate user session\r\n        let session: User | null = await localforage.getItem(KEYS.USER_SESSION)\r\n        if (!session) throw new Error(\"No session available for user!\")\r\n\r\n        this.user = new User(session)\r\n        return this.user\r\n    }\r\n\r\n    protected async persistUser() {\r\n        if (!this.user) {\r\n            throw new Error('No user created!')\r\n        }\r\n\r\n        await localforage.setItem(KEYS.USER_SESSION, this.user)\r\n    }\r\n\r\n    async validateNumber(phone: string) {\r\n        if (!phone) {\r\n            throw new Error(\"Phone number must be provided!\")\r\n        }\r\n        phone = phone.trim()\r\n        if (!phone || !validator.isMobilePhone(phone)) {\r\n            throw new Error(\"Invalid phone number provided!\")\r\n        }\r\n\r\n        const response = await this.initiateNetworkRequest(`/users/phone/${encodeURIComponent(phone)}`, {\r\n            method: 'GET',\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error((await response.json())?.message || \"Verification failed!\")\r\n        }\r\n\r\n        const jsonResponse = await response.json()\r\n        if (!jsonResponse.valid) {\r\n            throw new Error('Invalid phone number (ensure phone number is associated with a user)!')\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    async triggerVerification(phone: string, channel: string = 'sms') {\r\n        if (!phone) {\r\n            throw new Error(\"Phone number must be provided!\")\r\n        }\r\n        phone = phone.trim()\r\n\r\n        if (!phone || !validator.isMobilePhone(phone)) {\r\n            throw new Error(\"Invalid phone number provided!\")\r\n        }\r\n\r\n        const response = await this.initiateNetworkRequest('/users/sms_registration', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ phone_number: phone, channel })\r\n        })\r\n        if (!response.ok) {\r\n            throw new Error((await response.json())?.message || \"Verification failed!\")\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    async login(username, code, password) {\r\n        try {\r\n            await this.validateLogin(username, code, password)\r\n\r\n            const response = await this.initiateNetworkRequest('/users/login', {\r\n                method: 'POST',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify({ phone_number: username, code, password })\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json())?.message || \"Login failed!\")\r\n            }\r\n\r\n            const jsonResponse = await response.json()\r\n            if (!jsonResponse.success) {\r\n                throw new Error(\"Login failed!\")\r\n            }\r\n            this.user = await User.getUser(this, jsonResponse.userName, jsonResponse.token)\r\n            if (this.user.role !== 'admin') {\r\n                throw new Error(\"Authenticated access only allowed for administrators!\")\r\n             }\r\n\r\n            await this.persistUser()\r\n            if (this.loginListener) {\r\n                this.loginListener()\r\n            }\r\n\r\n            return this.user\r\n\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    protected async validateLogin(phone: string, code: string, password: string) {\r\n        if (!phone || !password || !code) {\r\n            throw new Error(\"Credentials not provided!\")\r\n        }\r\n        phone = phone.trim()\r\n\r\n        if (!phone || !validator.isMobilePhone(phone)) {\r\n            throw new Error(\"Invalid phone number provided!\")\r\n        }\r\n        if (!validator.matches(password, /.{6,}/i)) {\r\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\r\n        }\r\n        if (!validator.matches(code, /[0-9]{4}/)) {\r\n            throw new Error(\"Invalid code provided (provided code must have 4 digits)!\")\r\n        }\r\n    }\r\n\r\n    // TODO\r\n    async addAdmin(data: IRegister) {\r\n        try {\r\n            await this.validateRegister(data)\r\n\r\n            const response = await this.initiateNetworkRequest('/users/new', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    ...data,\r\n                    role: 'admin',\r\n                    // TODO: change to 'pending'\r\n                    account_status: 'accepted'\r\n                })\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error((await response.json())?.message)\r\n            }\r\n\r\n            const jsonResponse = await response.json()\r\n\r\n            return jsonResponse\r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    protected async validateRegister(data: IRegister) {\r\n        let { email, password, first_name, last_name, password_verify, phone_number } = data\r\n        if (!email || !password) {\r\n            throw new Error(\"Credentials not provided!\")\r\n        }\r\n        if (password !== password_verify) {\r\n            throw new Error('Passwords do not match!')\r\n        }\r\n        email = email.trim()\r\n        first_name = first_name.trim()\r\n        last_name = last_name.trim()\r\n        if (!first_name || !last_name) {\r\n            throw new Error('Firstname and lastname must be provided!')\r\n        }\r\n        if (!email || !validator.isEmail(email)) {\r\n            throw new Error(\"Invalid username provided!\")\r\n        }\r\n        if (!phone_number || !validator.isMobilePhone(phone_number)) {\r\n            throw new Error(\"Invalid phone number provided!\")\r\n        }\r\n        if (!validator.matches(password, /.{6,}/i)) {\r\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\r\n        }\r\n    }\r\n\r\n\r\n    async logout() {\r\n        this.user = undefined\r\n        await localforage.removeItem(KEYS.USER_SESSION)\r\n        //await localforage.removeItem(KEYS.REFRESH_TOKEN)\r\n        if (this.logoutListener) {\r\n            this.logoutListener()\r\n        }\r\n    }\r\n}\r\n\r\nexport const DEFAULT_APPLICATION = new Application(CONFIG)\r\nDEFAULT_APPLICATION.user = DUMMY_USER\r\n/**\r\n * This is the application context used within the web application.\r\n * \r\n * This context provided the application engine and is not tied to any view rendering.\r\n * \r\n * The underlying aplication object exposes the required functions and do not modify the view.\r\n * This underlying object is made available to all React components via the application context.\r\n * \r\n * All view rendering is managed in React.\r\n * \r\n * **VIEW RENDERING SHOULD NOT DEPEND ON ANY PROPERTY OF THIS CONTEXT**\r\n */\r\nexport const APPLICATION_CONTEXT = createContext<Application>(DEFAULT_APPLICATION)\r\n\r\n/**\r\n * This context is used for managing the views within the web app.\r\n * Activities such as loading and splashscreen are implemented using this context.\r\n */\r\nexport const VIEW_CONTEXT = createContext<{\r\n    setSignedIn: any,\r\n    signedIn: null | User,\r\n    setAppReady: any,\r\n    showToolbar: any,\r\n    showFooter: any\r\n}>({\r\n    setSignedIn: (signedIn) => { },\r\n    signedIn: null,\r\n    setAppReady: (ready: boolean) => { },\r\n    showToolbar: (show: boolean) => { },\r\n    showFooter: (footer) => { }\r\n})\r\n\r\nexport interface Config {\r\n    name: string\r\n    version: string\r\n    description: string\r\n    hostname: string\r\n}\r\n","import React, { useState, useContext, useCallback } from 'react'\r\nimport { STYLES } from '../lib/theme'\r\nimport { FaJoint, FaUser, FaContao, FaCog, FaSearch } from \"react-icons/fa\";\r\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport links from '../lib/links';\r\n\r\n\r\nconst AUTOHIDE_TIMEOUT = 20000\r\nlet timer: any\r\n// TODO: build your own toolbar styling.\r\n\r\nexport default function Toolbar() {\r\n    const [state, setState] = useState({ showMenu: false })\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const vctx = useContext(VIEW_CONTEXT)\r\n    const toggleMenu = () => {\r\n        // Clear the existing timer for closing menu and then hide/show the menu\r\n        clearTimeout(timer)\r\n        if (state.showMenu) {\r\n            setState({ ...state, showMenu: false })\r\n        } else {\r\n            setState({ ...state, showMenu: true })\r\n            timer = setTimeout(() => {\r\n                setState({ ...state, showMenu: false })\r\n            }, AUTOHIDE_TIMEOUT)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className='navbar' role='navigation' style={STYLES.toolbar} aria-label='main navigation'>\r\n            <div className='navbar-brand'>\r\n                <Link className='navbar-item' to={links.home}>\r\n                    <FaContao style={STYLES.appLogoIcon} />\r\n                    <span style={STYLES.appLogoText}>{ctx.config.name}</span>\r\n                </Link>\r\n                <a role=\"button\" className={`navbar-burger burger ${state.showMenu ? 'is-active' : ''}`} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbar\" onClick={toggleMenu}>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                </a>\r\n            </div>\r\n            <div className={`navbar-menu ${state.showMenu ? 'is-active' : ''}`} >\r\n                <div className='navbar-start'>\r\n                    <NavLink to={links.dashboard} exact activeClassName='is-active' className='navbar-item is-tab'>Dashboard</NavLink>\r\n                    <NavLink to={links.messages} activeClassName='is-active' className='navbar-item is-tab'>Messages</NavLink>\r\n                    <NavLink to={links.invoices} activeClassName='is-active' className='navbar-item is-tab'>Invoices</NavLink>\r\n                    <NavLink to={links.jobs} activeClassName='is-active' className='navbar-item is-tab'>Jobs</NavLink>\r\n                </div>\r\n                <div className='navbar-end'>\r\n                    <div className='navbar-item'>\r\n                        <div className='field'>\r\n                            <p className='control has-icons-left'>\r\n                                <input className='input is-rounded' type='search' placeholder='Type to search...' />\r\n                                <span className='icon is-small is-left'><FaSearch className='is-size-5' /></span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='navbar-item has-dropdown is-hoverable'>\r\n                        <span className='navbar-link'>\r\n                            {`${ctx.user?.firstName} ${ctx.user?.lastName}`}\r\n                        </span>\r\n                        <div className='navbar-dropdown'>\r\n                            <Link to={links.profile} className='navbar-item'>Profile</Link>\r\n                            <Link to={links.helpCenter} className='navbar-item'>Help Center</Link>\r\n                            <Link to={links.logout} className='navbar-item'>Sign Out</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className='navbar-item'>\r\n                        <Link to={links.settings} className='button is-rounded is-light is-fullwidth'><FaCog /></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const STYLES: { [key: string]: React.CSSProperties } = {\r\n    toolbar: {\r\n        boxShadow: \"-2px 2px 3px 0px #8888\",\r\n        // background: \"#282c34\",\r\n    },\r\n    appLogoIcon: {\r\n        fontSize: '2em',\r\n        marginRight: '.5em',\r\n        color: 'blue'\r\n    },\r\n    appLogoText: {\r\n        fontSize: '1.2em',\r\n        fontWeight: 'bold'\r\n    },\r\n    jobProgressBar:{\r\n        height:'.4em'\r\n    }\r\n}","export default {\r\n    register:'/register',\r\n    login:'/login',\r\n    messages: '/messages',\r\n    home: '/',\r\n    dashboard: '/dashboard',\r\n    invoices: '/invoices',\r\n    jobs: '/jobs',\r\n    activeJobs: '/jobs/active',\r\n    inactiveJobs: '/jobs/inactive',\r\n    privacyPolicy: '/privacyPolicy',\r\n    termsOfService: '/terms',\r\n    profile: '/profile',\r\n    helpCenter: '/help',\r\n    logout: '/logout',\r\n    settings: '/settings',\r\n    loginAndSecurity: '/settings',\r\n    paymentMethods: '/settings/payment',\r\n    additionalFeatures: '/settings/features',\r\n    legalDocuments: '/settings/legal'\r\n}","import React from 'react'\r\n\r\nexport function Loading() {\r\n    return (\r\n        <section className='hero is-fullheight is-bold is-flex-centered' style={{ alignItems: 'stretch', padding: '2em' }}>\r\n            <div className='hero-body has-text-centered'>\r\n                <div className='container'>\r\n                    <div className='section'>\r\n                        <progress className=\"progress is-small is-danger\" max=\"100\">loading</progress>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport function CardFragment({ header, optionsText, children, style }: { header: string, optionsText: any, children?: any, style?: React.CSSProperties }) {\r\n    return (\r\n        <div className=\"card\" style={style}>\r\n            <header className='card-header'>\r\n                <p className='card-header-title'>{header}</p>\r\n                <p className='card-header-icon'>\r\n                    <span>\r\n                        {optionsText}\r\n                    </span>\r\n                </p>\r\n            </header>\r\n            <div className='card-content'>\r\n                <div className='container is-fluid px-0'>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { APPLICATION_CONTEXT } from \"../lib\";\r\nimport links from '../lib/links'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function Footer() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n\r\n    return (\r\n        <footer className='footer is-unselectable' >\r\n            <div className=\"content has-text-centered is-size-7-touch\">\r\n                <p>&copy; {ctx.config.name} {new Date().getFullYear()}. All Rights Reserved | <Link to={links.privacyPolicy}>Privacy Policy</Link> | <Link to={links.termsOfService}>Terms of Service</Link> </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}","import React from 'react'\r\nimport { FaSearch, FaMapMarkerAlt, FaCheckSquare, FaCheck } from 'react-icons/fa'\r\nimport moment from \"moment\";\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nexport function NotificationItem({ notification }: { notification: INotification }) {\r\n    const time = moment.unix(notification.timestamp / 1000)\r\n    return (\r\n        <div className='container is-fluid is-paddingless list-item py-2' title={notification.title}>\r\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\r\n                <div className='column is-paddingless is-6 has-text-left list-item-title'>\r\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{getNotificationIcon(notification)} {notification.title}</p>\r\n                </div>\r\n                <div className='column is-paddingless has-text-right has-text-left-mobile list-item-subtitle'>\r\n                    <p style={{ maxLines: 2 }}>{time.fromNow()}</p>\r\n                </div>\r\n            </div>\r\n            <div className='content'>\r\n                <p>\r\n                    {notification.content}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function getNotificationIcon(notif: INotification) {\r\n    switch (notif.type) {\r\n        case 'discovery':\r\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaSearch /> </span>\r\n        case 'location':\r\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaMapMarkerAlt /> </span>\r\n        case 'progress':\r\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaCheck /> </span>\r\n    }\r\n}\r\n\r\nexport function NotificationList({ className }) {\r\n    return (\r\n        <nav className={className}>\r\n            <div className='panel'>\r\n                <div className={'panel-heading has-text-left has-background-white-bis'}>\r\n                    <p>Notifications</p>\r\n                </div>\r\n                {DUMMY_NOTIFICATIONS.map(n => (\r\n                    <Link key={n.id} to={`/f`} className='panel-block'>\r\n                        <NotificationItem notification={n} />\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport interface INotification {\r\n    content: string\r\n    timestamp\r\n    type: 'discovery' | 'location' | 'progress'\r\n    title: string\r\n    id: string\r\n}\r\n\r\nconst DUMMY_NOTIFICATIONS: INotification[] = [\r\n    {\r\n        content: 'testing 123',\r\n        timestamp: Date.now(),\r\n        type: 'discovery',\r\n        title: 'testing notification',\r\n        id: '23xe'\r\n    },\r\n    {\r\n        content: 'testing 12',\r\n        timestamp: Date.now(),\r\n        type: 'location',\r\n        title: 'testing notification',\r\n        id: '23xe'\r\n    },\r\n    {\r\n        title: 'testing 1',\r\n        timestamp: Date.now(),\r\n        type: 'progress',\r\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\r\n        id: '23se'\r\n    },\r\n    {\r\n        title: 'testing 1',\r\n        timestamp: Date.now(),\r\n        type: 'location',\r\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\r\n        id: '23se'\r\n    },\r\n    {\r\n        title: 'testing 1',\r\n        timestamp: Date.now(),\r\n        type: 'discovery',\r\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\r\n        id: '23se'\r\n    }\r\n]","import React from 'react'\r\nimport moment from 'moment'\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\nconst CurrencyFormatter = Intl.NumberFormat('en-US', { currency: 'USD', style: 'currency', maximumFractionDigits: 2 })\r\n\r\nexport function PaymentItem({ payment }: { payment: IPayment }) {\r\n    const time = moment.unix(payment.timestamp / 1000)\r\n\r\n    return (\r\n        <div className='container is-fluid is-paddingless list-item py-2' title={payment.title}>\r\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\r\n                <div className='column is-paddingless is-6 has-text-left list-item-title'>\r\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{payment.title}</p>\r\n                </div>\r\n                <div className='column is-paddingless has-text-right has-text-left-mobile list-item-subtitle'>\r\n                    <p>{time.fromNow()}</p>\r\n                </div>\r\n            </div>\r\n            <div className='content'>\r\n                <p>\r\n                    {getPaymentDescription(payment)}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function PaymentList({ className }) {\r\n    return (\r\n        <nav className={className} >\r\n            <div className='panel'>\r\n                <div className='panel-heading has-text-left has-background-white-bis'>\r\n                    <p>Payments</p>\r\n                </div>\r\n                {DUMMY_PAYMENTS.map(p => (\r\n                    <Link to={`/f`} key={p.id} className='panel-block'>\r\n                        <PaymentItem payment={p} />\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport interface IPayment {\r\n    type: 'pending' | 'paid'\r\n    timestamp\r\n    cost: number\r\n    title\r\n    payee\r\n    id: string\r\n}\r\n\r\nexport function getPaymentDescription(payment: IPayment): string {\r\n    switch (payment.type) {\r\n        case 'pending':\r\n            return `You have a pending charge of ${CurrencyFormatter.format(payment.cost)} for the completion of this job by ${payment.payee}`\r\n        case 'paid':\r\n            return `A payment of ${CurrencyFormatter.format(payment.cost)} has been submitted to ${payment.payee}`\r\n    }\r\n}\r\n\r\n\r\nexport const DUMMY_PAYMENTS: IPayment[] = [\r\n    {\r\n        type: 'pending',\r\n        timestamp: Date.now(),\r\n        cost: 20.405,\r\n        title: 'Clear lawn',\r\n        payee: 'Philip Barnabas',\r\n        id: '2ss354'\r\n    },\r\n    {\r\n        type: 'paid',\r\n        timestamp: Date.now(),\r\n        cost: 200.405,\r\n        title: 'Clear lawn and take out firewood',\r\n        payee: 'Philip Barnabas',\r\n        id: '23sss54'\r\n    },\r\n    {\r\n        type: 'pending',\r\n        timestamp: Date.now(),\r\n        cost: 3000.405,\r\n        title: 'Clear lawn',\r\n        payee: 'Philip Barnabas',\r\n        id: '235s4'\r\n    }\r\n]","import { unix } from 'moment'\r\nimport React from 'react'\r\nimport { BsPencilSquare } from \"react-icons/bs\"\r\nimport { FaExpandAlt, FaSearch, FaStar, FaMapMarkerAlt, FaGlobeAfrica, FaClipboardList, FaHardHat } from 'react-icons/fa'\r\nimport { GoSettings } from \"react-icons/go\"\r\nimport { GrUserWorker } from \"react-icons/gr\";\r\nimport { Link, NavLink, Route } from 'react-router-dom'\r\nimport { STYLES } from '../lib/theme'\r\nimport { DUMMY_USER, User } from '../lib/user'\r\nimport links from '../lib/links'\r\n\r\nexport function JobListItem({ job }: { job: IJob }) {\r\n    const time = unix(job.timestamp / 1000)\r\n    return (\r\n        <div className='card'>\r\n            <div className='card-content'>\r\n                <div className='columns'>\r\n                    <div className='column is-6 has-text-centered-touch has-text-left'>\r\n                        <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.title}</p>\r\n                    </div>\r\n                    <div className='column has-text-centered-touch has-text-right'>\r\n                        <p>{job.location}</p>\r\n                    </div>\r\n                </div>\r\n                <div className='content'>\r\n                    <p>{job.description}</p>\r\n                </div>\r\n            </div>\r\n            <div className='card-footer'>\r\n                <div className='card-footer-item'>\r\n                    <div className='columns px-4 is-vcentered is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\r\n                        <div className='column is-12'>\r\n                            <div className='columns is-vcentered is-mobile'>\r\n                                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\r\n                                    <figure className='image is-flex is-32x32'>\r\n                                        <img className='is-rounded' src={job.user.profileImageURL} />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='column is-narrow'>\r\n                                    <div className='title is-6'>{`${job.user.firstName} ${job.user.lastName}`}</div>\r\n                                </div>\r\n                                <div className='column has-text-right'>\r\n                                    {time.calendar()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='column is-12'>\r\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={job.progress || 0} max=\"100\">{job.progress}</progress>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function JobItem({ job, to }: { job: IJob, to: any }) {\r\n    const time = unix(job.timestamp / 1000)\r\n    let endTime\r\n    if (job.endTime) endTime = unix(job.endTime / 1000)\r\n\r\n    return (\r\n        <NavLink activeClassName=\"is-active\" to={to} className={`job-item mb-8 is-block card is-shadowless has-background-white-ter`}>\r\n            <div className='card-content'>\r\n                <div className='container is-paddingless'>\r\n                    <div className='columns'>\r\n                        <div className='column is-6 has-text-centered-touch has-text-left'>\r\n                            <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.title}</p>\r\n                        </div>\r\n                        <div className='column has-text-centered-touch has-text-right'>\r\n                            <p>{job.location}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='columns is-vcentered is-mobile'>\r\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\r\n                            <figure className='image is-flex is-32x32'>\r\n                                <img className='is-rounded' src={job.user.profileImageURL} />\r\n                            </figure>\r\n                        </div>\r\n                        <div className='column is-narrow'>\r\n                            <div className='title is-6'>{`${job.user.firstName} ${job.user.lastName}`}</div>\r\n                        </div>\r\n                        <div className='column has-text-right'>\r\n                            {time.calendar()}\r\n                        </div>\r\n                    </div>\r\n                    <div className='content'>\r\n                        <p>{job.description}</p>\r\n                    </div>\r\n                </div>\r\n                <div className='columns px-4 pt-4 is-vcentered is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\r\n                    <div className='column is-12'>\r\n                        {job.progress && job.progress >= 100 ? (\r\n                            <p>Completed {endTime.calendar()}</p>\r\n                        ) :\r\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={job.progress || 0} max=\"100\">{job.progress}</progress>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </NavLink >\r\n    )\r\n}\r\n\r\nexport function JobDetail({ job, className }: { job: IJob | null, className?: string }) {\r\n    if (!job) {\r\n        return (\r\n            <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\r\n                <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\r\n                    <span className='my-4' ><FaHardHat fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\r\n                    <p className='is-uppercase is-size-6 has-text-weight-bold'>View and manage job listings</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const time = unix(job.timestamp / 1000)\r\n\r\n    return (\r\n        <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\r\n            <div className='card-content is-paddingless'>\r\n                <div className='level py-4 mb-0'>\r\n                    <div className='level-item is-size-6'>POSTED {time.calendar()}</div>\r\n                    <div className='level-item is-size-4 has-text-weight-bold'>{job.title}</div>\r\n                    <div className='level-item is-size-6'>{job.id}</div>\r\n                </div>\r\n                <div className='container is-fluid px-0'>\r\n                    <div className='columns is-fullheight mx-0 is-multiline'>\r\n                        <div className='column is-8-fullhd is-7-desktop is-12 px-0'>\r\n                            <JobDetailTask job={job} />\r\n                        </div>\r\n                        <div className='column is-4-fullhd is-5-desktop is-12 is-flex'>\r\n                            <JobDetailUser job={job} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function JobDetailTask({ job }: { job: IJob }) {\r\n    let endTime, startTime, totalTime\r\n    if (job.endTime) endTime = unix(job.endTime / 1000)\r\n    if (job.startTime) startTime = unix(job.startTime / 1000)\r\n    if (job.endTime && job.startTime) totalTime = endTime.diff(startTime, 'h', true)\r\n\r\n    return (\r\n        <div className='is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\r\n            <figure className='image is-16by9' style={{ position: 'relative', paddingTop: '30%' }}>\r\n                <img src={'https://via.placeholder.com/728x90.png'} />\r\n                <a className='button is-large' style={{ position: 'absolute', bottom: 4, right: 4, background: 'transparent', border: 0 }}>\r\n                    <span className='icon is-size-2'><FaExpandAlt /></span>\r\n                </a>\r\n            </figure>\r\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\r\n                <div className='section'>\r\n                    <table className='table is-hoverable is-fullwidth'>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=' has-text-right'>LOCATION</td>\r\n                                <td className=' has-text-left'>{job.location}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=' has-text-right'>DESCRIPTION</td>\r\n                                <td className=' has-text-left'>{job.description}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=' has-text-right'>PAY</td>\r\n                                <td className=' has-text-left'>{job.description}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=' has-text-right'>TASKS</td>\r\n                                <td className=' has-text-left'>\r\n                                    {job.tasks && job.tasks.length > 1 ? job.tasks?.map(task => <p>- {task}</p>) : `-`}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=' has-text-right'> START</td>\r\n                                <td className='has-text-left'>{startTime.calendar() || `-`}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=' has-text-right'>END</td>\r\n                                <td className=' has-text-left'>{endTime.calendar() || `-`}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=' has-text-right'>TOTAL TIME</td>\r\n                                <td className=' has-text-left'>{totalTime.toFixed(2) || `-`}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {job.progress && job.progress >= 100 ? (\r\n                    <button className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-end' }}>View Invoice</button>\r\n                ) :\r\n                    <button className='button is-white is-uppercase is-inverted mx-4' style={{ alignSelf: 'flex-start' }}>Cancel Job</button>\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport function JobDetailUser({ job }: { job: IJob }) {\r\n    let startTime\r\n    if (job.startTime) startTime = unix(job.startTime / 1000)\r\n\r\n    return (\r\n        <div className='container pt-4 pb-0 is-flex' style={{ flexDirection: 'column' }} >\r\n            <div className='columns is-vcentered'>\r\n                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\r\n                    <figure className='image is-80x80 is-flex'>\r\n                        <img className='is-rounded' src={job.user.profileImageURL} />\r\n                    </figure>\r\n                </div>\r\n                <div className='column'>\r\n                    <div className='container'>\r\n                        <div className='columns is-marginless is-vcentered is-mobile'>\r\n                            <div className='column pb-0 pl-0'>\r\n                                <p className='is-size-5 has-text-left has-text-weight-bold'>{`${job.user.firstName} ${job.user.lastName}`}</p>\r\n                            </div>\r\n                            <div className=\"column has-text-right pr-0 pb-0 is-size-6\">View Profile</div>\r\n                        </div>\r\n                        <div className='content has-text-left'>\r\n                            <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user.starRate} &nbsp;{generateUserJobType(job.user)}</p>\r\n                            <p>{job.user.profileBio}</p>\r\n                            <p className='has-text-right'><span className='is-uppercase has-text-grey-light is-size-7'>member since</span> {job.user.dateCreated?.toDateString()}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\r\n                <table className='table is-hoverable is-fullwidth'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className='has-text-right'>CONTACT</td>\r\n                            <td className='has-text-left'>{job.user.phoneNumber}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className='has-text-right'>ACTIVE TASK</td>\r\n                            <td className='has-text-left'>{job.user.activeTask}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className='has-text-right'>START TIME</td>\r\n                            <td className='has-text-left'>{startTime.calendar()}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className='has-text-right'>HIGHLIGHTE SKILLS AND LICENSES</td>\r\n                            <td className='has-text-left'>\r\n                                {job.user.skills && job.user.skills.length > 1 ? job.user.skills?.map(task => <p>- {task}</p>) : `-`}\r\n                            </td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <button className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-start' }}>Message</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function JobList({ className }: { className?: string }) {\r\n    return (\r\n        <div className={className}>\r\n\r\n            {DUMMY_JOBS.map(j => (\r\n                <Link key={j.id} to={`/f`} className='column is-4-fullhd is-6-desktop is-12-touch list-item' >\r\n                    <JobListItem job={j} />\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function JobSideList({ className, onCreateNew }) {\r\n    return (\r\n        <div className={`${className} panel job-panel has-background-white-ter is-flex`}>\r\n            <div className='panel-heading is-flex is-vcentered'>\r\n                <p className='has-text-left'>Job Listings</p>\r\n                <a className='button is-rounded' onClick={onCreateNew}><BsPencilSquare /></a>\r\n            </div>\r\n            <div className='panel-block'>\r\n                <div className='field has-addons' style={{ flex: 1 }}>\r\n                    <div className='control is-expanded has-icons-left'>\r\n                        <input style={{ borderRight: 0 }} className='input is-rounded' type='search' placeholder='Search Jobs...' />\r\n                        <span className='icon is-left'><FaSearch /></span>\r\n                    </div>\r\n                    <div className='control'>\r\n                        <button style={{ borderLeft: 0 }} className='button is-rounded'>\r\n                            <span className='icon is-right'><GoSettings onClick={() => window.alert(\"paparazi\")} /></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='panel-tabs'>\r\n                <NavLink to={`${links.activeJobs}`} activeClassName='is-active'>Active</NavLink>\r\n                <NavLink to={`${links.inactiveJobs}`} activeClassName='is-active'>Inactive</NavLink>\r\n            </div>\r\n            <div className='has-background-white-ter' style={{ overflowY: 'auto', overflowX: 'hidden' }}>\r\n                <Route path={`${links.activeJobs}`} render={() => DUMMY_JOBS.map(j => <JobItem job={j} to={`${links.activeJobs}/${j.id}`} />)} />\r\n                <Route path={`${links.inactiveJobs}`} render={() => DUMMY_COMPLETED.map(j => <JobItem job={j} to={`${links.inactiveJobs}/${j.id}`} />)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function generateUserJobType(user: User) {\r\n    switch (user.jobType) {\r\n        case 'onsite':\r\n            return <><span className='icon has-text-info'><FaMapMarkerAlt /></span> On Site</>\r\n        case 'remote':\r\n            return <><span className='icon has-text-info'><FaGlobeAfrica /></span> Remote</>\r\n    }\r\n}\r\n\r\nexport interface IJob {\r\n    user: User\r\n    timestamp: number\r\n    title: string\r\n    description: string\r\n    location: string\r\n    progress?: number\r\n    startTime?: number\r\n    endTime?: number\r\n    tasks?: string[]\r\n    fullLocation?: string\r\n    id\r\n}\r\n\r\nexport const DUMMY_JOBS: IJob[] = [\r\n    {\r\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\r\n        title: \"Lorem ipsum dolor sit.\",\r\n        location: \"Vancouver, Canada\",\r\n        timestamp: Date.now(),\r\n        user: DUMMY_USER,\r\n        startTime: Date.now() - 12300000,\r\n        endTime: Date.now(),\r\n        tasks: [\"Clear porch\", \"Clear backyard\"],\r\n        id: 'papp'\r\n    },\r\n    {\r\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\r\n        title: \"Lorem ipsum dolor sit.\",\r\n        location: \"Vancouver, Canada\",\r\n        timestamp: Date.now(),\r\n        user: DUMMY_USER,\r\n        startTime: Date.now() - 12300000,\r\n        endTime: Date.now(),\r\n        progress: 80,\r\n        tasks: [],\r\n        id: 'papdsdp'\r\n    },\r\n    {\r\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\r\n        title: \"Lorem ipsum dolor sit.\",\r\n        location: \"Vancouver, Canada\",\r\n        timestamp: Date.now(),\r\n        user: DUMMY_USER,\r\n        startTime: Date.now() - 12300000,\r\n        endTime: Date.now(),\r\n        tasks: [\"Clear porch\", \"Clear backyard\"],\r\n        id: 'papdefvzsdp'\r\n    },\r\n    {\r\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\r\n        title: \"Lorem ipsum dolor sit.\",\r\n        location: \"Vancouver, Canada\",\r\n        timestamp: Date.now(),\r\n        user: DUMMY_USER,\r\n        progress: 99,\r\n        startTime: Date.now() - 12300000,\r\n        endTime: Date.now(),\r\n        tasks: [\"Clear porch\", \"Clear backyard\"],\r\n        id: 'papdw3dsdp'\r\n    },\r\n    {\r\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\r\n        title: \"Lorem ipsum dolor sit.\",\r\n        location: \"Vancouver, Canada\",\r\n        timestamp: Date.now(),\r\n        user: DUMMY_USER,\r\n        progress: 20,\r\n        id: 'padpp'\r\n    },\r\n    {\r\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\r\n        title: \"Lorem ipsum dolor sit.\",\r\n        location: \"Vancouver, Canada\",\r\n        timestamp: Date.now(),\r\n        user: DUMMY_USER,\r\n        progress: 90,\r\n        id: 'papdvp'\r\n    },\r\n    {\r\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\r\n        title: \"Lorem ipsum dolor sit.\",\r\n        location: \"Vancouver, Canada\",\r\n        timestamp: Date.now(),\r\n        user: DUMMY_USER,\r\n        id: 'papdfp'\r\n    }\r\n]\r\n\r\nconst DUMMY_COMPLETED: IJob[] = [\r\n    {\r\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\r\n        title: \"Lorem ipsum dolor sit.\",\r\n        location: \"Vancouver, Canada\",\r\n        timestamp: Date.now(),\r\n        user: DUMMY_USER,\r\n        progress: 100,\r\n        startTime: Date.now() - 12300000,\r\n        endTime: Date.now(),\r\n        tasks: [\"Clear porch\", \"Clear backyard\"],\r\n        id: 'papdw3dsdp'\r\n    },\r\n    {\r\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\r\n        title: \"Lorem ipsum dolor sit.\",\r\n        location: \"Vancouver, Canada\",\r\n        timestamp: Date.now(),\r\n        user: DUMMY_USER,\r\n        progress: 100,\r\n        startTime: Date.now() - 12300000,\r\n        endTime: Date.now(),\r\n        tasks: [\"Clear porch\", \"Clear backyard\"],\r\n        id: 'papdw3dsdp'\r\n    },\r\n    {\r\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\r\n        title: \"Lorem ipsum dolor sit.\",\r\n        location: \"Vancouver, Canada\",\r\n        timestamp: Date.now(),\r\n        user: DUMMY_USER,\r\n        progress: 100,\r\n        startTime: Date.now() - 12300000,\r\n        endTime: Date.now(),\r\n        tasks: [\"Clear porch\", \"Clear backyard\"],\r\n        id: 'papdw3dsdp'\r\n    },\r\n]","import React from 'react'\r\nimport { User, DUMMY_USER } from '../lib/user'\r\nimport { FaStar } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\nimport links from '../lib/links'\r\n\r\n\r\n\r\nexport function UserListItem({ user }: { user: User }) {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className='card-content'>\r\n                <div className='columns is-vcentered is-mobile'>\r\n                    <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\r\n                        <figure className='image is-flex is-96x96'>\r\n                            <img className='is-rounded' src={user.profileImageURL} />\r\n                        </figure>\r\n                    </div>\r\n                    <div className='column has-text-left ml-3'>\r\n                        <p className='title is-5 my-1'>{`${user.firstName} ${user.lastName}`}</p>\r\n                        <p className='is-size-5'><span className='icon has-text-info'><FaStar /></span>{user.starRate}</p>\r\n                    </div>\r\n                </div>\r\n                <div className='content'>\r\n                    <p style={{ maxLines: 2, whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{user.profileBio}</p>\r\n                </div>\r\n            </div>\r\n            <div className='card-footer'>\r\n                <Link to={links.profile} className='card-footer-item'>\r\n                    <span>View Profile</span>\r\n                </Link>\r\n                <Link to={links.messages} className='card-footer-item'>\r\n                    <span>Message</span>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function UserList({ className }) {\r\n    return (\r\n        <div className={className}>\r\n            {[DUMMY_USER, DUMMY_USER, DUMMY_USER, DUMMY_USER, DUMMY_USER, DUMMY_USER, DUMMY_USER, DUMMY_USER, DUMMY_USER].map(u => (\r\n                <Link key={u.id} to={`/f`} className='column is-4-widescreen is-6-desktop is-12-touch list-item' >\r\n                    <UserListItem user={u} />\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { NotificationList } from '../components/notification'\r\nimport { PaymentList } from '../components/payment'\r\nimport { CardFragment } from \"../components/util\";\r\nimport { JobListItem, JobList } from '../components/job';\r\nimport { UserList } from '../components/user';\r\nimport { CreateJob } from '../components/jobcreation';\r\n\r\nexport function Dashboard() {\r\n    return (\r\n        <div className='columns is-1 is-variable px-3 py-3 is-atleast-fullheight'>\r\n            <NotificationList className='column is-3 is-2-widescreen' />\r\n            <div className='column is-6 is-8-widescreen is-flex' style={{ flexDirection: 'column', justifyContent: 'space-between' }}>\r\n                <CardFragment header='Active Jobs' optionsText={'View All'} style={{ marginBottom: '0.8em', flexGrow: 2 }}>\r\n                    <JobList className={'columns is-multiline is-1 is-variable'} />\r\n                </CardFragment>\r\n                <CardFragment header='Recently Hired' optionsText={'View All'} style={{ flexGrow: 1 }}>\r\n                    <UserList className={'columns is-multiline is-1 is-variable'} />\r\n                </CardFragment>\r\n            </div>\r\n            <PaymentList className='column is-3 is-2-widescreen' />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { FaSearch, FaMapMarkerAlt, FaChevronLeft } from 'react-icons/fa'\r\nimport { on } from 'process'\r\n\r\nexport function FormField({ label, className, type, placeholder, icon, showBorder = true, containerClassName = '', isTextArea = false, maxLength = Number.MAX_SAFE_INTEGER, helpTextTop = \"\", helpTextLeft = \"\", helpTextRight = \"\", hasAddons = false, addon = <></> }) {\r\n    return (\r\n        <div className={`${containerClassName} ${showBorder ? 'job-form-field' : ''} field has-text-left`}>\r\n            <label className='label is-flex' style={{ justifyContent: 'space-between' }}><span>{label}</span> <span className='has-text-right has-text-weight-normal is-size-7'>{helpTextTop}</span></label>\r\n            {!hasAddons ?\r\n                <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\r\n                    {isTextArea ?\r\n                        <textarea className={`${className} textarea`} maxLength={maxLength} placeholder={placeholder} />\r\n                        :\r\n                        <input maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} />\r\n                    }\r\n                    {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\r\n                </div>\r\n                :\r\n                <div className={`${hasAddons ? 'has-addons' : ''} field`}>\r\n                    <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\r\n                        <input maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} style={{ borderRight: 0 }} />\r\n                        {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\r\n                    </div>\r\n                    {addon}\r\n                </div>\r\n            }\r\n            <div className='help'>\r\n                <div className='container'>\r\n                    <div className='columns'>\r\n                        {helpTextLeft ? <p className='column has-text-left has-text-centered-touch'>{helpTextLeft} </p> : null}\r\n                        {helpTextRight ? <p className='column has-text-right has-text-centered-touch'>{helpTextRight} </p> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function CreateJob({ onClose, show, onComplete }) {\r\n    return (\r\n        <form className={`modal ${show ? 'is-active' : ''}`} onSubmit={(e) => {\r\n            e.stopPropagation()\r\n            e.preventDefault()\r\n            // TODO: handle processing before complete\r\n            \r\n            onComplete()\r\n        }}>\r\n            <div className='modal-background'></div>\r\n            <div className='modal-card'>\r\n                <header className='modal-card-head'>\r\n                    <div className='modal-card-title is-mobile is-vcentered columns'>\r\n                        <div className='column has-text-left'>\r\n                            <button className='button' onClick={onClose}><span className='icon'><FaChevronLeft /></span><span className='is-hidden-mobile'> View Current Jobs</span></button>\r\n                        </div>\r\n                        <div className='column has-text-left-mobile is-10-mobile'>\r\n                            <span>New Job Listing</span>\r\n                        </div>\r\n                        <a className='column is-hidden-mobile'></a>\r\n                    </div>\r\n                </header>\r\n                <div className='modal-card-body px-0'>\r\n                    <div className='container'>\r\n                        <div className='level px-4'>\r\n                            <p className='level-item has-text-left is-block is-size-4 has-text-centered-touch'>Job Details</p>\r\n                            <p className='level-item has-text-right is-block has-text-grey-light has-text-centered-touch'>All fields are required to be filled out</p>\r\n                        </div>\r\n                        <div className='container is-fluid pb-4 px-0'>\r\n                            <div className='columns mx-0 px-4'>\r\n                                <div className='column is-6'>\r\n                                    <FormField className='' containerClassName='mb-4' label=\"Job Type\" placeholder='Begin typing a job type' type='text' icon={<FaSearch />} helpTextLeft='Search and select a job type to improve search results when finding a contractor' />\r\n                                    <FormField className='' containerClassName='my-4' label=\"Title\" placeholder='Provide a title for the job' type='text' icon={null} helpTextLeft='Will be seen by contractors in search result and as an active status' helpTextRight='Maximum 30 characters' maxLength={30} />\r\n                                    <FormField className='' containerClassName='my-4' label=\"Description\" isTextArea placeholder='Provide a description of the job' type='text' icon={null} helpTextLeft='Give a short description to improve finding a contractor that fits the job' helpTextRight='Maximum 80 characters' maxLength={80} />\r\n                                    <FormField className='' containerClassName='my-4' label=\"Location Address\" placeholder='Begin typing a job type' type='text' icon={<FaMapMarkerAlt />}\r\n                                        hasAddons addon={(\r\n                                            <div className='control'>\r\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}><span className='is-size-7'>or enter the address manually</span></button>\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                                <div className='column is-6'>\r\n                                    <FormField hasAddons className='' containerClassName='mb-4' label=\"How many persons are needed for the job\"\r\n                                        placeholder='How many persons are needed for the job'\r\n                                        type='number' helpTextRight='10 persons maximum per job'\r\n                                        icon={null}\r\n                                        addon={(\r\n                                            <div className='control'>\r\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Persons</button>\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <FormField hasAddons className='' containerClassName='my-4' label=\"Pay\"\r\n                                        placeholder='Provide an amount'\r\n                                        type='number' helpTextLeft='Will be seen in search results. Cannot be adjusted once the listing is pending or active'\r\n                                        icon={null}\r\n                                        addon={(\r\n                                            <div className='control'>\r\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Per Hour</button>\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <FormField isTextArea className='' containerClassName='my-4' label=\"Tasks\" placeholder='Add a task' type='text' icon={null} helpTextTop='Provide each task required to be completed for this listing' />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <footer className='modal-card-foot is-flex-centered'>\r\n                    <button className='button' onClick={onClose}>Cancel</button>\r\n                    <button className='button is-info' type='submit'>Confirm</button>\r\n                </footer>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { NotificationList } from '../components/notification'\r\nimport { PaymentList } from '../components/payment'\r\nimport { CardFragment } from \"../components/util\";\r\nimport { JobListItem, JobList, JobSideList, JobDetail, DUMMY_JOBS } from '../components/job';\r\nimport { UserList } from '../components/user';\r\nimport { CreateJob } from '../components/jobcreation';\r\n\r\nexport function Jobs() {\r\n    const [state, setState] = useState({ showModal: false })\r\n    return (\r\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\r\n            <JobSideList onCreateNew={() => setState({ ...state, showModal: true })} className='column is-3 is-12-touch is-clipped is-fullheight' />\r\n            <JobDetail job={null} className='column is-9 is-12-touch is-flex' />\r\n            <CreateJob show={state.showModal} onClose={() => setState({ ...state, showModal: false })} onComplete={() => {\r\n                setState({ ...state, showModal: false })\r\n            }} />\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { NotificationList } from '../components/notification'\r\nimport { PaymentList } from '../components/payment'\r\nimport { CardFragment } from \"../components/util\";\r\nimport { JobListItem, JobList, JobSideList, JobDetail, DUMMY_JOBS } from '../components/job';\r\nimport { UserList } from '../components/user';\r\nimport { CreateJob } from '../components/jobcreation';\r\nimport { NavLink, Route, Switch, Link } from 'react-router-dom';\r\nimport links from '../lib/links';\r\nimport { FaCog, FaCogs, FaApplePay, FaApple, FaPaypal, FaChevronRight } from 'react-icons/fa';\r\nimport { APPLICATION_CONTEXT } from '../lib';\r\nimport { unix } from 'moment';\r\nimport { link } from 'fs';\r\n\r\nexport function SettingsDetail({ title, children = <></> }) {\r\n    return (\r\n        <div className=\"container is-fluid settings-detail\">\r\n            <div className='content mb-0 py-4'>\r\n                <p className='has-text-weight-bold is-size-4 has-text-left has-text-centered-mobile'>{title}</p>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Settings() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n\r\n\r\n    return (\r\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\r\n            <div className={`box px-0 py-0`} style={{ flexDirection: 'column', flex: 1 }}>\r\n                <div className='card-content is-paddingless is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\r\n                    <div className='level py-4 mb-0' style={{ boxShadow: '0 0.125em 0.25em rgba(10, 10, 10, .1)' }}>\r\n                        <div className='level-left-item is-size-6'>\r\n                            <p className=\"title is-size-6 has-text-weight-bold pl-4\">Settings</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='container is-flex is-fluid px-0'>\r\n                        <div className='columns mx-0 is-multiline' style={{ flexGrow: 1 }}>\r\n                            <div className='column is-2-fullhd is-3-desktop is-12 px-0'>\r\n                                <div className='container'>\r\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.loginAndSecurity} exact>\r\n                                        <div className='py-4 is-size-5 settings-link' >\r\n                                            <p className='mx-4'>Login and Security</p>\r\n                                        </div>\r\n                                    </NavLink>\r\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.paymentMethods}>\r\n                                        <div className='py-4 is-size-5 settings-link' >\r\n                                            <p className='mx-4'>Payment Methods</p>\r\n                                        </div>\r\n                                    </NavLink>\r\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.additionalFeatures}>\r\n                                        <div className='py-4 is-size-5 settings-link' >\r\n                                            <p className='mx-4'>Additional Features</p>\r\n                                        </div>\r\n                                    </NavLink>\r\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.legalDocuments}>\r\n                                        <div className='py-4 is-size-5 settings-link' >\r\n                                            <p className='mx-4'>Legal Documents</p>\r\n                                        </div>\r\n                                    </NavLink>\r\n                                </div>\r\n                            </div>\r\n                            <div className='column is-10-fullhd is-9-desktop is-12 is-flex px-0'>\r\n                                <Switch >\r\n                                    <Route path={links.loginAndSecurity} exact render={() => (\r\n                                        <LoginAndSecurity />\r\n                                    )} />\r\n                                    <Route path={links.paymentMethods} exact render={() => (\r\n                                        <PaymentMethods />\r\n                                    )} />\r\n                                    <Route path={links.legalDocuments} exact render={() => (\r\n                                        <LegalDocuments />\r\n                                    )} />\r\n                                    <Route render={() => (\r\n                                        <div className=\"container is-fluid is-flex-centered settings-detail py-6\">\r\n                                            <div className='content has-text-grey'>\r\n                                                <span className='my-4' ><FaCogs fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\r\n                                                <p className='is-uppercase is-size-6 has-text-weight-bold'>Manage your account</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )} />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport function LoginAndSecurity() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const [state, setState] = useState({\r\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\r\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\r\n    })\r\n\r\n    return (\r\n        <SettingsDetail title={\"Login and Security\"} children={(\r\n            <>\r\n                <div className='columns'>\r\n                    <div className='column has-text-left has-text-centered-mobile'>\r\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Email Address</p>\r\n                        <p className='subtitle has-text-grey'>Email address connected to your account</p>\r\n                    </div>\r\n                    <div className='column has-text-right has-text-centered-mobile'>\r\n                        <div className={`control`}>\r\n                            <input className={`input ${state.editEmail ? '' : 'is-static'} has-text-black is-size-5 has-text-right has-text-centered-mobile`} value={state.email} contentEditable={false} disabled={!state.editEmail} onChange={e => setState({ ...state, email: e.target.value })} />\r\n                        </div>\r\n                        <div className='field is-grouped is-grouped-right'>\r\n                            <div className='control'>\r\n                                <button className='button' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\r\n                            </div>\r\n                            {state.editEmail ? (\r\n                                <div className='control'>\r\n                                    <button className={`button is-info ${state.isLoadingEmail ? 'is-loading' : ''}`} onClick={() => {\r\n                                        setState({ ...state, isLoadingEmail: true })\r\n                                    }}>Change</button>\r\n                                </div>\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='columns'>\r\n                    <div className='column has-text-left has-text-centered-mobile'>\r\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Phone Number</p>\r\n                        <p className='subtitle has-text-grey'>Your phone number provided upon signing-up</p>\r\n                    </div>\r\n                    <div className='column has-text-right has-text-centered-mobile'>\r\n                        <div className={`control`}>\r\n                            <input className={`input is-static has-text-right has-text-black is-size-5 has-text-centered-mobile`} disabled value={ctx.user?.phoneNumber} />\r\n                        </div>\r\n                        <p className='subtitle has-text-grey'>Due to restrictions, contact support to modify your phone number</p>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='columns'>\r\n                    <div className='column has-text-left has-text-centered-mobile'>\r\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Password</p>\r\n                        <p className='subtitle has-text-grey'>Maintain a strong, unique password to protect your account</p>\r\n                    </div>\r\n                    <div className='column has-text-right has-text-centered-mobile'>\r\n                        <div className={`control title`}>\r\n                            <button className='button is-link' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\r\n                        </div>\r\n                        <p className='subtitle has-text-grey'>{state.lastPasswordChanged ? `Last modified ${state.lastPasswordChanged.calendar()}` : \"Never Changed\"}</p>\r\n\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )} />\r\n    )\r\n}\r\n\r\n\r\nexport function PaymentMethods() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const [state, setState] = useState({\r\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\r\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\r\n    })\r\n\r\n    return (\r\n        <SettingsDetail title={\"Payment Methods\"} children={(\r\n            <>\r\n                <div className='columns is-unselectable'>\r\n                    <div className='column has-text-left has-text-centered-mobile'>\r\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Preferred Method</p>\r\n                        <p className='subtitle has-text-grey'>Selected method of payment for jobs</p>\r\n                    </div>\r\n                    <div className='column has-text-right has-text-centered-mobile'>\r\n                        <p className='is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>{'VI 534***1234 12/22'}</p>\r\n                        <Link to={`${links.paymentMethods}/change`} >Change</Link>\r\n                    </div>\r\n                </div>\r\n                <div className='columns'>\r\n                    <div className='column has-text-left has-text-centered-mobile'>\r\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Other Methods</p>\r\n                    </div>\r\n                </div>\r\n                <div className='columns' style={{ borderTop: 0 }}>\r\n                    <div className='column has-text-right has-text-centered-mobile'>\r\n                        <div className='button is-white is-large'>\r\n                            <span className='icon'>\r\n                                <FaApple size={80} />\r\n                            </span>\r\n                            <span>Apple Pay</span>\r\n                            <span className='icon'>\r\n                                <FaChevronRight size={20} />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='columns'>\r\n                    <div className='column has-text-right has-text-centered-mobile'>\r\n                        <div className='button is-white is-large'>\r\n                            <span className='icon'>\r\n                                <FaPaypal size={80} />\r\n                            </span>\r\n                            <span>PayPal</span>\r\n                            <span className='icon'>\r\n                                <FaChevronRight size={20} />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='columns' style={{ borderBottom: 0 }}>\r\n                    <div className='column has-text-right has-text-centered-mobile'>\r\n                        <Link to={`${links.paymentMethods}/add`}>+ Add a Payment Method</Link>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )} />\r\n    )\r\n}\r\n\r\n\r\nexport function LegalDocuments() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const [state, setState] = useState({\r\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\r\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\r\n    })\r\n\r\n    return (\r\n        <SettingsDetail title={\"Legal Documents\"} children={(\r\n            <>\r\n                <Link to={`${links.legalDocuments}/useragreement`} className='columns is-vcentered is-unselectable'>\r\n                    <div className='column has-text-left has-text-centered-mobile'>\r\n                        <p className='title is-size-5 pb-2 px-0' >User Agreement</p>\r\n                    </div>\r\n                    <div className='column has-text-right has-text-centered-mobile'>\r\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\r\n                            <span className='icon'><FaChevronRight /></span>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link to={`${links.legalDocuments}/privacy`} className='columns is-vcentered is-unselectable'>\r\n                    <div className='column has-text-left has-text-centered-mobile'>\r\n                        <p className='title is-size-5 pb-2 px-0' >Privacy Policy</p>\r\n                    </div>\r\n                    <div className='column has-text-right has-text-centered-mobile'>\r\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\r\n                            <span className='icon'><FaChevronRight /></span>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link to={`${links.legalDocuments}/terms`} className='columns is-vcentered is-unselectable'>\r\n                    <div className='column has-text-left has-text-centered-mobile'>\r\n                        <p className='title is-size-5 pb-2 px-0' >Terms of Service</p>\r\n                    </div>\r\n                    <div className='column has-text-right has-text-centered-mobile'>\r\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\r\n                            <span className='icon'><FaChevronRight /></span>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link to={`${links.legalDocuments}/cookie`} className='columns is-vcentered is-unselectable'>\r\n                    <div className='column has-text-left has-text-centered-mobile'>\r\n                        <p className='title is-size-5 pb-2 px-0' >Cookie Policy</p>\r\n                    </div>\r\n                    <div className='column has-text-right has-text-centered-mobile'>\r\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\r\n                            <span className='icon'><FaChevronRight /></span>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n            </>\r\n        )} />\r\n    )\r\n}","import React, { useContext } from \"react\"\r\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from \"../lib\"\r\nimport { Redirect, Route, useLocation, useHistory, RouteProps } from \"react-router-dom\"\r\nimport links from \"../lib/links\"\r\n\r\n/**\r\n * HOC (high order component) for rendering private views only if the user is authenticated.\r\n * \r\n * @param children View to render if authenticated\r\n */\r\nexport function AuthGuard({ children, ...rest }: RouteProps) {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <Route {...rest}>\r\n            {ctx.signedIn() && viewCTX.signedIn ? (\r\n                children\r\n            ) : (\r\n                    <Redirect to={{\r\n                        pathname: links.login,\r\n                        state: {\r\n                            from: location\r\n                        }\r\n                    }} />\r\n                )\r\n            }\r\n        </Route>\r\n    )\r\n}\r\n\r\n/**\r\n * HOC for rendering components based on the authenticated state of the application.\r\n * This HOC is used for conditionally rendering authentication views (like login pages) or redirect if the user is already authenticated.\r\n * \r\n * @param children View to render\r\n */\r\nexport function AuthHandler({ children }) {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n    const location = useLocation()\r\n\r\n    if (ctx.signedIn() && viewCTX.signedIn) {\r\n        const { from } = (location.state as any) || { from: { pathname: '/' } }\r\n        return <Redirect to={from} />\r\n    } else {\r\n        return children\r\n    }\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { NotificationList } from '../components/notification'\r\nimport { PaymentList } from '../components/payment'\r\nimport { CardFragment } from \"../components/util\";\r\nimport { JobListItem, JobList, JobSideList, JobDetail, DUMMY_JOBS } from '../components/job';\r\nimport { UserList } from '../components/user';\r\nimport { CreateJob } from '../components/jobcreation';\r\nimport { AuthHandler } from '../components/guard';\r\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\r\nimport logo from \"../logo.svg\";\r\nimport { FaPhoneAlt, FaSms, FaUser, FaEnvelope, FaKey, FaEyeSlash, FaEye, FaPlus, FaUserPlus, FaAngleDoubleRight, FaSignInAlt, FaChevronLeft } from 'react-icons/fa';\r\nimport { RiLockPasswordLine } from 'react-icons/ri';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport links from '../lib/links';\r\n\r\nexport interface IRegister {\r\n    first_name: string,\r\n    last_name: string,\r\n    password: string,\r\n    password_verify: string,\r\n    email: string,\r\n    phone_number: string,\r\n}\r\n\r\nexport interface ILogin {\r\n    code: string,\r\n    phone_number: string,\r\n    password: string,\r\n    showPassword: boolean,\r\n    loading?: boolean\r\n}\r\n\r\nexport function RegisterView() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const [state, setState] = useState({\r\n        showModal: false,\r\n        showCodeRequest: true,\r\n        showPassword: false,\r\n        showPasswordVerify: false,\r\n        loading: false,\r\n    })\r\n    const [formState, setFormState] = useState<IRegister>({\r\n        email: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        password: '',\r\n        password_verify: '',\r\n        phone_number: ''\r\n    })\r\n\r\n    const { addToast } = useToasts()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const onSubmit = useCallback(async (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        setState({ ...state, loading: true })\r\n\r\n        try {\r\n            const response = await ctx.addAdmin(formState)\r\n\r\n            if (!response || !response.success) {\r\n                throw new Error('Failed to register user!')\r\n            }\r\n            addToast('User registered successfully!', {\r\n                appearance: 'success'\r\n            })\r\n            setState({ ...state, loading: false })\r\n            history.push(links.login, location.state)\r\n        } catch (e) {\r\n            console.log(e)\r\n            addToast(e.message || 'Failed to add new user!', {\r\n                appearance: 'error'\r\n            })\r\n            setState({ ...state, loading: false })\r\n        }\r\n    }, [state, formState])\r\n\r\n\r\n    return (\r\n        <div className='section'>\r\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\r\n                <img src={logo} className='is-rounded' />\r\n            </figure>\r\n\r\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\r\n\r\n            <form className='my-2' onSubmit={onSubmit}>\r\n                <div className='field is-horizontal'>\r\n                    <div className='field-body'>\r\n                        <div className='field'>\r\n                            <div className='control has-icons-left '>\r\n                                <input autoComplete=\"given-name\" disabled={state.loading} required value={formState.first_name} onChange={(e) => setFormState({ ...formState, first_name: e.target.value })} placeholder='enter firstname...' className='input' type='text' />\r\n                                <span className='icon is-left is-small'><FaUser /></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className='control has-icons-left '>\r\n                                <input autoComplete=\"family-name\" disabled={state.loading} required value={formState.last_name} onChange={(e) => setFormState({ ...formState, last_name: e.target.value })} placeholder='enter lastname...' className='input' type='text' />\r\n                                <span className='icon is-left is-small'><FaUser /></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='field'>\r\n                    <div className='control has-icons-left '>\r\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.email} onChange={(e) => setFormState({ ...formState, email: e.target.value })} placeholder='enter your email address...' className='input' type='email' />\r\n                        <span className='icon is-left is-small'><FaEnvelope /></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='field'>\r\n                    <div className='control has-icons-left '>\r\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.phone_number} onChange={(e) => setFormState({ ...formState, phone_number: e.target.value })} placeholder='enter your phone number include the \"+\" sign...' className='input' type='tel' />\r\n                        <span className='icon is-left is-small'><FaPhoneAlt /></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='field is-horizontal'>\r\n                    <div className='field-body'>\r\n                        <div className='field has-addons'>\r\n                            <div className='control has-icons-left is-expanded'>\r\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password} onChange={(e) => setFormState({ ...formState, password: e.target.value })} placeholder='enter your password...' className='input' type={state.showPassword ? 'text' : 'password'} />\r\n                                <span className='icon is-left is-small'><FaKey /></span>\r\n                            </div>\r\n                            <div className='control'>\r\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='field has-addons'>\r\n                            <div className='control has-icons-left is-expanded'>\r\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password_verify} onChange={(e) => setFormState({ ...formState, password_verify: e.target.value })} placeholder='re-enter your password...' className='input' type={state.showPasswordVerify ? 'text' : 'password'} />\r\n                                <span className='icon is-left is-small'><FaKey /></span>\r\n                            </div>\r\n                            <div className='control'>\r\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPasswordVerify: !state.showPasswordVerify })}>{state.showPasswordVerify ? <FaEyeSlash /> : <FaEye />}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className='field mt-6'>\r\n                    <div className='control'>\r\n                        <button disabled={state.loading} className={`button is-uppercase is-success ${state.loading ? 'is-loading' : ''}`} type='submit'>\r\n                            <FaUserPlus />&nbsp; Register\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div className='section mt-6 is-size-7'>\r\n                <p>Already have an account?</p>\r\n                <Link to={links.login}>Click here to login</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport function LoginView() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n    const [state, setState] = useState({\r\n        showCodeRequest: true,\r\n        loading: false,\r\n        phone: ''\r\n    })\r\n\r\n    const { addToast } = useToasts()\r\n\r\n\r\n    /**\r\n     * Called to verify the user's number and send OTP through specified channel.\r\n     */\r\n    const onSubmitCodeRequest = useCallback(async (form: { phone: string, channel: 'sms' | 'call' }) => {\r\n        setState({ ...state, loading: true })\r\n\r\n        try {\r\n            // Check if number exists in database\r\n            await ctx.validateNumber(form.phone)\r\n            // Generate OTP code for provided number\r\n            const done = await ctx.triggerVerification(form.phone, form?.channel)\r\n\r\n            if (!done) {\r\n                throw new Error('Failed to verify phone number!')\r\n            }\r\n\r\n            addToast('Verification code sent to your phone!', {\r\n                appearance: 'success'\r\n            })\r\n            setState({ ...state, loading: false, phone: form.phone })\r\n            return true\r\n        } catch (e) {\r\n            console.log(e)\r\n            addToast(e.message || 'Verification failed!', {\r\n                appearance: 'error'\r\n            })\r\n            setState({ ...state, loading: false })\r\n            return false\r\n        }\r\n    }, [state])\r\n\r\n    /**\r\n     * Called to login to application after the OTP has been received and inputted in the form.\r\n     */\r\n    const onSubmitVerified = useCallback(async (form: ILogin) => {\r\n        setState({ ...state, loading: true })\r\n\r\n        try {\r\n            const user = await ctx.login(form.phone_number, form.code, form.password)\r\n\r\n            if (!user) {\r\n                throw new Error('Failed to login!')\r\n            }\r\n\r\n            addToast('Login successful!', {\r\n                appearance: 'success'\r\n            })\r\n            setState({ ...state, loading: false, })\r\n            return true\r\n        } catch (e) {\r\n            console.log(e)\r\n            addToast(e.message || 'Login failed!', {\r\n                appearance: 'error'\r\n            })\r\n            setState({ ...state, loading: false })\r\n            return false\r\n        }\r\n    }, [state])\r\n\r\n\r\n    return (\r\n        <div className='section'>\r\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\r\n                <img src={logo} className='is-rounded' />\r\n            </figure>\r\n\r\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\r\n\r\n            {state.showCodeRequest ? (\r\n                <CodeRequestForm onComplete={() => setState({ ...state, showCodeRequest: false })} loading={state.loading} onSubmit={onSubmitCodeRequest} />\r\n            ) : (\r\n                    <LoginForm onCancel={() => setState({ ...state, showCodeRequest: true })} loading={state.loading} phone={state.phone} onSubmit={onSubmitVerified} />\r\n                )}\r\n\r\n            <div className='section mt-6 is-size-7'>\r\n                <p>Are you a new user?</p>\r\n                <Link to={links.register}>Request access</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction CodeRequestForm({ onSubmit, loading, onComplete }) {\r\n    const [state, setState] = useState({\r\n        phone: '',\r\n        channel: 'sms'\r\n    })\r\n    const [viewState, setView] = useState({\r\n        showOptions: false,\r\n        hold: false,\r\n        holdTimer: 0,\r\n    })\r\n\r\n    let intervalID\r\n\r\n    const onSubmitForm = useCallback(async (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        // Trigger code to be sent. `success` decides if the code was successfully triggered.\r\n        const success = await onSubmit(state)\r\n        if (success) {\r\n            let counter = 59\r\n\r\n            clearInterval(intervalID)\r\n            intervalID = setInterval(() => {\r\n                if (counter === 0) {\r\n                    clearInterval(intervalID)\r\n                    setView({ ...viewState, hold: false, showOptions: true, holdTimer: counter })\r\n                    return\r\n                }\r\n                setView({ ...viewState, hold: true, holdTimer: counter, showOptions: true, })\r\n                counter--\r\n            }, 1000)\r\n        }\r\n    }, [state, viewState])\r\n\r\n    return (\r\n        <form onSubmit={onSubmitForm}>\r\n            <div className='field'>\r\n                <div className='control has-icons-left '>\r\n                    <input autoComplete=\"off\" disabled={loading || viewState.hold} required value={state.phone} onChange={(e) => setState({ ...state, phone: e.target.value })} placeholder='enter your phone number...' className='input is-rounded' type='text' />\r\n                    <span className='icon is-left is-small'><FaPhoneAlt /></span>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='field mt-4'>\r\n                <div className='control'>\r\n                    {viewState.showOptions ?\r\n                        (\r\n                            <button onClick={onComplete} disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='button'>\r\n                                <FaAngleDoubleRight />&nbsp; Proceed\r\n                            </button>\r\n                        ) : (\r\n                            <button disabled={loading || viewState.hold} className={`button is-rounded is-uppercase is-info ${loading ? 'is-loading' : ''}`} type='submit'>\r\n                                {state.channel === 'sms' ? <><FaSms />&nbsp; Send Code</> : <><FaPhoneAlt />&nbsp; Call Me</>}\r\n                            </button>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className='field is-size-7'>\r\n\r\n                {viewState.showOptions ? (\r\n                    <>\r\n                        <p className='help mt-4 mb-2'>Didn't get code? {viewState.hold ? <span className='has-text-danger'>Try again in: {viewState.holdTimer}s</span> : null}</p>\r\n                        <div className='control buttons has-addons is-centered'>\r\n                            <button onClick={() => {\r\n                                setView({ ...viewState, showOptions: false })\r\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\r\n                                <span className='is-size-7'>Try Again</span>\r\n                            </button>\r\n                            <button onClick={() => {\r\n                                setState({ ...state, channel: state.channel === 'sms' ? 'call' : 'sms' })\r\n                                setView({ ...viewState, showOptions: false })\r\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\r\n                                <span className='is-size-7'> {state.channel === 'sms' ? \"Use voice\" : \"Use SMS\"}</span>\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                ) : null}\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nfunction LoginForm({ phone, loading, onSubmit, onCancel }) {\r\n    const [state, setState] = useState<ILogin>({\r\n        code: '',\r\n        phone_number: phone,\r\n        password: '',\r\n        showPassword: false,\r\n    })\r\n\r\n    const onSubmitForm = useCallback(async (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        await onSubmit(state)\r\n    }, [state])\r\n\r\n    return (\r\n        <form onSubmit={onSubmitForm} >\r\n            <div className='field'>\r\n                <div className='control has-icons-left'>\r\n                    <input autoComplete=\"off\" disabled required value={state.phone_number} placeholder='enter your phone number...' className='input' type='tel' />\r\n                    <span className='icon is-left is-small'><FaUser /></span>\r\n                </div>\r\n            </div>\r\n            <div className='field'>\r\n                <div className='control has-icons-left'>\r\n                    <input autoComplete=\"off\" pattern={'/.{4}/'} max={9999} maxLength={4} minLength={4} disabled={state.loading} required value={state.code} onChange={(e) => setState({ ...state, code: e.target.value })} placeholder='enter 4 digits code...' className='input' type='number' />\r\n                    <span className='icon is-left is-small'><RiLockPasswordLine /></span>\r\n                </div>\r\n            </div>\r\n            <div className='field has-addons'>\r\n                <div className='control has-icons-left is-expanded'>\r\n                    <input autoComplete=\"off\" disabled={state.loading} required value={state.password} onChange={(e) => setState({ ...state, password: e.target.value })} placeholder='enter your password...' className='input' type={state.showPassword ? 'text' : 'password'} />\r\n                    <span className='icon is-left is-small'><FaKey /></span>\r\n                </div>\r\n                <div className='control'>\r\n                    <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='field mt-6'>\r\n                <div className='control buttons is-centered'>\r\n                    <button onClick={onCancel} disabled={loading} className={`button is-rounded is-uppercase is-dark is-outlined`} type='button'>\r\n                        <FaChevronLeft />&nbsp; Back\r\n                    </button>\r\n                    <button disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='submit'>\r\n                        <FaSignInAlt />&nbsp; Login\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { NotificationList } from '../components/notification'\r\nimport { PaymentList } from '../components/payment'\r\nimport { CardFragment } from \"../components/util\";\r\nimport { JobListItem, JobList, JobSideList, JobDetail, DUMMY_JOBS } from '../components/job';\r\nimport { UserList } from '../components/user';\r\nimport { CreateJob } from '../components/jobcreation';\r\nimport { AuthHandler } from '../components/guard';\r\nimport { VIEW_CONTEXT } from '../lib';\r\nimport { LoginView } from '../components/auth';\r\n\r\nexport function Login() {\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n    const [state, setState] = useState({ showModal: false })\r\n\r\n    useEffect(() => {\r\n        viewCTX.showToolbar(false)\r\n        viewCTX.showFooter(false)\r\n\r\n        return () => {\r\n            viewCTX.showToolbar(true)\r\n            viewCTX.showFooter(true)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <AuthHandler>\r\n            <div className='columns is-gapless is-fullheight is-multiline'>\r\n                <div className='column is-flex-centered is-atleast-fullheight'>\r\n                    <LoginView />\r\n                </div>\r\n                <div className='column is-6 is-hidden-touch is-flex has-background-info' />\r\n            </div>\r\n        </AuthHandler>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { NotificationList } from '../components/notification'\r\nimport { PaymentList } from '../components/payment'\r\nimport { CardFragment } from \"../components/util\";\r\nimport { JobListItem, JobList, JobSideList, JobDetail, DUMMY_JOBS } from '../components/job';\r\nimport { UserList } from '../components/user';\r\nimport { CreateJob } from '../components/jobcreation';\r\nimport { AuthHandler } from '../components/guard';\r\nimport { VIEW_CONTEXT } from '../lib';\r\nimport { RegisterView } from '../components/auth';\r\n\r\n\r\nexport function Register() {\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n    const [state, setState] = useState({ showModal: false })\r\n    const [formState, setFormState] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        password: '',\r\n        password_verify: '',\r\n        email: '',\r\n        phone_number: '',\r\n        showPassword: false,\r\n        showPasswordVerify: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        viewCTX.showToolbar(false)\r\n        viewCTX.showFooter(false)\r\n\r\n        return () => {\r\n            viewCTX.showFooter(true)\r\n            viewCTX.showToolbar(true)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <AuthHandler>\r\n            <div className='columns is-gapless is-fullheight is-multiline'>\r\n                <div className='column is-flex-centered is-atleast-fullheight'>\r\n                    <RegisterView />\r\n                </div>\r\n                <div className='column is-6 is-hidden-touch is-flex has-background-success' />\r\n            </div>\r\n        </AuthHandler>\r\n    )\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\r\n\r\nexport function Logout() {\r\n    const ctx = useContext(APPLICATION_CONTEXT)\r\n    const viewCTX = useContext(VIEW_CONTEXT)\r\n\r\n    useEffect(() => {\r\n        viewCTX.setAppReady(false)\r\n        viewCTX.showToolbar(false)\r\n        ctx.logout()\r\n\r\n        return () => {\r\n            viewCTX.showToolbar(true)\r\n            viewCTX.setAppReady(true)\r\n        }\r\n    }, [])\r\n\r\n    if (!viewCTX.signedIn) {\r\n        return <Redirect to={{ pathname: '/' }} />\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        viewCTX.signedIn ? <></> : <Redirect to={{ pathname: '/' }} />\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { APPLICATION_CONTEXT, DEFAULT_APPLICATION, VIEW_CONTEXT } from './lib';\r\nimport Toolbar from './components/toolbar';\r\nimport { Loading } from './components/util';\r\nimport { Footer } from './components/footer';\r\nimport { NotificationList } from './components/notification';\r\nimport { Switch, Route, useHistory, Redirect, useLocation } from 'react-router-dom';\r\nimport { Dashboard } from './pages/dashboard';\r\nimport links from './lib/links';\r\nimport { Jobs } from './pages/jobs';\r\nimport { Settings } from './pages/settings';\r\nimport { AuthGuard } from './components/guard';\r\nimport { User } from './lib/user';\r\nimport { Login } from './pages/login';\r\nimport { Register } from './pages/register';\r\nimport { Logout } from './pages/logout';\r\n\r\nfunction App() {\r\n  const ctx = useContext(APPLICATION_CONTEXT)\r\n  const [state, setState] = useState({ ready: false, })\r\n  const [showFooter, setShowFooter] = useState(true)\r\n  const [_showToolbar, showToolbar] = useState(true)\r\n  const [signedIn, setSignedIn] = useState<null | User>(null)\r\n\r\n\r\n  const viewContext = {\r\n    signedIn,\r\n    setSignedIn,\r\n    setAppReady: (ready) => setState({ ...state, ready }),\r\n    showToolbar,\r\n    showFooter: (showFooter) => setShowFooter(showFooter)\r\n  }\r\n\r\n  useEffect(() => {\r\n    ctx.loginListener = () => {\r\n      if (ctx.signedIn()) {\r\n        viewContext.setSignedIn(ctx.user as User)\r\n      }\r\n    }\r\n\r\n    ctx.logoutListener = () => viewContext.setSignedIn(null)\r\n\r\n    ctx.ready.then((ready) => {\r\n      if (!ready) {\r\n        return console.log('Failed to start application due to an internal error.', 'Please contact application admin')\r\n      }\r\n      setState({ ...state, ready: true })\r\n    })\r\n      .catch(e => {\r\n        console.log(e)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <VIEW_CONTEXT.Provider value={viewContext}>\r\n      {state.ready ?\r\n        <>\r\n          {_showToolbar ? <Toolbar /> : null}\r\n          <div className='App-Body'>\r\n            <div className='is-fullheight'>\r\n              <Switch>\r\n\r\n                <Route component={Login} path={links.login} exact />\r\n                <Route component={Register} path={links.register} exact />\r\n                <Route component={Logout} path={links.logout} exact />\r\n\r\n                <AuthGuard component={Settings} path={links.settings} />\r\n                <AuthGuard render={(props) => {\r\n                  return <Redirect to={{ pathname: links.activeJobs, state: props.location.state }} />\r\n                }} path={links.jobs} exact />\r\n                <AuthGuard component={Jobs} path={links.activeJobs} />\r\n                <AuthGuard component={Jobs} path={links.inactiveJobs} />\r\n                <AuthGuard component={Dashboard} path={links.dashboard} exact />\r\n\r\n                <Route path={links.home} strict={false} exact={true}>\r\n                  {ctx.signedIn() && viewContext.signedIn ? <Redirect to={links.dashboard} /> : <Redirect to={links.login} />}\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n          {showFooter ? <Footer /> : null}\r\n        </> :\r\n        <Loading />\r\n      }\r\n    </VIEW_CONTEXT.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie9\";\r\nimport 'react-app-polyfill/ie11'\r\nimport 'react-app-polyfill/stable'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { APPLICATION_CONTEXT, DEFAULT_APPLICATION } from \"./lib\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ToastProvider autoDismiss={5000} placement='top-center'>\r\n      <BrowserRouter>\r\n        <APPLICATION_CONTEXT.Provider value={DEFAULT_APPLICATION}>\r\n          <App />\r\n        </APPLICATION_CONTEXT.Provider>\r\n      </BrowserRouter>\r\n    </ToastProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}