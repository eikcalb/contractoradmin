{"version":3,"sources":["logo.svg","lib/config.ts","lib/storage.ts","lib/user.ts","lib/message.ts","lib/index.tsx","lib/links.ts","components/footer.tsx","components/guard.tsx","lib/theme.ts","components/toolbar.tsx","components/util.tsx","lib/firebase.ts","lib/job.ts","components/job.tsx","components/JobList.tsx","components/notification.tsx","components/payment.tsx","pages/dashboard.tsx","components/JobSideList.tsx","lib/location.ts","components/jobcreation.tsx","pages/jobs.tsx","components/auth.tsx","pages/login.tsx","pages/logout.tsx","pages/register.tsx","pages/settings.tsx","components/messages.tsx","pages/messages.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","CONFIG","name","description","version","hostname","KEYS","initializeStorage","app","a","lf","config","driver","INDEXEDDB","LOCALSTORAGE","WEBSQL","storeName","ready","localforage","User","data","raw","token","jobType","activeTask","lastPasswordChanged","this","profilePhoto","id","initiateNetworkRequest","method","referrerPolicy","headers","Authorization","response","ok","Error","json","message","jsonResponse","user","role","firstName","lastName","occupation","city","state","starRate","email","password","phoneNumber","profileBio","dateCreated","accountStatus","workHistory","educationalBackground","skills","licenses","first_name","last_name","star_rate","date_created","account_status","educational_background","phone_number","profile_photo","DUMMY_USER","Date","now","Message","content","sender","DEFAULT_SETTINGS","lastUserName","DEFAULT_APPLICATION","settings","logoutListener","loginListener","Promise","res","rej","init","console","log","getItem","appData","info","inflateUser","options","JSON","stringify","setItem","path","request","authenticated","reqObj","mode","Accept","fetch","resp","status","reauthenticate","logout","session","phone","trim","validator","isMobilePhone","startsWith","encodeURIComponent","valid","channel","body","username","code","validateLogin","success","getUser","userName","persistUser","matches","validateRegister","password_verify","isEmail","undefined","removeItem","APPLICATION_CONTEXT","createContext","VIEW_CONTEXT","setSignedIn","signedIn","setAppReady","showToolbar","show","showFooter","footer","active","inactive","Footer","ctx","useContext","className","getFullYear","to","links","AuthGuard","children","rest","viewCTX","location","useLocation","pathname","from","AuthHandler","timer","STYLES","toolbar","boxShadow","appLogoIcon","fontSize","marginRight","color","appLogoText","fontWeight","jobProgressBar","height","Toolbar","useState","showMenu","setState","style","aria-label","aria-expanded","data-target","onClick","clearTimeout","setTimeout","aria-hidden","exact","activeClassName","type","placeholder","Empty","icon","onDismiss","text","props","Loading","alignItems","padding","max","CardFragment","header","optionsElement","optionsText","onOptionsTextClick","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","geoFirestore","GeoFirestore","enablePersistence","synchronizeTabs","Job","types","doc","get","then","snap","exists","resolve","toLowerCase","update","FieldValue","arrayUnion","job","photos","posted_by","job_title","salary","wage","location_address","tasks","length","job_description","required_count","coordinates","GeoPoint","coords","latitude","longitude","newDoc","db","FormData","map","photo","append","apiResponse","photo_files","set","delete","limit","where","native","orderBy","jobs","forEach","item","push","callback","onSnapshot","err","added","modified","removed","docChanges","change","collection","JobListItem","time","moment","toDate","whiteSpace","textOverflow","overflow","job_type","flexDirection","flex","justifyContent","src","getJobPhotoURL","calendar","value","JobItem","endTime","toMillis","date_completed","overflowX","progress","JobDetail","onCancel","fill","width","JobDetailTask","onJobCancel","borderLeft","JobDetailUser","startTime","totalTime","loadingCancel","addToast","useToasts","unix","diff","useCallback","window","confirm","cancelJob","appearance","position","paddingTop","bottom","right","background","border","task","toFixed","alignSelf","disabled","generateUserJobType","toDateString","JobList","Array","loading","useEffect","listenForActiveJobs","docs","all","v","j","key","NotificationItem","notification","timestamp","title","notif","borderRadius","getNotificationIcon","maxLines","fromNow","NotificationList","expanded","setExpanded","size","transition","DUMMY_NOTIFICATIONS","n","CurrencyFormatter","Intl","NumberFormat","currency","maximumFractionDigits","PaymentItem","payment","format","cost","payee","getPaymentDescription","PaymentList","DUMMY_PAYMENTS","p","Dashboard","marginBottom","JobSideList","activeJobs","inactiveJobs","onCreateNew","borderRight","alert","overflowY","render","getCurrentLocation","navigator","geolocation","getCurrentPosition","enableHighAccuracy","maximumAge","FormField","label","onChange","tagifyRef","required","whitelist","tags","showBorder","containerClassName","isTextArea","maxLength","Number","MAX_SAFE_INTEGER","helpTextTop","helpTextLeft","helpTextRight","hasAddons","addon","autoComplete","enabled","rightKey","e","persist","target","inputMode","FileInput","onRemovePhoto","ref","useRef","el","files","i","multiple","accept","file","index","CreateJob","onClose","onComplete","address","requiredPersons","price","loadingTypes","fetchingLocation","manualAddress","setPhotos","useMemo","jobTypes","createRef","tagifyRef2","getJobTypes","tagify","current","dropdown","hide","call","onSubmit","stopPropagation","preventDefault","newJob","serverTimestamp","parse","parseInt","v4","accuracy","altitude","heading","altitudeAccuracy","speed","isEmpty","find","addJobType","addNewJob","borderBottom","zIndex","filter","_","Jobs","showModal","selected","setActive","setInactive","removeEscapeHandler","handler","ev","document","addEventListener","removeEventListener","useEscapeHandler","unsubscribe","getInactiveJobs","catch","useParams","activeMatch","useRouteMatch","strict","inactiveMatch","RegisterView","showCodeRequest","showPassword","showPasswordVerify","formState","setFormState","history","useHistory","addAdmin","margin","logo","LoginView","onSubmitCodeRequest","form","validateNumber","triggerVerification","onSubmitVerified","login","CodeRequestForm","LoginForm","intervalID","showOptions","hold","holdTimer","viewState","setView","onSubmitForm","counter","clearInterval","setInterval","pattern","minLength","Login","Logout","Register","SettingsDetail","Settings","flexGrow","LoginAndSecurity","PaymentMethods","LegalDocuments","editEmail","isLoadingEmail","contentEditable","borderTop","MessageListItem","author","profileImageURL","MessageList","DUMMY_MESSAGES","m","MessageDetail","contact","Messages","App","setShowFooter","_showToolbar","viewContext","Provider","component","Boolean","match","ReactDOM","StrictMode","autoDismiss","placement","basename","getElementById","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.aaecc3b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { Config } from \".\";\n\nconst CONFIG: Config = {\n    name: 'Gigchasers Admin',\n    description: 'Gigchasers admin dashboard',\n    version: '1.0',\n    hostname:'https://contractor-app-test-api.herokuapp.com/v1'\n}\n\nexport default CONFIG","import lf from \"localforage\";\nimport { Application } from \".\";\n\nexport const KEYS = {\n    USER_SESSION: 'app.user.session',\n    REFRESH_TOKEN: 'app.user.refreshtoken',\n    APP_DATA: 'app.data'\n}\n\nexport async function initializeStorage(app: Application) {\n    lf.config({\n        driver: [\n            lf.INDEXEDDB,\n            lf.LOCALSTORAGE,\n            lf.WEBSQL\n        ],\n        name: `${app.config.name} v${app.config.version}`,\n        version: 1,\n        storeName: 'adminstore',\n        description: 'Storage for Contractor application administrative interface'\n    })\n\n    await lf.ready()\n}\n\nexport const localforage = lf\n","import { IJobHistory } from \"./job\";\nimport { IEducationHistory, ILicense } from \"./education\";\nimport { Application } from \".\";\n\nexport const DUMMY_TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdlMDFmOTBiMjRmNzAwMTcyZmRkOTQiLCJlbWFpbCI6Inp6QGdtYWlsLmNvbSIsInBob25lX251bWJlciI6IisyMzQ4MDgzODIxNzgyIiwiaWF0IjoxNjE1NjYzNDQ4fQ.nHEwobqCa4yT1z27ydwpSHPg_6s4CEp1QarlJGU1HUo\"\nexport const DUMMY_TOKEN_SECRET = \"secret\"\n\nclass AppUser {\n    id\n    role: string\n    firstName: string\n    lastName: string\n    occupation: string\n    city: string\n    state: string\n    starRate: number = 5.0\n    email: string\n    password?: string\n    phoneNumber: string\n    profilePhoto: string\n    profileBio?: string\n    dateCreated?: Date\n    accountStatus: string = \"Pending\"\n    workHistory: IJobHistory[] = []\n    educationalBackground: IEducationHistory[] = []\n    skills: string[] = []\n    licenses: ILicense[] = []\n\n    constructor(data, raw?: boolean) {\n        if (raw) {\n            this.role = data.role\n            this.firstName = data.first_name\n            this.lastName = data.last_name\n            this.occupation = data.occupation\n            this.starRate = data.star_rate\n            this.dateCreated = data.date_created\n            this.city = data.city\n            this.email = data.email\n            this.accountStatus = data.account_status\n            this.educationalBackground = data.educational_background\n            this.phoneNumber = data.phone_number\n            this.profilePhoto = data.profile_photo\n            this.state = data.state\n            this.skills = data.skills\n        } else {\n            this.role = data.role\n            this.firstName = data.firstName\n            this.lastName = data.lastName\n            this.occupation = data.occupation\n            this.starRate = data.starRate\n            this.dateCreated = data.dateCreated\n            this.city = data.city\n            this.email = data.email\n            this.accountStatus = data.accountStatus\n            this.educationalBackground = data.educationalBackground\n            this.phoneNumber = data.phoneNumber\n            this.profilePhoto = data.profilePhoto\n            this.state = data.state\n            this.skills = data.skills\n        }\n        \n        this.id = data.id\n    }\n}\n\nexport class User extends AppUser {\n    get profileImageURL() {\n        return this.profilePhoto\n    }\n    token\n    jobType?: \"onsite\" | \"remote\"\n    activeTask\n    lastPasswordChanged?: number\n\n    constructor(data, raw?: boolean) {\n        super(data, raw)\n        this.token = data.token\n        this.jobType = data.jobType\n        this.activeTask = data.activeTask\n        this.lastPasswordChanged = data.lastPasswordChanged\n    }\n\n    /**\n     * \n     * @param app Application object\n     * @param id Identity of user whose detail will be fetched\n     * @param token Secret token obtained from logging into the application.\n     */\n    static async getUser(app: Application, id: string, token: string) {\n        try {\n            const response = await app.initiateNetworkRequest(`/users/${id}`, {\n                method: 'GET',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    Authorization: `Bearer ${token}`\n                },\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Failed to fetch user data!\")\n            }\n\n            const jsonResponse = await response.json()\n            const user = new User(jsonResponse, true)\n            user.id = id\n            user.token = token\n\n            return user\n\n        } catch (e) {\n            throw e\n        }\n    }\n\n\n    static async getUserData(app: Application, id: string) {\n        try {\n            const response = await app.initiateNetworkRequest(`/users/${id}`, {\n                method: 'GET',\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Failed to fetch user data!\")\n            }\n\n            const jsonResponse = await response.json()\n            const user = new User(jsonResponse, true)\n            user.id = id\n\n            return user\n\n        } catch (e) {\n            throw e\n        }\n    }\n}\n\nexport const DUMMY_USER: User = new User({})\n\nDUMMY_USER.firstName = \"Johnathan\"\nDUMMY_USER.lastName = \"Doe\"\nDUMMY_USER.id = 'unique'\nDUMMY_USER.email = 'a@example.com'\nDUMMY_USER.profileBio = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ullam vero iure, ducimus, explicabo vel nesciunt eveniet, enim quis quos ex autem!\"\nDUMMY_USER.jobType = 'onsite'\nDUMMY_USER.phoneNumber = '080838111111'\nDUMMY_USER.starRate = 4.2\nDUMMY_USER.lastPasswordChanged = Date.now()\nDUMMY_USER.dateCreated = new Date(\"20/07/2020\")\nDUMMY_USER.skills = ['Farming', 'Poultry']\n// DUMMY_USER.profileImageURL = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTv3f3Zf2onEOPtpRtWPoRX6SWQUSpV_GBB6Q&usqp=CAU\"\n","import React from \"react\";\n\nexport class Message {\n    content\n    sender\n\n    isSameUser(message: Message) {\n        return message.sender === this.sender\n    }\n\n\n    isSameDay(){\n        \n    }\n}\n","import { createContext } from \"react\"\nimport validator from \"validator\"\nimport { IRegister } from \"../components/auth\"\nimport CONFIG from \"./config\"\nimport { initializeStorage, KEYS, localforage } from \"./storage\"\nimport { DUMMY_USER, User } from \"./user\"\nimport { Message } from \"./message\";\n\ninterface ISettings {\n    lastUserName: string\n}\n\nconst DEFAULT_SETTINGS = {\n    lastUserName: ''\n}\n\nexport class Application {\n    config: Config\n    user?: User\n    ready: Promise<boolean>\n\n    protected settings: ISettings = DEFAULT_SETTINGS\n\n    logoutListener?: () => any\n    loginListener?: () => any\n\n    constructor(config: Config) {\n        this.config = config\n        this.ready = new Promise(async (res, rej) => {\n            try {\n                await this.init()\n                res(true)\n            } catch (e) {\n                // if an error occurred during initialization, throw the error and handle within the application\n                console.log(e)\n                return rej(e)\n            }\n        })\n    }\n\n    /**\n     * Initialize application dependencies.\n     * \n     * Dependencies that fail to load should fail silently at this stage, unless required for application to function.\n     */\n    async init() {\n        await initializeStorage(this)\n\n        try {\n            const appData: ISettings | null = await localforage.getItem(KEYS.APP_DATA)\n            if (appData) {\n                this.settings = appData\n            }\n        } catch (e) {\n            console.info(e, 'No app data persisted!')\n        }\n\n        // check for existing user session\n        try {\n            await this.inflateUser()\n            // If user session exists, trigger login listener\n            if (this.loginListener) {\n                this.loginListener()\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n        return true\n    }\n\n\n    signedIn(): boolean {\n        return this.user && this.user?.token\n    }\n\n\n    async updateSettings(options: Partial<ISettings>) {\n        if (!options) {\n            throw new Error('Empty options provided!')\n        }\n        if (JSON.stringify(options) === JSON.stringify(this.settings)) {\n            return\n        }\n\n        this.settings = {\n            ...this.settings,\n            ...options\n        }\n\n        return await localforage.setItem(KEYS.APP_DATA, this.settings)\n    }\n\n    async initiateNetworkRequest(path: string, request?: RequestInit, authenticated = false): Promise<Response> {\n        const reqObj: RequestInit = {\n            ...request,\n            referrerPolicy: 'no-referrer',\n            mode: 'cors',\n            headers: {\n                ...request?.headers,\n                Accept: 'application/json',\n                Authorization: authenticated ? `Bearer ${this.user?.token}` : request?.headers?.['Authorization'],\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const resp = await fetch(`${this.config.hostname}${path}`, reqObj)\n        if (resp.status === 401) {\n            if (!this.user) {\n                throw new Error(\"Unauthenticated access not allowed!\")\n            }\n            // Authorization failed. This usually means the token has expired and refresh token could not be used to regenerate token\n            //\n            // Try to reauthenticate the user\n            try {\n                const { token } = await this.reauthenticate()\n                this.user.token = token\n                // since token is generated already, retry the request\n                if (reqObj && reqObj.headers && reqObj.headers['Authorization']) {\n                    reqObj.headers['Authorization'] = `Bearer ${token}`\n                }\n                return await this.initiateNetworkRequest(path, reqObj)\n            } catch (e) {\n                await this.logout()\n                throw e || new Error(\"App session expired. Login to continue!\")\n            }\n        }\n        return resp\n    }\n\n    protected async reauthenticate(): Promise<{ token: string }> {\n        // No logic to reauthenticate. Throw error, forcing user to logout.\n        throw new Error(\"Failed to authenticate user!\")\n    }\n\n    protected async inflateUser() {\n        // inflate user session\n        let session: User | null = await localforage.getItem(KEYS.USER_SESSION)\n        if (!session) throw new Error(\"No session available for user!\")\n\n        this.user = new User(session)\n        return this.user\n    }\n\n    protected async persistUser() {\n        if (!this.user) {\n            throw new Error('No user created!')\n        }\n\n        await localforage.setItem(KEYS.USER_SESSION, this.user)\n    }\n\n    async validateNumber(phone: string) {\n        if (!phone) {\n            throw new Error(\"Phone number must be provided!\")\n        }\n        phone = phone.trim()\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n\n        const response = await this.initiateNetworkRequest(`/users/phone/${encodeURIComponent(phone)}`, {\n            method: 'GET',\n        })\n\n        if (!response.ok) {\n            throw new Error((await response.json())?.message || \"Verification failed!\")\n        }\n\n        const jsonResponse = await response.json()\n        if (!jsonResponse.valid) {\n            throw new Error('Invalid phone number (ensure phone number is associated with a user)!')\n        }\n\n        return true\n    }\n\n    async triggerVerification(phone: string, channel: string = 'sms') {\n        if (!phone) {\n            throw new Error(\"Phone number must be provided!\")\n        }\n        phone = phone.trim()\n\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n\n        const response = await this.initiateNetworkRequest('/users/sms_registration', {\n            method: 'POST',\n            body: JSON.stringify({ phone_number: phone, channel })\n        })\n        if (!response.ok) {\n            throw new Error((await response.json())?.message || \"Verification failed!\")\n        }\n\n        return true\n    }\n\n    async login(username, code, password) {\n        try {\n            await this.validateLogin(username, code, password)\n\n            const response = await this.initiateNetworkRequest('/users/login', {\n                method: 'POST',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({ phone_number: username, code, password })\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Login failed!\")\n            }\n\n            const jsonResponse = await response.json()\n            if (!jsonResponse.success) {\n                throw new Error(\"Login failed!\")\n            }\n            this.user = await User.getUser(this, jsonResponse.userName, jsonResponse.token)\n            if (this.user.role !== 'admin') {\n                // TODO: Decide the kind of users that can access this webapp\n                // throw new Error(\"Authenticated access only allowed for administrators!\")\n            }\n\n            await this.persistUser()\n            if (this.loginListener) {\n                this.loginListener()\n            }\n\n            return this.user\n\n        } catch (e) {\n            throw e\n        }\n    }\n\n    protected async validateLogin(phone: string, code: string, password: string) {\n        if (!phone || !password || !code) {\n            throw new Error(\"Credentials not provided!\")\n        }\n        phone = phone.trim()\n\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n        if (!validator.matches(password, /.{6,}/i)) {\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\n        }\n        if (!validator.matches(code, /[0-9]{4}/)) {\n            throw new Error(\"Invalid code provided (provided code must have 4 digits)!\")\n        }\n    }\n\n    // TODO\n    async addAdmin(data: IRegister) {\n        try {\n            await this.validateRegister(data)\n\n            const response = await this.initiateNetworkRequest('/users/new', {\n                method: 'POST',\n                body: JSON.stringify({\n                    ...data,\n                    role: 'admin',\n                    // TODO: change to 'pending'\n                    account_status: 'accepted'\n                })\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message)\n            }\n\n            const jsonResponse = await response.json()\n\n            return jsonResponse\n        } catch (e) {\n            throw e\n        }\n    }\n\n    protected async validateRegister(data: IRegister) {\n        let { email, password, first_name, last_name, password_verify, phone_number } = data\n        if (!email || !password) {\n            throw new Error(\"Credentials not provided!\")\n        }\n        if (password !== password_verify) {\n            throw new Error('Passwords do not match!')\n        }\n        email = email.trim()\n        first_name = first_name.trim()\n        last_name = last_name.trim()\n        if (!first_name || !last_name) {\n            throw new Error('Firstname and lastname must be provided!')\n        }\n        if (!email || !validator.isEmail(email)) {\n            throw new Error(\"Invalid username provided!\")\n        }\n        if (!phone_number || !validator.isMobilePhone(phone_number)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone_number.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n        if (!validator.matches(password, /.{6,}/i)) {\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\n        }\n    }\n\n\n    async logout() {\n        new Message()\n        this.user = undefined\n        await localforage.removeItem(KEYS.USER_SESSION)\n        //await localforage.removeItem(KEYS.REFRESH_TOKEN)\n        if (this.logoutListener) {\n            this.logoutListener()\n        }\n    }\n}\n\nexport const DEFAULT_APPLICATION = new Application(CONFIG)\nDEFAULT_APPLICATION.user = DUMMY_USER\n/**\n * This is the application context used within the web application.\n * \n * This context provided the application engine and is not tied to any view rendering.\n * \n * The underlying aplication object exposes the required functions and do not modify the view.\n * This underlying object is made available to all React components via the application context.\n * \n * All view rendering is managed in React.\n * \n * **VIEW RENDERING SHOULD NOT DEPEND ON ANY PROPERTY OF THIS CONTEXT**\n */\nexport const APPLICATION_CONTEXT = createContext<Application>(DEFAULT_APPLICATION)\n\n/**\n * This context is used for managing the views within the web app.\n * Activities such as loading and splashscreen are implemented using this context.\n */\nexport const VIEW_CONTEXT = createContext<{\n    setSignedIn: any,\n    signedIn: null | User,\n    setAppReady: any,\n    showToolbar: any,\n    showFooter: any\n}>({\n    setSignedIn: (signedIn) => { },\n    signedIn: null,\n    setAppReady: (ready: boolean) => { },\n    showToolbar: (show: boolean) => { },\n    showFooter: (footer) => { }\n})\n\nexport interface Config {\n    name: string\n    version: string\n    description: string\n    hostname: string\n}\n","export default {\n    register: '/register',\n    login: '/login',\n    messages: '/messages',\n    _messages: '/messages/:id?',\n    home: '/',\n    dashboard: '/dashboard',\n    invoices: '/invoices',\n    jobs: '/jobs',\n    activeJobs: '/jobs/active',\n    inactiveJobs: '/jobs/inactive',\n    _jobItem: {\n        active: '/jobs/active/:id?',\n        inactive: '/jobs/inactive/:id?'\n    },\n    privacyPolicy: '/privacyPolicy',\n    termsOfService: '/terms',\n    profile: '/profile',\n    helpCenter: '/help',\n    logout: '/logout',\n    settings: '/settings',\n    loginAndSecurity: '/settings',\n    paymentMethods: '/settings/payment',\n    additionalFeatures: '/settings/features',\n    legalDocuments: '/settings/legal'\n}","import React, { useContext } from \"react\";\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport links from '../lib/links'\nimport { Link } from \"react-router-dom\";\n\nexport function Footer() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    return (\n        <footer className='footer is-unselectable' >\n            <div className=\"content has-text-centered is-size-7-touch\">\n                <p>&copy; {ctx.config.name} {new Date().getFullYear()}. All Rights Reserved | <Link to={links.privacyPolicy}>Privacy Policy</Link> | <Link to={links.termsOfService}>Terms of Service</Link> </p>\n            </div>\n        </footer>\n    )\n}","import React, { useContext } from \"react\"\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from \"../lib\"\nimport { Redirect, Route, useLocation, useHistory, RouteProps } from \"react-router-dom\"\nimport links from \"../lib/links\"\n\n/**\n * HOC (high order component) for rendering private views only if the user is authenticated.\n * \n * @param children View to render if authenticated\n */\nexport function AuthGuard({ children, ...rest }: RouteProps) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const location = useLocation()\n\n    return (\n        <Route {...rest}>\n            {ctx.signedIn() && viewCTX.signedIn ? (\n                children\n            ) : (\n                    <Redirect to={{\n                        pathname: links.login,\n                        state: {\n                            from: location\n                        }\n                    }} />\n                )\n            }\n        </Route>\n    )\n}\n\n/**\n * HOC for rendering components based on the authenticated state of the application.\n * This HOC is used for conditionally rendering authentication views (like login pages) or redirect if the user is already authenticated.\n * \n * @param children View to render\n */\nexport function AuthHandler({ children }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const location = useLocation()\n\n    if (ctx.signedIn() && viewCTX.signedIn) {\n        const { from } = (location.state as any) || { from: { pathname: '/' } }\n        return <Redirect to={from} />\n    } else {\n        return children\n    }\n}","import React from 'react'\n\nexport const STYLES: { [key: string]: React.CSSProperties } = {\n    toolbar: {\n        boxShadow: \"-2px 2px 3px 0px #8888\",\n        // background: \"#282c34\",\n    },\n    appLogoIcon: {\n        fontSize: '2em',\n        marginRight: '.5em',\n        color: 'blue'\n    },\n    appLogoText: {\n        fontSize: '1.2em',\n        fontWeight: 'bold'\n    },\n    jobProgressBar:{\n        height:'.4em'\n    }\n}","import React, { useState, useContext, useCallback } from 'react'\nimport { STYLES } from '../lib/theme'\nimport { FaJoint, FaUser, FaContao, FaCog, FaSearch } from \"react-icons/fa\";\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\nimport { Link, NavLink } from 'react-router-dom';\nimport links from '../lib/links';\n\n\nconst AUTOHIDE_TIMEOUT = 20000\nlet timer: any\n// TODO: build your own toolbar styling.\n\nexport default function Toolbar() {\n    const [state, setState] = useState({ showMenu: false })\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const vctx = useContext(VIEW_CONTEXT)\n    const toggleMenu = () => {\n        // Clear the existing timer for closing menu and then hide/show the menu\n        clearTimeout(timer)\n        if (state.showMenu) {\n            setState({ ...state, showMenu: false })\n        } else {\n            setState({ ...state, showMenu: true })\n            timer = setTimeout(() => {\n                setState({ ...state, showMenu: false })\n            }, AUTOHIDE_TIMEOUT)\n        }\n    }\n\n    return (\n        <nav className='navbar' role='navigation' style={STYLES.toolbar} aria-label='main navigation'>\n            <div className='navbar-brand'>\n                <Link className='navbar-item' to={links.home}>\n                    <FaContao style={STYLES.appLogoIcon} />\n                    <span style={STYLES.appLogoText}>{ctx.config.name}</span>\n                </Link>\n                <a role=\"button\" className={`navbar-burger burger ${state.showMenu ? 'is-active' : ''}`} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbar\" onClick={toggleMenu}>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n            <div className={`navbar-menu ${state.showMenu ? 'is-active' : ''}`} >\n                <div className='navbar-start'>\n                    <NavLink to={links.dashboard} exact activeClassName='is-active' className='navbar-item is-tab'>Dashboard</NavLink>\n                    <NavLink to={links.messages} activeClassName='is-active' className='navbar-item is-tab'>Messages</NavLink>\n                    <NavLink to={links.invoices} activeClassName='is-active' className='navbar-item is-tab'>Invoices</NavLink>\n                    <NavLink to={links.jobs} activeClassName='is-active' className='navbar-item is-tab'>Jobs</NavLink>\n                </div>\n                <div className='navbar-end'>\n                    <div className='navbar-item'>\n                        <div className='field'>\n                            <p className='control has-icons-left'>\n                                <input className='input is-rounded' type='search' placeholder='Type to search...' />\n                                <span className='icon is-small is-left'><FaSearch className='is-size-5' /></span>\n                            </p>\n                        </div>\n                    </div>\n                    <div className='navbar-item has-dropdown is-hoverable'>\n                        <span className='navbar-link'>\n                            {`${ctx.user?.firstName} ${ctx.user?.lastName}`}\n                        </span>\n                        <div className='navbar-dropdown'>\n                            <Link to={links.profile} className='navbar-item'>Profile</Link>\n                            <Link to={links.helpCenter} className='navbar-item'>Help Center</Link>\n                            <Link to={links.logout} className='navbar-item'>Sign Out</Link>\n                        </div>\n                    </div>\n                    <div className='navbar-item'>\n                        <Link to={links.settings} className='button is-rounded is-light is-fullwidth'><FaCog /></Link>\n                    </div>\n                </div>\n            </div>\n        </nav >\n    )\n}","import React, { ReactChild } from 'react'\nimport { FaExclamationCircle } from 'react-icons/fa';\n\nexport function Empty({ content, icon, onDismiss, text, ...props }: { text?: string, content?: ReactChild, icon?: ReactChild, onDismiss?: any, children?: ReactChild }) {\n    return (\n        <div className='notification px-4 is-light is-uppercase is-warning has-text-centered'>\n            {!!onDismiss && <button onClick={onDismiss} className='delete'></button>}\n            {icon ? icon :\n                <FaExclamationCircle className='has-text-warning-dark is-size-4 mb-2' />\n            }\n            {props.children ?\n                props.children :\n                content ? content :\n                    <p className='block has-text-grey is-size-7'>{text || 'No data'}</p>\n            }\n        </div>\n    )\n}\n\nexport function Loading() {\n    return (\n        <section className='hero is-fullheight is-bold is-flex-centered' style={{ alignItems: 'stretch', padding: '2em' }}>\n            <div className='hero-body is-flex-centered has-text-centered'>\n                <div className='column is-4 is-12-mobile'>\n                    <div className='section px-6'>\n                        <progress className=\"progress is-small is-danger\" max=\"100\">loading</progress>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport function CardFragment({ header, optionsElement, optionsText, onOptionsTextClick, children, style }: { header: string, optionsElement?: React.ReactChild, optionsText?: any, onOptionsTextClick?: any, children?: any, style?: React.CSSProperties }) {\n    return (\n        <div className=\"card\" style={style}>\n            <header className='card-header'>\n                <p className='card-header-title'>{header}</p>\n                <p className='card-header-icon'>\n                    {optionsElement ?\n                        optionsElement :\n                        <span className='has-text-link' onClick={onOptionsTextClick}>\n                            {optionsText}\n                        </span>\n                    }\n                </p>\n            </header>\n            <div className='card-content'>\n                <div className='container is-fluid px-0'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport function debounce(func, wait: number, immediate: boolean = false) {\n    var timeout;\n    return async (...args) => {\n        var later = async () => {\n            timeout = null;\n            if (!immediate) return func(...args)\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) return func(...args)\n    };\n};\n\nexport async function wait(duration = 5000) {\n    await new Promise((res) => {\n        setTimeout(res, duration)\n    })\n}\n\nexport const useEscapeHandler = (callback: any) => {\n    const handler = (ev: KeyboardEvent) => {\n        if (ev.key === 'Escape') {\n            callback()\n        }\n    }\n    window.document.addEventListener('keydown', handler)\n    return () => window.document.removeEventListener('keydown', handler)\n}","import firebase from \"firebase/app\";\n// Required for side-effects\nimport \"firebase/firestore\";\nimport { GeoFirestore } from \"geofirestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjXx1AqIQnkyKkCPh8HZKZYyiKGfiLcbc\",\n  authDomain: \"contracting-app.firebaseapp.com\",\n  databaseURL: \"https://contracting-app.firebaseio.com\",\n  projectId: \"contracting-app\",\n  storageBucket: \"contracting-app.appspot.com\",\n  messagingSenderId: \"557426956160\",\n  appId: \"1:557426956160:web:c1393a9710ed0e40151365\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore(),\n  geoFirestore = new GeoFirestore(firestore)\n\n  firestore.enablePersistence({\n    synchronizeTabs:true\n  })","import { geoFirestore } from \"./firebase\";\nimport firebase from 'firebase'\nimport { useCallback } from \"react\";\nimport { User } from \"./user\";\nimport { Application } from \".\";\n\nexport interface IJob {\n    id\n    coordinates: firebase.firestore.GeoPoint\n    date_completed: firebase.firestore.Timestamp | null\n    date_created: firebase.firestore.Timestamp\n    g: any\n    executed_by: string\n    job_title: string\n    job_description: string\n    job_type: string\n    location: {\n        coords: {\n            accuracy: number\n            altitude: number\n            altitudeAccuracy: number\n            heading: number\n            latitude: number\n            longitude: number\n            speed: number\n        }\n        timestamp\n    }\n    location_address: any\n    posted_by: string\n    salary: number\n    star_rate: number | null\n    status: \"available\" | \"in review\" | \"accepted\" | \"in progress\" | \"complete\"\n    tasks: { id: string, text: string }[]\n    wage: \"hr\"\n    required_count: number\n    progress?: number\n    user?: User\n}\n\nexport interface IJobHistory {\n    employer_name: string\n    employer_phone_number: string\n    employer_address: string\n    supervisor_name?: string\n    supervisor_title?: string\n    user_position_title?: string\n    date_started: Date\n    date_ended: Date\n    actual_job?: boolean\n    salary?: string\n    wage?: string\n    description?: string\n}\n\nexport class Job {\n    private static db = geoFirestore.collection('jobs')\n    private static types = geoFirestore.collection('types')\n\n    static async getJobTypes(app: Application) {\n        return Job.types.doc('jobs').get().then(async snap => {\n            let types\n            if (snap.exists) {\n                types = snap.data()!.types\n            }\n            return Promise.resolve(types || [])\n        })\n    }\n\n    static async addJobType(app: Application, type: string) {\n        type = type.toLowerCase()\n        return Job.types.doc('jobs').update({\n            types: firebase.firestore.FieldValue.arrayUnion(type)\n        })\n    }\n\n    static async addNewJob(app: Application, job, photos: File[] = []) {\n        if (!job.posted_by || !job.job_title || !job.salary || !job.wage || !job.location || !job.location_address) {\n            throw new Error('Complete all required fields to continue!')\n        }\n        if (job.tasks.length < 1) {\n            throw new Error('You must add at least 1 task for this job!')\n        }\n        if (job.job_title.length < 8 || job.job_description.length < 20) {\n            throw new Error(\"Kindly enter a more meaningful title and description!\")\n        }\n        if (job.required_count < 1) {\n            throw new Error(\"Provide the number of people you require for this job!\")\n        }\n        if (job.salary < 0) {\n            throw new Error(\"Salary must be more than 0!\")\n        }\n\n        job.coordinates = new firebase.firestore.GeoPoint(job.location.coords.latitude, job.location.coords.longitude)\n\n        const newDoc = Job.db.doc()\n        let photo_files\n\n        if (photos && photos.length > 0) {\n            // If photo is selected, add the photo\n            const body = new FormData()\n            photos.map((photo) => {\n                body.append(\"photo\", photo);\n            })\n            const apiResponse = await app.initiateNetworkRequest(`/job/upload`, {\n                method: \"POST\",\n                headers: {\n                    \"x-job-id\": newDoc.id,\n                },\n                body,\n            }, true)\n\n            if (!apiResponse.ok) {\n                throw new Error((await apiResponse.json()).message || \"Failed to upload job\");\n            }\n\n            photo_files = (await apiResponse.json()).data;\n        }\n\n        job.id = newDoc.id\n        return newDoc.set({ ...job, photo_files })\n    }\n\n    static async cancelJob(job: IJob) {\n        if (job.status === 'complete') {\n            throw new Error('You cannot cancel a completed job!')\n        }\n        await Job.db.doc(job.id).delete()\n        return true\n    }\n\n    static async getInactiveJobs(limit = 20) {\n        return Job.db.where('status', '==', \"complete\").native.orderBy('date_created', 'desc').limit(limit).get().then(async snap => {\n            const jobs: IJob[] = []\n            snap.forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                jobs.push(item)\n            })\n            return Promise.resolve(jobs)\n        })\n    }\n\n    static async getActiveJobs(limit = 20) {\n        return Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"]).native.orderBy('date_created', 'desc').limit(20).get().then(async snap => {\n            const jobs: IJob[] = []\n            snap.forEach(async doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                jobs.push(item)\n            })\n            return Promise.resolve(jobs)\n        })\n    }\n\n    static listenForActiveJobs(callback) {\n        const unsubscribe = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"]).limit(6).onSnapshot(async snap => {\n            const jobs: IJob[] = [];\n            (snap.native as firebase.firestore.QuerySnapshot).forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                jobs.push(item)\n            })\n            console.log(jobs)\n            callback(null, jobs)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n\n    static listenForActiveJobsWithChangeHandler({ added, modified, removed }: {\n        added: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any,\n        modified: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any,\n        removed: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any\n    }) {\n        const unsubscribe = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"]).limit(6).onSnapshot(async snap => {\n            (snap.native as firebase.firestore.QuerySnapshot).docChanges().forEach(change => {\n                switch (change.type) {\n                    case 'added':\n                        added(change.doc)\n                        break\n                    case 'modified':\n                        modified(change.doc)\n                        break\n                    case 'removed':\n                        removed(change.doc)\n                        break\n                }\n            })\n        })\n\n        return unsubscribe\n    }\n\n    static getJobPhotoURL(app: Application, job: IJob) {\n        return `${app.config.hostname}/images/${job.posted_by}.jpg`\n    }\n}","import moment, { unix } from 'moment'\nimport React, { useCallback, useState, useContext } from 'react'\nimport { FaExpandAlt, FaStar, FaMapMarkerAlt, FaGlobeAfrica, FaClipboardList, FaHardHat } from 'react-icons/fa'\nimport { GrUserWorker } from \"react-icons/gr\";\nimport { NavLink } from 'react-router-dom'\nimport { STYLES } from '../lib/theme'\nimport { DUMMY_USER, User } from '../lib/user'\nimport { IJob, Job } from '../lib/job'\nimport firebase from \"firebase\";\nimport { useToasts } from 'react-toast-notifications';\nimport { wait } from './util';\nimport { APPLICATION_CONTEXT } from '../lib';\n\nexport function JobListItem({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    const time = moment(job.date_created.toDate())\n    return (\n        <div className='card'>\n            <div className='card-content'>\n                <div className='columns mb-0'>\n                    <div className='column is-6 has-text-centered-touch has-text-left'>\n                        <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_title}</p>\n                    </div>\n                    <div className='column has-text-centered-touch has-text-right'>\n                        <p>{job.location_address}</p>\n                    </div>\n\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left'>\n                        <p>{job.job_type}</p>\n                    </div>\n                </div>\n            </div>\n            <div className='card-footer'>\n                <div className='card-footer-item'>\n                    <div className='columns px-4 is-vcentered is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\n                        <div className='column is-12'>\n                            <div className='columns is-vcentered is-mobile'>\n                                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                                    <figure className='image is-flex is-32x32'>\n                                        <img className='is-rounded' src={Job.getJobPhotoURL(ctx, job)} />\n                                    </figure>\n                                </div>\n                                <div className='column is-narrow'>\n                                    <div className='title is-6'>{`${job.user?.firstName} ${job.user?.lastName}`}</div>\n                                </div>\n                                <div className='column has-text-right'>\n                                    {time.calendar()}\n                                </div>\n                            </div>\n                        </div>\n                        <div className='column is-12'>\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={0} max=\"100\">{0}</progress>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport function JobItem({ job, to }: { job: IJob, to: any }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    const time = moment(job.date_created.toMillis())\n    let endTime\n    if (job.date_completed) endTime = moment(job.date_completed.toMillis())\n\n    return (\n        <NavLink activeClassName=\"is-active\" to={to} style={{ overflowX: 'auto' }} className={`job-item mb-8 is-block card is-shadowless has-background-white-ter`}>\n            <div className='card-content'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-6 has-text-centered-touch has-text-left'>\n                            <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_title}</p>\n                        </div>\n                        <div className='column has-text-centered-touch has-text-right'>\n                            <p>{job.location_address}</p>\n                        </div>\n                    </div>\n                    <div className='columns is-vcentered is-mobile'>\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                            <figure className='image is-flex is-48x48'>\n                                <img className='is-rounded' src={Job.getJobPhotoURL(ctx, job)} />\n                            </figure>\n                        </div>\n                        <div className='column is-narrow'>\n                            <div className='title is-6'>{`${job.user?.firstName || 'John'} ${job.user?.lastName || \"Doe\"}`}</div>\n                        </div>\n                        <div className='column has-text-right'>\n                            {time.calendar()}\n                        </div>\n                    </div>\n                    <div className='content'>\n                        <p>{job.job_description}</p>\n                    </div>\n                </div>\n                <div className='columns px-4 pt-4 is-vcentered is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\n                    <div className='column is-12'>\n                        {job.progress && job.progress >= 100 ? (\n                            <p>Completed {endTime.calendar()}</p>\n                        ) :\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={job.progress || 0} max=\"100\">{job.progress}</progress>\n                        }\n                    </div>\n                </div>\n            </div>\n        </NavLink >\n    )\n}\n\nexport function JobDetail({ job, className, onCancel }: { onCancel: (job: IJob) => any, job: IJob | null, className?: string }) {\n    if (!job) {\n        return (\n            <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n                <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\n                    <span className='my-4' ><FaHardHat fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                    <p className='is-uppercase is-size-6 has-text-weight-bold'>View and manage job listings</p>\n                </div>\n            </div>\n        )\n    }\n    const time = moment(job.date_created.toMillis())\n\n    return (\n        <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n            <div className='card-content is-paddingless'>\n                <div className='level py-4 mb-0'>\n                    <div className='level-item is-size-6'>POSTED {time.calendar()}</div>\n                    <div className='level-item is-size-4 has-text-weight-bold'>{job.job_title}</div>\n                    <div className='level-item is-size-6 has-text-grey'>{job.id}</div>\n                </div>\n                <div className='container is-fluid px-0'>\n                    <div className='columns is-fullheight mx-0 my-0 is-multiline'>\n                        <div className='column is-8-fullhd is-7-desktop is-12 px-0 pt-0'>\n                            <JobDetailTask onJobCancel={onCancel} job={job} />\n                        </div>\n                        <div style={{borderLeft:'solid 1px #8881'}} className='column is-4-fullhd is-5-desktop is-12 is-flex'>\n                            <JobDetailUser job={job} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function JobDetailTask({ job, onJobCancel }: { job: IJob, onJobCancel }) {\n    const [state, setState] = useState({ loadingCancel: false })\n    const { addToast } = useToasts()\n\n    let endTime, startTime, totalTime\n    if (job.date_completed) endTime = unix(job.date_completed.toMillis() / 1000)\n    if (job.date_created) startTime = unix(job.date_created.toMillis() / 1000)\n    if (endTime && startTime) totalTime = endTime.diff(startTime, 'h', true)\n\n    const onCancel = useCallback(async () => {\n        try {\n            const confirmed = window.confirm(\"Are you sure you want to cancel this job?\")\n            if (!confirmed) {\n                return\n            }\n\n            setState({ ...state, loadingCancel: true })\n            await Job.cancelJob(job)\n            addToast('Cancelled job successfully!', { appearance: 'success' })\n            onJobCancel(job)\n        } catch (e) {\n            addToast(e.message || 'Failed to cancel job!', { appearance: 'error' })\n        } finally {\n            setState({ ...state, loadingCancel: false })\n        }\n    }, [job, state])\n\n    return (\n        <div className='is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\n            <figure className='image is-16by9' style={{ position: 'relative', paddingTop: '30%' }}>\n                <img src={'https://via.placeholder.com/728x90.png'} />\n                <a className='button is-large' style={{ position: 'absolute', bottom: 4, right: 4, background: 'transparent', border: 0 }}>\n                    <span className='icon is-size-2'><FaExpandAlt /></span>\n                </a>\n            </figure>\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\n                <div className='section'>\n                    <table className='table is-hoverable is-fullwidth'>\n                        <tbody>\n                            <tr>\n                                <td className=' has-text-right'>LOCATION</td>\n                                <td className=' has-text-left'>{job.location_address}</td>\n                            </tr>\n                            <tr>\n                                <td className=' has-text-right'>DESCRIPTION</td>\n                                <td className=' has-text-left'>{job.job_description}</td>\n                            </tr>\n                            <tr>\n                                <td className=' has-text-right'>PAY</td>\n                                <td className=' has-text-left'>{job.salary} <span className='has-text-grey is-size-7'>/{job.wage}</span></td>\n                            </tr>\n                            <tr>\n                                <td className=' has-text-right'>TASKS</td>\n                                <td className=' has-text-left'>\n                                    {job.tasks && job.tasks.length > 1 ? job.tasks?.map(task => <p>- {task.text}</p>) : `-`}\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=' has-text-right'> START</td>\n                                <td className='has-text-left'>{startTime.calendar() || `-`}</td>\n                            </tr>\n                            <tr>\n                                <td className=' has-text-right'>END</td>\n                                <td className=' has-text-left'>{endTime?.calendar() || `-`}</td>\n                            </tr>\n                            <tr>\n                                <td className=' has-text-right'>TOTAL TIME</td>\n                                <td className=' has-text-left'>{totalTime?.toFixed(2) || `-`}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                {job.progress && job.progress >= 100 ? (\n                    <button className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-end' }}>View Invoice</button>\n                ) :\n                    <button disabled={state.loadingCancel} onClick={onCancel} className={`button is-white is-uppercase is-inverted mx-4 ${state.loadingCancel ? 'is-loading' : ''}`} style={{ alignSelf: 'flex-start', color: 'white' }}>Cancel Job</button>\n                }\n            </div>\n        </div >\n    )\n}\n\nexport function JobDetailUser({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    let startTime\n    if (job.date_created) startTime = moment(job.date_created.toMillis())\n\n    return (\n        <div className='container pt-4 pb-0 is-flex' style={{ flexDirection: 'column' }} >\n            <div className='columns is-vcentered'>\n                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                    <figure className='image is-80x80 is-flex'>\n                        <img className='is-rounded' src={Job.getJobPhotoURL(ctx, job)} />\n                    </figure>\n                </div>\n                <div className='column'>\n                    <div className='container'>\n                        <div className='columns is-marginless is-vcentered is-mobile'>\n                            <div className='column pb-0 pl-0'>\n                                <p className='is-size-5 has-text-left has-text-weight-bold'>{`${job.user?.firstName || \"John\"} ${job.user?.lastName || 'Doe'}`}</p>\n                            </div>\n                            <div className=\"column has-text-right pr-0 pb-0 is-size-6\">View Profile</div>\n                        </div>\n                        <div className='content has-text-left'>\n                            <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate} &nbsp;{generateUserJobType(DUMMY_USER)}</p>\n                            <p>{job.user?.profileBio}</p>\n                            <p className='has-text-right'><span className='is-uppercase has-text-grey-light is-size-7'>member since</span> {job.user?.dateCreated?.toDateString()}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\n                <table className='table is-hoverable is-fullwidth'>\n                    <tbody>\n                        <tr>\n                            <td className='has-text-right'>CONTACT</td>\n                            <td className='has-text-left'>{job.user?.phoneNumber}</td>\n                        </tr>\n                        {/* <tr>\n                            <td className='has-text-right'>ACTIVE TASK</td>\n                            <td className='has-text-left'>{job.user?.activeTask}</td>\n                        </tr> */}\n                        <tr>\n                            <td className='has-text-right'>START TIME</td>\n                            <td className='has-text-left'>{startTime.calendar()}</td>\n                        </tr>\n                        <tr>\n                            <td className='has-text-right'>HIGHLIGHTED SKILLS AND LICENSES</td>\n                            <td className='has-text-left'>\n                                {job.user?.skills && job.user.skills.length > 1 ? job.user.skills?.map(task => <p>- {task}</p>) : `-`}\n                            </td>\n\n                        </tr>\n                    </tbody>\n                </table>\n                <button className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-start' }}>Message</button>\n            </div>\n        </div>\n    )\n}\n\nexport function generateUserJobType(user: User) {\n    switch (user.jobType) {\n        case 'onsite':\n            return <><span className='icon has-text-info'><FaMapMarkerAlt /></span> On Site</>\n        case 'remote':\n            return <><span className='icon has-text-info'><FaGlobeAfrica /></span> Remote</>\n    }\n}\n\nexport interface IJobSample {\n    user: User\n    timestamp: number\n    title: string\n    description: string\n    location: string\n    progress?: number\n    startTime?: number\n    endTime?: number\n    tasks?: string[]\n    fullLocation?: string\n    id\n}\n\nexport const DUMMY_JOBS: IJobSample[] = [\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        progress: 80,\n        tasks: [],\n        id: 'papdsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdefvzsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 99,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 20,\n        id: 'padpp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 90,\n        id: 'papdvp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        id: 'papdfp'\n    }\n]\n\nexport const DUMMY_COMPLETED: IJobSample[] = [\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n]","import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DUMMY_USER } from '../lib/user';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { Job, IJob } from '../lib/job';\nimport { useToasts } from 'react-toast-notifications';\nimport { JobListItem } from './job';\n\nexport function JobList({ className }: { className?: string; }) {\n    const ctx = useContext(APPLICATION_CONTEXT);\n    const [state, setState] = useState({ jobs: new Array<IJob>(), loading: false });\n\n    const { addToast } = useToasts();\n\n    useEffect(() => {\n        setState({ ...state, loading: true });\n        const unsubscribe = Job.listenForActiveJobs(async (err, docs: IJob[]) => {\n            if (err) {\n                setState({ ...state, loading: false });\n                return addToast(err.message || 'Failed to get jobs!');\n            }\n            docs = await Promise.all(\n                docs.map(async (v) => {\n                    v.user = DUMMY_USER;\n                    return v;\n                })\n            );\n            setState({ ...state, jobs: docs, loading: false });\n        });\n\n        return unsubscribe;\n    }, []);\n\n    return (\n        <div className={className}>\n            {state.loading ?\n                <progress className=\"progress is-small is-info my-6\" max=\"100\">loading</progress>\n                : state.jobs.map(j => (\n                    <Link key={j.id} to={`/${j.id}`} className='column is-4-fullhd is-6-desktop is-12-touch list-item'>\n                        <JobListItem job={j} />\n                    </Link>\n                ))}\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport { FaSearch, FaMapMarkerAlt, FaCheckSquare, FaCheck, FaCaretUp, FaCaretDown } from 'react-icons/fa'\nimport moment from \"moment\";\nimport { Link, NavLink } from 'react-router-dom';\nimport { Empty } from './util';\n\nexport function NotificationItem({ notification }: { notification: INotification }) {\n    const time = moment.unix(notification.timestamp / 1000)\n    return (\n        <div className='container is-fluid is-paddingless list-item py-2' title={notification.title}>\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\n                <div className='column is-paddingless is-6 has-text-left has-text-centered-mobile  list-item-title'>\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{getNotificationIcon(notification)} {notification.title}</p>\n                </div>\n                <div className='column is-paddingless has-text-right has-text-centered-mobile list-item-subtitle'>\n                    <p style={{ maxLines: 2 }}>{time.fromNow()}</p>\n                </div>\n            </div>\n            <div className='content'>\n                <p>\n                    {notification.content}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport function getNotificationIcon(notif: INotification) {\n    switch (notif.type) {\n        case 'discovery':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaSearch /> </span>\n        case 'location':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaMapMarkerAlt /> </span>\n        case 'progress':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaCheck /> </span>\n    }\n}\n\nexport function NotificationList({ className }) {\n    const [expanded, setExpanded] = useState(true)\n\n    return (\n        <nav className={className}>\n            <div className='panel is-clipped' >\n                <div onClick={() => setExpanded(!expanded)} className='panel-heading has-text-left has-background-white-bis is-align-items-center is-flex is-flex-direction-row is-justify-content-space-between'>\n                    <p>Notifications</p>\n                    <button className='button is-static has-background-white is-rounded is-small'>\n                        {!expanded ?\n                            <FaCaretUp size={16} className={`icon has-text-black is-small`} />\n                            :\n                            <FaCaretDown size={16} className={`icon has-text-black is-small`} />}\n                    </button>\n                </div>\n                <div style={{ transition: \"all 0.500s linear\" }} className={`${!expanded ? 'is-height-0' : ''}`}>\n                    {DUMMY_NOTIFICATIONS.length > 0 ?\n                        DUMMY_NOTIFICATIONS.map(n => (\n                            <Link key={n.id} to={`/f`} className='panel-block'>\n                                <NotificationItem notification={n} />\n                            </Link>\n                        ))\n                        :\n                        <Empty text='No Notification available' />\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport interface INotification {\n    content: string\n    timestamp\n    type: 'discovery' | 'location' | 'progress'\n    title: string\n    id: string\n}\n\nconst DUMMY_NOTIFICATIONS: INotification[] = [\n    {\n        content: 'testing 123',\n        timestamp: Date.now(),\n        type: 'discovery',\n        title: 'testing notification',\n        id: '23xe'\n    },\n    {\n        content: 'testing 12',\n        timestamp: Date.now(),\n        type: 'location',\n        title: 'testing notification',\n        id: '23xe'\n    },\n    {\n        title: 'testing 1',\n        timestamp: Date.now(),\n        type: 'progress',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    },\n    {\n        title: 'testing 1',\n        timestamp: Date.now(),\n        type: 'location',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    },\n    {\n        title: 'testing 1',\n        timestamp: Date.now(),\n        type: 'discovery',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    }\n]","import React, { useState } from 'react'\nimport moment from 'moment'\nimport { FaCaretDown, FaCaretUp } from \"react-icons/fa\";\nimport { NavLink, Link } from 'react-router-dom'\nimport { Empty } from './util';\n\nconst CurrencyFormatter = Intl.NumberFormat('en-US', { currency: 'USD', style: 'currency', maximumFractionDigits: 2 })\n\nexport function PaymentItem({ payment }: { payment: IPayment }) {\n    const time = moment.unix(payment.timestamp / 1000)\n\n    return (\n        <div className='container is-fluid is-paddingless list-item py-2' title={payment.title}>\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\n                <div className='column is-paddingless is-6 has-text-left has-text-centered-mobile list-item-title'>\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{payment.title}</p>\n                </div>\n                <div className='column is-paddingless has-text-right has-text-centered-mobile list-item-subtitle'>\n                    <p>{time.fromNow()}</p>\n                </div>\n            </div>\n            <div className='content'>\n                <p>\n                    {getPaymentDescription(payment)}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport function PaymentList({ className }) {\n    const [expanded, setExpanded] = useState(true)\n\n    return (\n        <nav className={className} >\n            <div className='panel is-clipped'>\n                <div onClick={() => setExpanded(!expanded)} className='panel-heading has-text-left has-background-white-bis is-align-items-center is-flex is-flex-direction-row is-justify-content-space-between'>\n                    <p>Payments</p>\n                    <button className='button is-static has-background-white is-rounded is-small'>\n                        {!expanded ?\n                            <FaCaretUp size={16} className={`icon has-text-black is-small`} />\n                            :\n                            <FaCaretDown size={16} className={`icon has-text-black is-small`} />}\n                    </button>\n                </div>\n                <div style={{ transition: \"all 0.500s linear\" }} className={`${!expanded ? 'is-height-0' : ''}`}>\n                    {DUMMY_PAYMENTS.length > 0 ?\n                        DUMMY_PAYMENTS.map(p => (\n                            <Link to={`/ f`} key={p.id} className='panel-block'>\n                                <PaymentItem payment={p} />\n                            </Link>\n                        ))\n                        :\n                        <Empty text='No Payment data available' />\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport interface IPayment {\n    type: 'pending' | 'paid'\n    timestamp\n    cost: number\n    title\n    payee\n    id: string\n}\n\nexport function getPaymentDescription(payment: IPayment): string {\n    switch (payment.type) {\n        case 'pending':\n            return `You have a pending charge of ${CurrencyFormatter.format(payment.cost)} for the completion of this job by ${payment.payee}`\n        case 'paid':\n            return `A payment of ${CurrencyFormatter.format(payment.cost)} has been submitted to ${payment.payee}`\n    }\n}\n\n\nexport const DUMMY_PAYMENTS: IPayment[] = [\n    {\n        type: 'pending',\n        timestamp: Date.now(),\n        cost: 20.405,\n        title: 'Clear lawn',\n        payee: 'Philip Barnabas',\n        id: '2ss354'\n    },\n    {\n        type: 'paid',\n        timestamp: Date.now(),\n        cost: 200.405,\n        title: 'Clear lawn and take out firewood',\n        payee: 'Philip Barnabas',\n        id: '23sss54'\n    },\n    {\n        type: 'pending',\n        timestamp: Date.now(),\n        cost: 3000.405,\n        title: 'Clear lawn',\n        payee: 'Philip Barnabas',\n        id: '235s4'\n    }\n]","import React from 'react';\nimport { JobList } from \"../components/JobList\";\nimport { NotificationList } from '../components/notification';\nimport { PaymentList } from '../components/payment';\nimport { UserList } from '../components/user';\nimport { CardFragment } from \"../components/util\";\nimport { Link } from 'react-router-dom';\nimport links from '../lib/links';\n\nexport function Dashboard() {\n    return (\n        <div className='columns is-1 is-variable px-3 py-3 is-atleast-fullheight'>\n            <NotificationList className='column is-3 is-2-widescreen' />\n            <div className='column is-6 is-8-widescreen is-flex' style={{ flexDirection: 'column', justifyContent: 'space-between' }}>\n                <CardFragment header='Active Jobs' optionsElement={<Link to={links.activeJobs}>View All</Link>} style={{ marginBottom: '0.8em' }}>\n                    <JobList className={'columns is-multiline is-1 is-variable'} />\n                </CardFragment>\n            </div>\n            <PaymentList className='column is-3 is-2-widescreen' />\n        </div>\n    )\n}","import React from 'react';\nimport { BsPencilSquare } from \"react-icons/bs\";\nimport { FaSearch } from 'react-icons/fa';\nimport { GoSettings } from \"react-icons/go\";\nimport { NavLink, Route } from 'react-router-dom';\nimport links from '../lib/links';\nimport { JobItem } from './job';\n\nexport function JobSideList({ className, activeJobs, inactiveJobs, onCreateNew }) {\n    return (\n        <div className={`${className} panel job-panel has-background-white-ter is-flex`}>\n            <div className='panel-heading is-flex is-vcentered'>\n                <p className='has-text-left'>Job Listings</p>\n                <a className='button is-rounded' onClick={onCreateNew}><BsPencilSquare /></a>\n            </div>\n            <div className='panel-block'>\n                <div className='field has-addons' style={{ flex: 1 }}>\n                    <div className='control is-expanded has-icons-left'>\n                        <input style={{ borderRight: 0 }} className='input is-rounded' type='search' placeholder='Search Jobs...' />\n                        <span className='icon is-left'><FaSearch /></span>\n                    </div>\n                    <div className='control'>\n                        <button style={{ borderLeft: 0 }} className='button is-rounded' onClick={() => window.alert(\"not ready yet!\")} >\n                            <span className='icon is-right'><GoSettings /></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className='panel-tabs'>\n                <NavLink to={`${links.activeJobs}`} activeClassName='is-active'>Active</NavLink>\n                <NavLink to={`${links.inactiveJobs}`} activeClassName='is-active'>Inactive</NavLink>\n            </div>\n            <div className='has-background-white-ter' style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n                <Route path={`${links.activeJobs}`} render={() => activeJobs.map(j => <JobItem key={j.id} job={j} to={`${links.activeJobs}/${j.id}`} />)} />\n                <Route path={`${links.inactiveJobs}`} render={() => inactiveJobs.map(j => <JobItem key={j.id} job={j} to={`${links.inactiveJobs}/${j.id}`} />)} />\n            </div>\n        </div>\n    );\n}\n","// Check geolocation exists\nexport function isGeoLocationSupported() {\n    return 'geolocation' in navigator\n}\n\nexport function getCurrentLocation(): Promise<Position> {\n    return new Promise((res, rej) => {\n        if (!isGeoLocationSupported()) {\n            throw new Error('Geolocation is not supported! Cannot find current location!')\n        }\n\n        navigator.geolocation.getCurrentPosition(res, rej, {\n            enableHighAccuracy: true,\n            maximumAge: 1000\n        })\n    })\n}","import Tags from \"@yaireo/tagify/dist/react.tagify\";\nimport React, { useState, useCallback, useMemo, useContext, useEffect, useLayoutEffect, createRef, Ref, useRef } from 'react';\nimport { FaChevronLeft, FaMapMarkerAlt, FaSearch, FaUpload } from 'react-icons/fa';\nimport { useToasts } from 'react-toast-notifications';\nimport { debounce } from \"./util\";\nimport { Job, IJob } from \"../lib/job\";\nimport firebase from 'firebase'\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport validator from \"validator\";\nimport { getCurrentLocation } from \"../lib/location\";\nimport { v4 } from \"uuid\";\n\n/**\n * Component for creating a form field.\n * \n * @param param Object containing parameters to build the input field\n */\nexport function FormField({ label, value, onChange, className, type, placeholder, icon, tagifyRef = null as any, required = false, whitelist = [] as any[], mode = 'select', disabled = false, loading = false, tags = false, showBorder = true, containerClassName = '', isTextArea = false, maxLength = Number.MAX_SAFE_INTEGER, helpTextTop = \"\", helpTextLeft = \"\", helpTextRight = \"\", hasAddons = false, addon = <></> }) {\n    return (\n        <div className={`${containerClassName} ${showBorder ? 'job-form-field' : ''} field has-text-left`}>\n            <label className='label is-flex' style={{ justifyContent: 'space-between' }}><span>{label}</span> <span className='has-text-right has-text-weight-normal is-size-7'>{helpTextTop}</span></label>\n            {!hasAddons ?\n                <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\n                    {isTextArea ?\n                        tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode: null,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                inputMode='textarea'\n                                className={`${className}`}\n                                loading={loading}\n                                maxLength={maxLength}\n                                required={required}\n                                disabled={disabled}\n                                onChange={e => (onChange(e.target.value))}\n                            />\n                            :\n                            <textarea required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} className={`${className} textarea`} maxLength={maxLength} placeholder={placeholder} />\n                        :\n                        tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                required={required}\n                                className={`${className} input`}\n                                loading={loading}\n                                disabled={disabled}\n                                onChange={e => (e.persist(), onChange(e.target.value))}\n                            />\n                            :\n                            <input required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} />\n                    }\n                    {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\n                </div>\n                :\n                <div className={`${hasAddons ? 'has-addons' : ''} field`}>\n                    <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\n                        {tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                required={required}\n                                className={`${className} input`}\n                                disabled={disabled}\n                                loading={loading}\n                                onChange={e => (e.persist(), onChange(e.target.value))}\n                            />\n                            :\n                            <input required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} style={{ borderRight: 0 }} />\n                        }\n                        {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\n                    </div>\n                    {addon}\n                </div>\n            }\n            <div className='help'>\n                <div className='container'>\n                    <div className='columns'>\n                        {helpTextLeft ? <p className='column has-text-left has-text-centered-touch'>{helpTextLeft} </p> : null}\n                        {helpTextRight ? <p className='column has-text-right has-text-centered-touch'>{helpTextRight} </p> : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function FileInput({ disabled, value, onChange, onRemovePhoto }) {\n    const ref = useRef<HTMLInputElement>(null)\n\n    return (\n        <div className='field job-form-field has-text-left my-4'>\n            <label className='label is-flex' style={{ justifyContent: 'space-between' }}><span>Job Photos</span> <span className='has-text-right has-text-weight-normal is-size-7'>Add photos to help describe this job</span></label>\n            <div className='control is-expanded'>\n                <div className='file is-flex is-centered is-normal'>\n                    <label className='file-label is-flex-grow-1'>\n                        <input onChange={(el) => {\n                            if (el.target.files) {\n                                const files: File[] = []\n                                for (let i = 0; i < el.target.files?.length; i++) {\n                                    files.push(el.target.files[i])\n                                }\n                                if (files.length > 0) {\n                                    onChange(files)\n                                }\n                            }\n                        }} className='file-input' multiple ref={ref} disabled={disabled} type='file' accept='image/*' />\n                        <span className='file-cta is-flex is-flex-centered' style={{ width: '100%' }}>\n                            <span className='file-icon'>\n                                <FaUpload />\n                            </span>\n                            <span className='file-label'>\n                                SELECT PHOTOS\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                {value && value.length > 0 ?\n                    <div className='field is-grouped is-grouped-multiline'>\n                        {value.map((file: File, index) =>\n                            <div className='control mr-2 my-2 '>\n                                <div className='tags has-addons'>\n                                    <span key={`${file.name}-${file.size}-${index}`} className='tag is-dark'>{file.name}</span>\n                                    <button onClick={() => { onRemovePhoto(index) }} className='tag is-delete'></button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    : null}\n            </div>\n        </div>\n    )\n}\n\nexport function CreateJob({ onClose, show, onComplete }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        loading: false,\n        tasks: '',\n        type: '',\n        title: '',\n        description: '',\n        address: '',\n        requiredPersons: '',\n        price: '',\n        loadingTypes: true,\n        fetchingLocation: false,\n        manualAddress: false,\n        location: null as any,\n    })\n    const [photos, setPhotos] = useState([] as File[])\n    const { addToast } = useToasts()\n    const types = useMemo(() => {\n        return {\n            jobTypes: new Array<string>(),\n            location: [],\n        }\n    }, [])\n    const tagifyRef = createRef(), tagifyRef2 = createRef()\n\n\n    // const _search = debounce(async (ctx, cb) => {\n    //     try {\n    //         const jobTypes = types.allJobTypes.filter(type=>type)\n    //         return cb(null, jobTypes)\n    //     } catch (e) {\n    //         cb(e, null)\n    //     }\n    // }, 500)\n\n    useEffect(() => {\n        new Promise(async () => {\n            try {\n                types.jobTypes = await Job.getJobTypes(ctx)\n                const tagify: any = tagifyRef.current\n                console.log(tagifyRef)\n                if (tagify) {\n                    tagify.settings.whitelist.length = 0; // reset current whitelist\n                    tagify.loading(true).dropdown.hide.call(tagify)\n                    tagify.settings.whitelist.push(...types.jobTypes, ...tagify.value)\n                    tagify.loading(false).dropdown.hide.call(tagify, tagify.value);\n\n                    (tagifyRef.current as any).settings.whitelist = types.jobTypes\n                }\n                console.log(types.jobTypes, 'job types fetched')\n            } catch (e) {\n                console.log(e)\n                addToast('Failed to load job types!', { appearance: 'error' })\n            }\n        })\n    }, [])\n\n\n    return (\n        <form className={`modal ${show ? 'is-active' : ''}`} onSubmit={async (e) => {\n            e.stopPropagation()\n            e.preventDefault()\n            // TODO: handle processing before complete\n            setState({ ...state, loading: true })\n            try {\n                const newJob = {\n                    date_created: firebase.firestore.FieldValue.serverTimestamp(),\n                    job_title: state.title,\n                    job_type: JSON.parse(state.type)[0].value.toLowerCase(),\n                    posted_by: ctx.user?.id,\n                    salary: parseInt(state.price, 10),\n                    required_count: parseInt(state.requiredPersons, 10),\n                    wage: 'hr',\n                    status: 'available',\n                    tasks: JSON.parse(state.tasks).map(v => ({ id: v4(), text: v.value })),\n                    location_address: state.address,\n                    location: state.location ? {\n                        coords: {\n                            latitude: state.location.coords.latitude,\n                            longitude: state.location.coords.longitude,\n                            accuracy: state.location.coords.accuracy,\n                            altitude: state.location.coords.altitude,\n                            heading: state.location.coords.heading,\n                            altitudeAccuracy: state.location.coords.altitudeAccuracy,\n                            speed: state.location.coords.speed,\n                        }, timestamp: state.location.timestamp\n                    } : undefined,\n                    job_description: state.description\n                }\n                if (newJob.job_type && !validator.isEmpty(newJob.job_type) && !types.jobTypes.find(type => type === newJob.job_type)) {\n                    // Job type is new. \n                    // Add to the list of job types.\n                    await Job.addJobType(ctx, newJob.job_type)\n                }\n\n                await Job.addNewJob(ctx, newJob, photos)\n                setState({ ...state, loading: false })\n                addToast(\"Successfully added job!\", { appearance: 'success' })\n                onComplete()\n            } catch (e) {\n                console.log(e);\n                setState({ ...state, loading: false })\n                addToast(e.message || \"Failed to add job!\", { appearance: 'error' })\n            }\n        }}>\n            <div className='modal-background'></div>\n            <div className='modal-card'>\n                <header className='modal-card-head'>\n                    <div className='modal-card-title is-mobile is-vcentered columns'>\n                        <div className='column has-text-left'>\n                            <button className='button' onClick={onClose}><span className='icon'><FaChevronLeft /></span><span className='is-hidden-mobile'> View Current Jobs</span></button>\n                        </div>\n                        <div className='column has-text-left-mobile is-10-mobile'>\n                            <span>New Job Listing</span>\n                        </div>\n                        <a className='column is-hidden-mobile'></a>\n                    </div>\n                </header>\n                <div className='modal-card-body px-0'>\n                    <div className='container'>\n                        <div className='level px-4 pb-4' style={{ borderBottom: 'solid 1px #1112' }}>\n                            <p className='level-item has-text-left is-block is-size-4 has-text-centered-touch'>Job Details</p>\n                            <p className='level-item has-text-right is-block has-text-grey-light has-text-centered-touch'>All fields are required to be filled out</p>\n                        </div>\n                        <div className='container is-fluid pb-4 px-0'>\n                            <div className='columns mx-0 px-4'>\n                                <div className='column is-6'>\n                                    <FormField required disabled={state.loading} value={state.type} tagifyRef={tagifyRef} tags whitelist={types.jobTypes} onChange={(type) => setState((state) => ({ ...state, type }))} className='' containerClassName='mb-4' label=\"Job Type\" placeholder='Begin typing a job type' type='text' icon={<FaSearch />} helpTextLeft='Search and select a job type to improve search results when finding a contractor' />\n                                    <FormField required disabled={state.loading} value={state.title} onChange={(title) => setState({ ...state, title })} className='' containerClassName='my-4' label=\"Title\" placeholder='Provide a title for the job' type='text' icon={null} helpTextLeft='Will be seen by contractors in search result and as an active status' helpTextRight='Maximum 30 characters' maxLength={30} />\n                                    <FormField required disabled={state.loading} value={state.description} onChange={(description) => setState({ ...state, description })} className='' containerClassName='my-4' label=\"Description\" isTextArea placeholder='Provide a description of the job' type='text' icon={null} helpTextLeft='Give a short description to improve finding a contractor that fits the job' helpTextRight='Maximum 80 characters' maxLength={80} />\n                                    <FormField required disabled={state.loading || state.fetchingLocation} value={state.address} tagifyRef={tagifyRef2} tags={!state.manualAddress} whitelist={types.location} onChange={(address) => setState((state) => ({ ...state, address }))} className='' containerClassName='my-4' label=\"Location Address\" placeholder='Begin typing the first line of the address' type='text' icon={<FaMapMarkerAlt />}\n                                        hasAddons addon={(\n                                            <div className='control'>\n                                                <button disabled={state.loading || state.fetchingLocation} className={`button has-background-white ${state.fetchingLocation ? 'is-loading' : ''} ${state.manualAddress ? 'is-info has-text-white' : ''}`} onClick={async () => {\n                                                    const manualAddress = !state.manualAddress\n                                                    if (manualAddress) {\n                                                        setState({ ...state, fetchingLocation: true })\n                                                        try {\n                                                            setState({ ...state, location: await getCurrentLocation() })\n                                                            addToast(\"Using your current location!\", { appearance: 'success' })\n                                                            setState((state) => ({ ...state, address: '', manualAddress, fetchingLocation: false }))\n                                                        } catch (e) {\n                                                            console.log(e);\n                                                            setState((state) => ({ ...state, fetchingLocation: false }))\n                                                            addToast(e.message || \"Failed to set location manually!\", { appearance: 'error' })\n                                                        }\n                                                    } else {\n                                                        setState((state) => ({ ...state, location: null, manualAddress }))\n                                                    }\n                                                }} type='button' style={{ color: 'black', borderLeft: 0, zIndex: 4 }}><span className='is-size-7'>or use current location</span></button>\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n                                <div className='column is-6'>\n                                    <FormField required disabled={state.loading} value={state.requiredPersons} onChange={(requiredPersons) => setState({ ...state, requiredPersons })} hasAddons className='' containerClassName='mb-4' label=\"How many persons are needed for the job\"\n                                        placeholder='How many persons are needed for the job'\n                                        type='number' helpTextRight='e.g. 10 persons maximum per job'\n                                        icon={null}\n                                        addon={(\n                                            <div className='control'>\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Persons</button>\n                                            </div>\n                                        )}\n                                    />\n                                    <FormField required disabled={state.loading} value={state.price} onChange={(price) => setState({ ...state, price })} hasAddons className='' containerClassName='my-4' label=\"Pay\"\n                                        placeholder='Provide an amount'\n                                        type='number' helpTextLeft='Will be seen in search results. Cannot be adjusted once the listing is pending or active'\n                                        icon={null}\n                                        addon={(\n                                            <div className='control'>\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Per Deployment</button>\n                                            </div>\n                                        )}\n                                    />\n                                    <FormField required disabled={state.loading} value={state.tasks} tags onChange={(tasks) => setState((state) => ({ ...state, tasks }))} isTextArea className='' containerClassName='my-4' label=\"Tasks\" placeholder='Add a task' type='text' icon={null} helpTextTop='Provide each task required to be completed for this listing' helpTextRight='Separate each task with a comma (,)' />\n\n                                    <FileInput disabled={state.loading} value={photos} onRemovePhoto={(i) => { setPhotos(photos.filter((_, index) => index !== i)) }} onChange={(photos) => setPhotos(photos)} />\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <footer className='modal-card-foot is-flex-centered'>\n                    <button disabled={state.loading} className='button' onClick={onClose}>Cancel</button>\n                    <button disabled={state.loading} className={`button is-info ${state.loading ? 'is-loading' : ''}`} type='submit'>Confirm</button>\n                </footer>\n            </div>\n        </form>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { NotificationList } from '../components/notification'\nimport { PaymentList } from '../components/payment'\nimport { CardFragment, useEscapeHandler } from \"../components/util\";\nimport { JobListItem, JobDetail, DUMMY_JOBS } from '../components/job';\nimport { JobSideList } from \"../components/JobSideList\";\nimport { JobList } from \"../components/JobList\";\nimport { UserList } from '../components/user';\nimport { CreateJob } from '../components/jobcreation';\nimport { IJob, Job } from '../lib/job';\nimport { useToasts } from 'react-toast-notifications';\nimport { DUMMY_USER } from '../lib/user';\nimport { useParams, useRouteMatch, useLocation } from 'react-router-dom';\nimport links from '../lib/links';\n\nexport function Jobs() {\n    const [state, setState] = useState({ loading: false, showModal: false, selected: null as null | IJob })\n    const [active, setActive] = useState([] as IJob[])\n    const [inactive, setInactive] = useState([] as IJob[])\n    const { addToast } = useToasts()\n    const location = useLocation()\n\n    const removeEscapeHandler = useEscapeHandler(() => setState({ ...state, showModal: false }))\n\n    useEffect(() => {\n        return removeEscapeHandler()\n    }, [])\n\n    useEffect(() => {\n        setState({ ...state, loading: true });\n        const unsubscribe = Job.listenForActiveJobs(async (err, docs: IJob[]) => {\n            if (err) {\n                setState({ ...state, loading: false });\n                return addToast(err.message || 'Failed to get jobs!');\n            }\n            docs = await Promise.all(\n                docs.map(async (v) => {\n                    v.user = DUMMY_USER;\n                    return v;\n                })\n            );\n            setState({ ...state, loading: false });\n            setActive(docs)\n        })\n\n        Job.getInactiveJobs().then(jobs => {\n            setInactive(jobs)\n        }).catch(e => {\n            console.log(e)\n            addToast(e.message || \"Failed to get inactive jobs\", {\n                appearance: 'error'\n            })\n        })\n\n        return unsubscribe;\n    }, []);\n\n    const { id } = useParams()\n    const activeMatch = useRouteMatch({\n        path: links._jobItem.active,\n        strict: true,\n        exact: true\n    })\n    const inactiveMatch = useRouteMatch({\n        path: links._jobItem.inactive\n    })\n\n    useEffect(() => {\n        if (id) {\n            if (activeMatch) {\n                const selected = active.find(v => v.id === id)\n                console.log(id, 'active: ', activeMatch, inactiveMatch, 'selected: ', selected)\n                setState({ ...state, selected: selected || null })\n            } else if (inactiveMatch) {\n                const selected = inactive.find(v => v.id === id)\n                setState({ ...state, selected: selected || null })\n            }\n        }\n    }, [location, active, inactive])\n\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <JobSideList activeJobs={active} inactiveJobs={inactive} onCreateNew={() => setState({ ...state, showModal: true })} className='column is-3 is-12-touch is-clipped is-fullheight' />\n            <JobDetail onCancel={(job: IJob) => {\n                if (job.status === 'complete') {\n                    setInactive(inactive.filter(v => v.id !== job.id))\n                } else {\n                    setActive(active.filter(v => v.id !== job.id))\n                }\n                setState({ ...state, selected: null })\n            }}\n                job={id ? state.selected : null} className='column is-9 is-12-touch is-flex' />\n            {state.showModal ?\n                <CreateJob show={state.showModal} onClose={() => setState({ ...state, showModal: false })} onComplete={() => {\n                    setState({ ...state, showModal: false })\n                }} />\n                : null}\n        </div>\n    )\n}","import React, { useCallback, useContext, useState } from 'react';\nimport { FaAngleDoubleRight, FaChevronLeft, FaEnvelope, FaEye, FaEyeSlash, FaKey, FaPhoneAlt, FaSignInAlt, FaSms, FaUser, FaUserPlus } from 'react-icons/fa';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\nimport links from '../lib/links';\nimport logo from \"../logo.svg\";\n\nexport interface IRegister {\n    first_name: string,\n    last_name: string,\n    password: string,\n    password_verify: string,\n    email: string,\n    phone_number: string,\n}\n\nexport interface ILogin {\n    code: string,\n    phone_number: string,\n    password: string,\n    showPassword: boolean,\n    loading?: boolean\n}\n\nexport function RegisterView() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        showModal: false,\n        showCodeRequest: true,\n        showPassword: false,\n        showPasswordVerify: false,\n        loading: false,\n    })\n    const [formState, setFormState] = useState<IRegister>({\n        email: '',\n        first_name: '',\n        last_name: '',\n        password: '',\n        password_verify: '',\n        phone_number: ''\n    })\n\n    const { addToast } = useToasts()\n    const history = useHistory()\n    const location = useLocation()\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        setState({ ...state, loading: true })\n\n        try {\n            const response = await ctx.addAdmin(formState)\n\n            if (!response || !response.success) {\n                throw new Error('Failed to register user!')\n            }\n            addToast('User registered successfully!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false })\n            history.push(links.login, location.state)\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Failed to add new user!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n        }\n    }, [state, formState])\n\n\n    return (\n        <div className='section'>\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\n                <img src={logo} className='is-rounded' />\n            </figure>\n\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\n\n            <form className='my-2' onSubmit={onSubmit}>\n                <div className='field is-horizontal'>\n                    <div className='field-body'>\n                        <div className='field'>\n                            <div className='control has-icons-left '>\n                                <input autoComplete=\"given-name\" disabled={state.loading} required value={formState.first_name} onChange={(e) => setFormState({ ...formState, first_name: e.target.value })} placeholder='enter firstname...' className='input' type='text' />\n                                <span className='icon is-left is-small'><FaUser /></span>\n                            </div>\n                        </div>\n                        <div className='field'>\n                            <div className='control has-icons-left '>\n                                <input autoComplete=\"family-name\" disabled={state.loading} required value={formState.last_name} onChange={(e) => setFormState({ ...formState, last_name: e.target.value })} placeholder='enter lastname...' className='input' type='text' />\n                                <span className='icon is-left is-small'><FaUser /></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='field'>\n                    <div className='control has-icons-left '>\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.email} onChange={(e) => setFormState({ ...formState, email: e.target.value })} placeholder='enter your email address...' className='input' type='email' />\n                        <span className='icon is-left is-small'><FaEnvelope /></span>\n                    </div>\n                </div>\n\n                <div className='field'>\n                    <div className='control has-icons-left '>\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.phone_number} onChange={(e) => setFormState({ ...formState, phone_number: e.target.value })} placeholder='enter your phone number include the \"+\" sign...' className='input' type='tel' />\n                        <span className='icon is-left is-small'><FaPhoneAlt /></span>\n                    </div>\n                </div>\n\n                <div className='field is-horizontal'>\n                    <div className='field-body'>\n                        <div className='field has-addons'>\n                            <div className='control has-icons-left is-expanded'>\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password} onChange={(e) => setFormState({ ...formState, password: e.target.value })} placeholder='enter your password...' className='input' type={state.showPassword ? 'text' : 'password'} />\n                                <span className='icon is-left is-small'><FaKey /></span>\n                            </div>\n                            <div className='control'>\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\n                                </button>\n                            </div>\n                        </div>\n\n                        <div className='field has-addons'>\n                            <div className='control has-icons-left is-expanded'>\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password_verify} onChange={(e) => setFormState({ ...formState, password_verify: e.target.value })} placeholder='re-enter your password...' className='input' type={state.showPasswordVerify ? 'text' : 'password'} />\n                                <span className='icon is-left is-small'><FaKey /></span>\n                            </div>\n                            <div className='control'>\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPasswordVerify: !state.showPasswordVerify })}>{state.showPasswordVerify ? <FaEyeSlash /> : <FaEye />}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className='field mt-6'>\n                    <div className='control'>\n                        <button disabled={state.loading} className={`button is-rounded is-fullwidth is-uppercase is-success ${state.loading ? 'is-loading' : ''}`} type='submit'>\n                            <FaUserPlus />&nbsp; Register\n                    </button>\n                    </div>\n                </div>\n            </form>\n\n            <div className='section mt-6 is-size-7'>\n                <p>Already have an account?</p>\n                <Link to={links.login}>Click here to login</Link>\n            </div>\n        </div>\n    )\n\n}\n\n\nexport function LoginView() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({\n        showCodeRequest: true,\n        loading: false,\n        phone: ''\n    })\n\n    const { addToast } = useToasts()\n\n\n    /**\n     * Called to verify the user's number and send OTP through specified channel.\n     */\n    const onSubmitCodeRequest = useCallback(async (form: { phone: string, channel: 'sms' | 'call' }) => {\n        setState({ ...state, loading: true })\n\n        try {\n            // Check if number exists in database\n            await ctx.validateNumber(form.phone)\n            // Generate OTP code for provided number\n            const done = await ctx.triggerVerification(form.phone, form?.channel)\n\n            if (!done) {\n                throw new Error('Failed to verify phone number!')\n            }\n\n            addToast('Verification code sent to your phone!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false, phone: form.phone })\n            return true\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Verification failed!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n            return false\n        }\n    }, [state])\n\n    /**\n     * Called to login to application after the OTP has been received and inputted in the form.\n     */\n    const onSubmitVerified = useCallback(async (form: ILogin) => {\n        setState({ ...state, loading: true })\n\n        try {\n            const user = await ctx.login(form.phone_number, form.code, form.password)\n\n            if (!user) {\n                throw new Error('Failed to login!')\n            }\n\n            addToast('Login successful!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false, })\n            return true\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Login failed!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n            return false\n        }\n    }, [state])\n\n\n    return (\n        <div className='section'>\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\n                <img src={logo} className='is-rounded' />\n            </figure>\n\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\n\n            {state.showCodeRequest ? (\n                <CodeRequestForm onComplete={() => setState({ ...state, showCodeRequest: false })} loading={state.loading} onSubmit={onSubmitCodeRequest} />\n            ) : (\n                    <LoginForm onCancel={() => setState({ ...state, showCodeRequest: true })} loading={state.loading} phone={state.phone} onSubmit={onSubmitVerified} />\n                )}\n\n            <div className='section mt-6 is-size-7'>\n                <p>Are you a new user?</p>\n                <Link to={links.register}>Request access</Link>\n            </div>\n        </div>\n    )\n}\n\n\nfunction CodeRequestForm({ onSubmit, loading, onComplete }) {\n    const [state, setState] = useState({\n        phone: '',\n        channel: 'sms'\n    })\n    const [viewState, setView] = useState({\n        showOptions: false,\n        hold: false,\n        holdTimer: 0,\n    })\n\n    let intervalID\n\n    const onSubmitForm = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        // Trigger code to be sent. `success` decides if the code was successfully triggered.\n        const success = await onSubmit(state)\n        if (success) {\n            let counter = 59\n\n            clearInterval(intervalID)\n            intervalID = setInterval(() => {\n                if (counter === 0) {\n                    clearInterval(intervalID)\n                    setView({ ...viewState, hold: false, showOptions: true, holdTimer: counter })\n                    return\n                }\n                setView({ ...viewState, hold: true, holdTimer: counter, showOptions: true, })\n                counter--\n            }, 1000)\n        }\n    }, [state, viewState])\n\n    return (\n        <form onSubmit={onSubmitForm}>\n            <div className='field'>\n                <div className='control has-icons-left '>\n                    <input autoComplete=\"off\" disabled={loading || viewState.hold} required value={state.phone} onChange={(e) => setState({ ...state, phone: e.target.value })} placeholder='enter your phone number...' className='input is-rounded' type='tel' />\n                    <span className='icon is-left is-small'><FaPhoneAlt /></span>\n                </div>\n\n            </div>\n            <div className='field mt-4'>\n                <div className='control'>\n                    {viewState.showOptions ?\n                        (\n                            <button onClick={onComplete} disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='button'>\n                                <FaAngleDoubleRight />&nbsp; Proceed\n                            </button>\n                        ) : (\n                            <button disabled={loading || viewState.hold} className={`button is-rounded is-uppercase is-info ${loading ? 'is-loading' : ''}`} type='submit'>\n                                {state.channel === 'sms' ? <><FaSms />&nbsp; Send Code</> : <><FaPhoneAlt />&nbsp; Call Me</>}\n                            </button>\n                        )\n                    }\n                </div>\n            </div>\n\n            <div className='field is-size-7'>\n\n                {viewState.showOptions ? (\n                    <>\n                        <p className='help mt-4 mb-2'>Didn't get code? {viewState.hold ? <span className='has-text-danger'>Try again in: {viewState.holdTimer}s</span> : null}</p>\n                        <div className='control buttons has-addons is-centered'>\n                            <button onClick={() => {\n                                setView({ ...viewState, showOptions: false })\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\n                                <span className='is-size-7'>Try Again</span>\n                            </button>\n                            <button onClick={() => {\n                                setState({ ...state, channel: state.channel === 'sms' ? 'call' : 'sms' })\n                                setView({ ...viewState, showOptions: false })\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\n                                <span className='is-size-7'> {state.channel === 'sms' ? \"Use voice\" : \"Use SMS\"}</span>\n                            </button>\n                        </div>\n                    </>\n                ) : null}\n            </div>\n\n        </form>\n    )\n}\n\n\nfunction LoginForm({ phone, loading, onSubmit, onCancel }) {\n    const [state, setState] = useState<ILogin>({\n        code: '',\n        phone_number: phone,\n        password: '',\n        showPassword: false,\n    })\n\n    const onSubmitForm = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        await onSubmit(state)\n    }, [state])\n\n    return (\n        <form onSubmit={onSubmitForm} >\n            <div className='field'>\n                <div className='control has-icons-left'>\n                    <input autoComplete=\"off\" disabled required value={state.phone_number} placeholder='enter your phone number...' className='input' type='tel' />\n                    <span className='icon is-left is-small'><FaUser /></span>\n                </div>\n            </div>\n            <div className='field'>\n                <div className='control has-icons-left'>\n                    <input autoComplete=\"off\" pattern={'/.{4}/'} max={9999} maxLength={4} minLength={4} disabled={state.loading} required value={state.code} onChange={(e) => setState({ ...state, code: e.target.value })} placeholder='enter 4 digits code...' className='input' type='number' />\n                    <span className='icon is-left is-small'><RiLockPasswordLine /></span>\n                </div>\n            </div>\n            <div className='field has-addons'>\n                <div className='control has-icons-left is-expanded'>\n                    <input autoComplete=\"off\" disabled={state.loading} required value={state.password} onChange={(e) => setState({ ...state, password: e.target.value })} placeholder='enter your password...' className='input' type={state.showPassword ? 'text' : 'password'} />\n                    <span className='icon is-left is-small'><FaKey /></span>\n                </div>\n                <div className='control'>\n                    <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\n                    </button>\n                </div>\n            </div>\n            <div className='field mt-6'>\n                <div className='control buttons is-centered'>\n                    <button onClick={onCancel} disabled={loading} className={`button is-rounded is-uppercase is-dark is-outlined`} type='button'>\n                        <FaChevronLeft />&nbsp; Back\n                    </button>\n                    <button disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='submit'>\n                        <FaSignInAlt />&nbsp; Login\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { LoginView } from '../components/auth';\nimport { AuthHandler } from '../components/guard';\nimport { VIEW_CONTEXT } from '../lib';\n\nexport function Login() {\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({ showModal: false })\n\n    useEffect(() => {\n        viewCTX.showToolbar(false)\n        viewCTX.showFooter(false)\n\n        return () => {\n            viewCTX.showToolbar(true)\n            viewCTX.showFooter(true)\n        }\n    })\n\n    return (\n        <AuthHandler>\n            <div className='columns is-gapless is-fullheight is-multiline'>\n                <div className='column is-flex-centered is-atleast-fullheight'>\n                    <LoginView />\n                </div>\n                <div className='column is-6 is-hidden-touch is-flex has-background-info' />\n            </div>\n        </AuthHandler>\n    )\n}","import React, { useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\n\nexport function Logout() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n\n    useEffect(() => {\n        viewCTX.setAppReady(false)\n        viewCTX.showToolbar(false)\n        ctx.logout()\n\n        return () => {\n            viewCTX.showToolbar(true)\n            viewCTX.setAppReady(true)\n        }\n    }, [])\n\n    if (!viewCTX.signedIn) {\n        return <Redirect to={{ pathname: '/' }} />\n    }\n\n\n\n    return (\n        viewCTX.signedIn ? <></> : <Redirect to={{ pathname: '/' }} />\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { RegisterView } from '../components/auth';\nimport { AuthHandler } from '../components/guard';\nimport { VIEW_CONTEXT } from '../lib';\n\n\nexport function Register() {\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({ showModal: false })\n    const [formState, setFormState] = useState({\n        first_name: '',\n        last_name: '',\n        password: '',\n        password_verify: '',\n        email: '',\n        phone_number: '',\n        showPassword: false,\n        showPasswordVerify: false\n    })\n\n    useEffect(() => {\n        viewCTX.showToolbar(false)\n        viewCTX.showFooter(false)\n\n        return () => {\n            viewCTX.showFooter(true)\n            viewCTX.showToolbar(true)\n        }\n    })\n\n    return (\n        <AuthHandler>\n            <div className='columns is-gapless is-fullheight is-multiline'>\n                <div className='column is-flex-centered is-atleast-fullheight'>\n                    <RegisterView />\n                </div>\n                <div className='column is-6 is-hidden-touch is-flex has-background-success' />\n            </div>\n        </AuthHandler>\n    )\n}","import React, { useState, useContext } from 'react'\nimport { NotificationList } from '../components/notification'\nimport { PaymentList } from '../components/payment'\nimport { CardFragment } from \"../components/util\";\nimport { JobListItem, JobDetail, DUMMY_JOBS } from '../components/job';\nimport { JobSideList } from \"../components/JobSideList\";\nimport { JobList } from \"../components/JobList\";\nimport { UserList } from '../components/user';\nimport { CreateJob } from '../components/jobcreation';\nimport { NavLink, Route, Switch, Link } from 'react-router-dom';\nimport links from '../lib/links';\nimport { FaCog, FaCogs, FaApplePay, FaApple, FaPaypal, FaChevronRight } from 'react-icons/fa';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { unix } from 'moment';\nimport { link } from 'fs';\n\nexport function SettingsDetail({ title, children = <></> }) {\n    return (\n        <div className=\"container is-fluid settings-detail\">\n            <div className='content mb-0 py-4'>\n                <p className='has-text-weight-bold is-size-4 has-text-left has-text-centered-mobile'>{title}</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport function Settings() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <div className={`box px-0 py-0`} style={{ flexDirection: 'column', flex: 1 }}>\n                <div className='card-content is-paddingless is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\n                    <div className='level py-4 mb-0' style={{ boxShadow: '0 0.125em 0.25em rgba(10, 10, 10, .1)' }}>\n                        <div className='level-left-item is-size-6'>\n                            <p className=\"title is-size-6 has-text-weight-bold pl-4\">Settings</p>\n                        </div>\n                    </div>\n                    <div className='container is-flex is-fluid px-0'>\n                        <div className='columns mx-0 is-multiline' style={{ flexGrow: 1 }}>\n                            <div className='column is-2-fullhd is-3-desktop is-12 px-0'>\n                                <div className='container'>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.loginAndSecurity} exact>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Login and Security</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.paymentMethods}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Payment Methods</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.additionalFeatures}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Additional Features</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.legalDocuments}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Legal Documents</p>\n                                        </div>\n                                    </NavLink>\n                                </div>\n                            </div>\n                            <div className='column is-10-fullhd is-9-desktop is-12 is-flex px-0'>\n                                <Switch >\n                                    <Route path={links.loginAndSecurity} exact render={() => (\n                                        <LoginAndSecurity />\n                                    )} />\n                                    <Route path={links.paymentMethods} exact render={() => (\n                                        <PaymentMethods />\n                                    )} />\n                                    <Route path={links.legalDocuments} exact render={() => (\n                                        <LegalDocuments />\n                                    )} />\n                                    <Route render={() => (\n                                        <div className=\"container is-fluid is-flex-centered settings-detail py-6\">\n                                            <div className='content has-text-grey'>\n                                                <span className='my-4' ><FaCogs fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                                                <p className='is-uppercase is-size-6 has-text-weight-bold'>Manage your account</p>\n                                            </div>\n                                        </div>\n                                    )} />\n                                </Switch>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport function LoginAndSecurity() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Login and Security\"} children={(\n            <>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Email Address</p>\n                        <p className='subtitle has-text-grey'>Email address connected to your account</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control`}>\n                            <input className={`input ${state.editEmail ? '' : 'is-static'} has-text-black is-size-5 has-text-right has-text-centered-mobile`} value={state.email} contentEditable={false} disabled={!state.editEmail} onChange={e => setState({ ...state, email: e.target.value })} />\n                        </div>\n                        <div className='field is-grouped is-grouped-right'>\n                            <div className='control'>\n                                <button className='button' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\n                            </div>\n                            {state.editEmail ? (\n                                <div className='control'>\n                                    <button className={`button is-info ${state.isLoadingEmail ? 'is-loading' : ''}`} onClick={() => {\n                                        setState({ ...state, isLoadingEmail: true })\n                                    }}>Change</button>\n                                </div>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Phone Number</p>\n                        <p className='subtitle has-text-grey'>Your phone number provided upon signing-up</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control`}>\n                            <input className={`input is-static has-text-right has-text-black is-size-5 has-text-centered-mobile`} disabled value={ctx.user?.phoneNumber} />\n                        </div>\n                        <p className='subtitle has-text-grey'>Due to restrictions, contact support to modify your phone number</p>\n\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Password</p>\n                        <p className='subtitle has-text-grey'>Maintain a strong, unique password to protect your account</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control title`}>\n                            <button className='button is-link' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\n                        </div>\n                        <p className='subtitle has-text-grey'>{state.lastPasswordChanged ? `Last modified ${state.lastPasswordChanged.calendar()}` : \"Never Changed\"}</p>\n\n                    </div>\n                </div>\n            </>\n        )} />\n    )\n}\n\n\nexport function PaymentMethods() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Payment Methods\"} children={(\n            <>\n                <div className='columns is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Preferred Method</p>\n                        <p className='subtitle has-text-grey'>Selected method of payment for jobs</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>{'VI 534***1234 12/22'}</p>\n                        <Link to={`${links.paymentMethods}/change`} >Change</Link>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Other Methods</p>\n                    </div>\n                </div>\n                <div className='columns' style={{ borderTop: 0 }}>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className='button is-white is-large'>\n                            <span className='icon'>\n                                <FaApple size={80} />\n                            </span>\n                            <span>Apple Pay</span>\n                            <span className='icon'>\n                                <FaChevronRight size={20} />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className='button is-white is-large'>\n                            <span className='icon'>\n                                <FaPaypal size={80} />\n                            </span>\n                            <span>PayPal</span>\n                            <span className='icon'>\n                                <FaChevronRight size={20} />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='columns' style={{ borderBottom: 0 }}>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <Link to={`${links.paymentMethods}/add`}>+ Add a Payment Method</Link>\n                    </div>\n                </div>\n            </>\n        )} />\n    )\n}\n\n\nexport function LegalDocuments() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Legal Documents\"} children={(\n            <>\n                <Link to={`${links.legalDocuments}/useragreement`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >User Agreement</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/privacy`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Privacy Policy</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/terms`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Terms of Service</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/cookie`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Cookie Policy</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n            </>\n        )} />\n    )\n}","import moment from \"moment\";\nimport React from 'react';\nimport { BsPencilSquare } from 'react-icons/bs';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport { FaSearch, FaComments } from 'react-icons/fa';\nimport { GoSettings } from 'react-icons/go';\nimport { User, DUMMY_USER } from '../lib/user';\nimport { NavLink } from \"react-router-dom\";\n\n\nexport function MessageListItem({ message }: { message: IMessage }) {\n    const time = moment.unix(message.timestamp / 1000)\n    return (\n        <NavLink activeClassName=\"is-active\" to={'./'} className={`message-item mb-8 is-block card is-shadowless has-background-white-ter`}>\n            <div className='card-content'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                            <figure className='image is-flex is-48x48'>\n                                <img className='is-rounded' src={message.author.profileImageURL} />\n                            </figure>\n                        </div>\n                        <div className='column'>\n                            <div className='columns mb-0 is-mobile name-bar'>\n                                <div className='has-text-left column is-narrow is-size-5 has-text-weight-medium'>\n                                    <p>{`${message.author.firstName} ${message.author.lastName}`}</p>\n                                </div>\n                                <div className='has-text-right column'>\n                                    <p>{time.calendar()}</p>\n                                </div>\n                            </div>\n                            <div className='content has-text-left'>\n                                <p>{message.content}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function MessageList({ onCreateNew = () => { }, className = '' }) {\n    return (\n        <div className={`${className} panel job-panel has-background-white-ter is-flex`}>\n            <div className='panel-heading is-flex is-vcentered'>\n                <p className='has-text-left'>Recent Messages</p>\n                <div className='field is-grouped is-grouped-right'>\n                    <button className='button is-rounded' onClick={onCreateNew}><BsPencilSquare /></button>\n                    <button className='button is-rounded' onClick={onCreateNew}><CgMoreAlt /></button>\n                </div>\n            </div>\n            <div className='panel-block'>\n                <div className='field has-addons' style={{ flex: 1 }}>\n                    <div className='control is-expanded has-icons-left'>\n                        <input style={{ borderRight: 0 }} className='input is-rounded' type='search' placeholder='Search Messages...' />\n                        <span className='icon is-left'><FaSearch /></span>\n                    </div>\n                    <div className='control'>\n                        <button style={{ borderLeft: 0 }} className='button is-rounded' onClick={() => window.alert(\"not ready yet\")}>\n                            <span className='icon is-right'><GoSettings /></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className='has-background-white-ter' style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n                {\n                    DUMMY_MESSAGES.map(m => <MessageListItem message={m} />)\n                }\n            </div>\n        </div>\n    )\n}\n\nexport function MessageDetail({ message, className, contact }: { contact?: User, className?: string, message: IMessage[] }) {\n    if (!message || !contact) {\n        return (\n            <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n                <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\n                    <span className='my-4' ><FaComments fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                    <p className='is-uppercase is-size-6 has-text-weight-bold'>Select a contact to start a chat</p>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n            <div className='card-content is-paddingless'>\n                <div className='level py-4 mb-0'>\n                    <div className='level-item is-size-6'></div>\n                    <div className='level-item is-size-4 has-text-weight-bold'>{`${contact.firstName} ${contact.lastName}`}</div>\n                    <div className='level-item is-size-6 pr-4' style={{ justifyContent: 'flex-end' }}>\n                        <button className='button is-rounded'><CgMoreAlt /></button>\n                    </div>\n                </div>\n                <div className='container is-fluid px-0'>\n                    <div className='columns is-fullheight mx-0 is-multiline'>\n                        <div className='column is-8-fullhd is-7-desktop is-12 px-0'>\n\n                        </div>\n                        <div className='column is-4-fullhd is-5-desktop is-12 is-flex'>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport interface IMessage {\n    content\n    author: User\n    timestamp\n    type: 'text' | 'image' | 'attachment'\n    id\n}\n\nexport const DUMMY_MESSAGES: IMessage[] = [\n    {\n        content: 'hello',\n        author: DUMMY_USER,\n        timestamp: Date.now(),\n        type: 'text',\n        id: 'abcdefgh'\n    }\n]","import React from 'react';\nimport { DUMMY_MESSAGES, MessageDetail, MessageList } from '../components/messages';\nimport { DUMMY_USER } from '../lib/user';\n\nexport function Messages() {\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <MessageList onCreateNew={() => { }} className='column is-3 is-12-touch is-clipped is-fullheight' />\n            <MessageDetail message={DUMMY_MESSAGES} contact={DUMMY_USER} className='column is-9 is-12-touch is-flex' />\n        </div>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Footer } from './components/footer';\nimport { AuthGuard } from './components/guard';\nimport Toolbar from './components/toolbar';\nimport { Loading } from './components/util';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from './lib';\nimport './lib/firebase';\nimport { Job } from './lib/job';\nimport links from './lib/links';\nimport { User, DUMMY_USER } from './lib/user';\nimport { Dashboard } from './pages/dashboard';\nimport { Jobs } from './pages/jobs';\nimport { Login } from './pages/login';\nimport { Logout } from './pages/logout';\nimport { Register } from './pages/register';\nimport { Settings } from './pages/settings';\nimport { Messages } from './pages/messages';\n\nfunction App() {\n  const ctx = useContext(APPLICATION_CONTEXT)\n  const [state, setState] = useState({ ready: false, })\n  const [showFooter, setShowFooter] = useState(true)\n  const [_showToolbar, showToolbar] = useState(true)\n  const [signedIn, setSignedIn] = useState<null | User>(DUMMY_USER)\n\n  const viewContext = {\n    signedIn,\n    setSignedIn,\n    setAppReady: (ready) => setState({ ...state, ready }),\n    showToolbar,\n    showFooter: (showFooter) => setShowFooter(showFooter)\n  }\n\n  useEffect(() => {\n    ctx.loginListener = () => {\n      if (ctx.signedIn()) {\n        viewContext.setSignedIn(ctx.user as User)\n      }\n    }\n\n    ctx.logoutListener = () => viewContext.setSignedIn(null)\n\n    ctx.ready.then((ready) => {\n      if (!ready) {\n        return console.log('Failed to start application due to an internal error.', 'Please contact application admin')\n      }\n      setState({ ...state, ready: true })\n    })\n      .catch(e => {\n        console.log(e)\n      })\n  }, [])\n\n  return (\n    <VIEW_CONTEXT.Provider value={viewContext}>\n      {state.ready ?\n        <>\n          {_showToolbar ? <Toolbar /> : null}\n          <div className='App-Body'>\n            <div className='is-fullheight'>\n              <Switch>\n                <Route component={Login} path={links.login} exact />\n                <Route component={Register} path={links.register} exact />\n                <Route component={Logout} path={links.logout} exact />\n\n                <AuthGuard component={Settings} path={links.settings} />\n                <AuthGuard render={(props) => {\n                  return <Redirect to={{ pathname: links.activeJobs, state: props.location.state }} />\n                }} path={links.jobs} exact />\n                <Route component={Jobs} path={links._jobItem.active} />\n                <AuthGuard component={Jobs} path={links._jobItem.inactive} />\n                <AuthGuard component={Messages} path={links._messages} />\n                <Route component={Dashboard} path={links.dashboard} exact />\n\n                <Route path={links.home} strict={false} exact={true}>\n                  {ctx.signedIn() && viewContext.signedIn ? <Redirect to={links.dashboard} /> : <Redirect to={links.login} />}\n                </Route>\n                <AuthGuard />\n              </Switch>\n            </div>\n          </div>\n          {showFooter ? <Footer /> : null}\n        </> :\n        <Loading />\n      }\n    </VIEW_CONTEXT.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@yaireo/tagify/dist/tagify.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ToastProvider } from 'react-toast-notifications';\nimport { BrowserRouter } from 'react-router-dom';\nimport { APPLICATION_CONTEXT, DEFAULT_APPLICATION } from \"./lib\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider autoDismiss={5000} placement='top-center'>\n      <BrowserRouter basename='/contractoradmin'>\n        <APPLICATION_CONTEXT.Provider value={DEFAULT_APPLICATION}>\n          <App />\n        </APPLICATION_CONTEXT.Provider>\n      </BrowserRouter>\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}