{"version":3,"sources":["logo.svg","lib/config.ts","lib/storage.ts","lib/user.ts","lib/message.ts","lib/index.tsx","lib/links.ts","components/footer.tsx","components/guard.tsx","lib/theme.ts","components/toolbar.tsx","components/util.tsx","lib/firebase.ts","lib/job.ts","components/map.tsx","components/job.tsx","components/JobList.tsx","components/notification.tsx","components/payment.tsx","pages/dashboard.tsx","lib/location.ts","components/jobcreation.tsx","components/JobSideList.tsx","pages/jobs.tsx","components/auth.tsx","pages/login.tsx","pages/logout.tsx","components/messages.tsx","pages/messages.tsx","pages/register.tsx","pages/settings.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","CONFIG","name","description","version","hostname","Google","mapKey","KEYS","initializeStorage","app","a","lf","config","driver","INDEXEDDB","LOCALSTORAGE","WEBSQL","storeName","ready","localforage","User","data","raw","token","jobType","activeTask","lastPasswordChanged","this","profilePhoto","id","initiateNetworkRequest","method","referrerPolicy","headers","Authorization","response","ok","Error","json","message","jsonResponse","user","console","log","role","firstName","lastName","occupation","city","state","starRate","email","password","phoneNumber","profileBio","dateCreated","accountStatus","workHistory","educationalBackground","skills","licenses","first_name","last_name","star_rate","date_created","account_status","educational_background","phone_number","profile_photo","DUMMY_USER","Date","now","Message","content","sender","DEFAULT_SETTINGS","lastUserName","DEFAULT_APPLICATION","settings","logoutListener","loginListener","Promise","res","rej","init","getItem","appData","info","inflateUser","options","JSON","stringify","setItem","path","request","authenticated","isJson","Accept","reqObj","mode","fetch","resp","status","reauthenticate","logout","session","phone","trim","validator","isMobilePhone","startsWith","encodeURIComponent","valid","channel","body","username","code","validateLogin","success","getUser","userName","persistUser","matches","validateRegister","password_verify","isEmail","undefined","removeItem","APPLICATION_CONTEXT","createContext","VIEW_CONTEXT","setSignedIn","signedIn","setAppReady","showToolbar","show","showFooter","footer","active","inactive","Footer","ctx","useContext","className","getFullYear","to","links","AuthGuard","children","rest","viewCTX","location","useLocation","pathname","from","AuthHandler","timer","STYLES","toolbar","boxShadow","appLogoIcon","fontSize","marginRight","color","appLogoText","fontWeight","jobProgressBar","height","Toolbar","useState","showMenu","setState","style","aria-label","aria-expanded","data-target","onClick","clearTimeout","setTimeout","aria-hidden","exact","activeClassName","type","placeholder","Empty","icon","onDismiss","text","props","Loading","alignItems","padding","max","CardFragment","header","optionsElement","optionsText","onOptionsTextClick","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","geoFirestore","GeoFirestore","enablePersistence","synchronizeTabs","Job","types","doc","get","then","snap","exists","resolve","toLowerCase","update","FieldValue","arrayUnion","job","photos","posted_by","job_title","salary","wage","location_address","tasks","length","job_description","required_count","coordinates","GeoPoint","coords","latitude","longitude","newDoc","db","FormData","map","photo","append","apiResponse","photo_files","set","jobID","delete","limit","where","native","orderBy","jobs","forEach","item","address","push","callback","unsubscribe","onSnapshot","err","added","modified","removed","docChanges","change","collection","MapView","Loader","useEffect","width","backgroundColor","ref","JobListItem","time","moment","toDate","whiteSpace","textOverflow","overflow","job_type","flexDirection","flex","justifyContent","src","getPhotoURL","calendar","value","JobItem","PendingJobItem","key","endTime","toMillis","date_completed","overflowX","progress","lineHeight","JobDetail","onCancel","fill","JobDetailTask","onJobCancel","borderLeft","JobDetailUser","startTime","totalTime","loadingCancel","addToast","useToasts","unix","diff","useCallback","window","confirm","cancelJob","appearance","position","paddingTop","bottom","right","background","border","task","toFixed","alignSelf","disabled","borderBottom","JobList","Array","loading","listenForActiveJobs","docs","all","v","executed_by","getExternalUser","j","NotificationItem","notification","timestamp","title","notif","borderRadius","getNotificationIcon","maxLines","fromNow","NotificationList","expanded","setExpanded","size","transition","DUMMY_NOTIFICATIONS","n","CurrencyFormatter","Intl","NumberFormat","currency","maximumFractionDigits","PaymentItem","payment","format","cost","payee","getPaymentDescription","PaymentList","DUMMY_PAYMENTS","p","Dashboard","marginBottom","getCurrentLocation","navigator","geolocation","getCurrentPosition","enableHighAccuracy","maximumAge","FormField","label","onChange","tagifyRef","required","whitelist","tags","showBorder","containerClassName","isTextArea","maxLength","Number","MAX_SAFE_INTEGER","helpTextTop","helpTextLeft","helpTextRight","hasAddons","addon","autoComplete","enabled","rightKey","e","persist","target","borderRight","inputMode","FileInput","onRemovePhoto","useRef","el","files","i","multiple","accept","file","index","CreateJob","onClose","onComplete","requiredPersons","price","loadingTypes","fetchingLocation","manualAddress","setPhotos","useMemo","jobTypes","createRef","tagifyRef2","getJobTypes","tagify","current","dropdown","hide","call","onSubmit","stopPropagation","preventDefault","newJob","serverTimestamp","parse","parseInt","v4","accuracy","altitude","heading","altitudeAccuracy","speed","isEmpty","find","addJobType","addNewJob","zIndex","filter","_","JobSideList","activeJobs","inactiveJobs","onCreateNew","alert","overflowY","render","Jobs","showModal","selected","setActive","setInactive","removeEscapeHandler","handler","ev","document","addEventListener","removeEventListener","useEscapeHandler","listenForActiveAndPendingJobs","getInactiveJobs","catch","useParams","activeMatch","useRouteMatch","strict","inactiveMatch","RegisterView","showCodeRequest","showPassword","showPasswordVerify","formState","setFormState","history","useHistory","addAdmin","margin","logo","LoginView","onSubmitCodeRequest","form","validateNumber","triggerVerification","onSubmitVerified","login","CodeRequestForm","LoginForm","intervalID","showOptions","hold","holdTimer","viewState","setView","onSubmitForm","counter","clearInterval","setInterval","pattern","minLength","Login","Logout","MessageListItem","author","profileImageURL","MessageList","DUMMY_MESSAGES","m","MessageDetail","contact","Messages","Register","SettingsDetail","Settings","flexGrow","LoginAndSecurity","PaymentMethods","LegalDocuments","editEmail","isLoadingEmail","contentEditable","borderTop","App","setShowFooter","_showToolbar","viewContext","Provider","component","Boolean","match","ReactDOM","StrictMode","autoDismiss","placement","basename","getElementById","serviceWorker","registration","unregister","error"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,kC,6RCa5BC,EAXQ,CACnBC,KAAM,mBACNC,YAAa,6BACbC,QAAS,MACTC,SAAU,mDAEVC,OAAQ,CACJC,OAAQ,4C,iBCNHC,EACK,mBADLA,EAGC,WAGP,SAAeC,EAAtB,kC,4CAAO,WAAiCC,GAAjC,SAAAC,EAAA,6DACHC,IAAGC,OAAO,CACNC,OAAQ,CACJF,IAAGG,UACHH,IAAGI,aACHJ,IAAGK,QAEPf,KAAK,GAAD,OAAKQ,EAAIG,OAAOX,KAAhB,aAAyBQ,EAAIG,OAAOT,SACxCA,QAAS,EACTc,UAAW,aACXf,YAAa,gEAVd,SAaGS,IAAGO,QAbN,4C,sBAgBA,IAAMC,EAAcR,I,kBCwCdS,EAAb,kDASI,WAAYC,EAAMC,GAAgB,IAAD,8BAC7B,cAAMD,EAAMC,IANhBC,WAKiC,IAJjCC,aAIiC,IAHjCC,gBAGiC,IAFjCC,yBAEiC,EAE7B,EAAKH,MAAQF,EAAKE,MAClB,EAAKC,QAAUH,EAAKG,QACpB,EAAKC,WAAaJ,EAAKI,WACvB,EAAKC,oBAAsBL,EAAKK,oBALH,EATrC,4DAEQ,OAAOC,KAAKC,iBAFpB,2FAuByBnB,EAAkBoB,EAAYN,GAvBvD,sGAyBmCd,EAAIqB,uBAAJ,iBAAqCD,GAAM,CAC9DE,OAAQ,MACRC,eAAgB,cAChBC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACVC,cAAc,UAAD,OAAYX,MA/B7C,WAyBkBY,EAzBlB,QAkC0BC,GAlC1B,6BAmC0BC,MAnC1B,SAmCuCF,EAASG,OAnChD,0JAmCgC,EAAyBC,QAnCzD,gDAmCoE,6BAnCpE,gEAsCuCJ,EAASG,OAtChD,eAsCkBE,EAtClB,QAuCkBC,EAAO,IAAIrB,EAAKoB,GAAc,IAC/BX,GAAKA,EACVY,EAAKlB,MAAQA,EAzCzB,kBA2CmBkB,GA3CnB,iPAuDiChC,EAAkBoB,GAvDnD,sGAyDmCpB,EAAIqB,uBAAJ,iBAAqCD,GAAM,CAC9DE,OAAQ,MACRC,eAAgB,cAChBC,QAAS,CACL,eAAgB,sBAErB,GA/Df,WAyDkBE,EAzDlB,QAgE0BC,GAhE1B,6BAiE0BC,MAjE1B,SAiEuCF,EAASG,OAjEhD,0JAiEgC,EAAyBC,QAjEzD,gDAiEoE,6BAjEpE,gEAoEuCJ,EAASG,OApEhD,eAoEkBE,EApElB,QAqEkBC,EAAO,IAAIrB,EAAKoB,GAAc,IAC/BX,GAAKA,EAtEtB,kBAwEmBY,GAxEnB,yCA0EYC,QAAQC,IAAI,4BAAZ,MA1EZ,kBA2EmB,IAAIvB,EAAK,KA3E5B,yHArCI,WAAYC,EAAMC,GAAgB,yBApBlCO,QAoBiC,OAnBjCe,UAmBiC,OAlBjCC,eAkBiC,OAjBjCC,cAiBiC,OAhBjCC,gBAgBiC,OAfjCC,UAeiC,OAdjCC,WAciC,OAbjCC,SAAmB,EAac,KAZjCC,WAYiC,OAXjCC,cAWiC,OAVjCC,iBAUiC,OATjCzB,kBASiC,OARjC0B,gBAQiC,OAPjCC,iBAOiC,OANjCC,cAAwB,UAMS,KALjCC,YAA6B,GAKI,KAJjCC,sBAA6C,GAIZ,KAHjCC,OAAmB,GAGc,KAFjCC,SAAuB,GAGftC,GACAK,KAAKiB,KAAOvB,EAAKuB,KACjBjB,KAAKkB,UAAYxB,EAAKwC,WACtBlC,KAAKmB,SAAWzB,EAAKyC,UACrBnC,KAAKoB,WAAa1B,EAAK0B,WACvBpB,KAAKuB,SAAW7B,EAAK0C,UACrBpC,KAAK4B,YAAclC,EAAK2C,aACxBrC,KAAKqB,KAAO3B,EAAK2B,KACjBrB,KAAKwB,MAAQ9B,EAAK8B,MAClBxB,KAAK6B,cAAgBnC,EAAK4C,eAC1BtC,KAAK+B,sBAAwBrC,EAAK6C,uBAClCvC,KAAK0B,YAAchC,EAAK8C,aACxBxC,KAAKC,aAAeP,EAAK+C,cACzBzC,KAAKsB,MAAQ5B,EAAK4B,MAClBtB,KAAKgC,OAAStC,EAAKsC,SAEnBhC,KAAKiB,KAAOvB,EAAKuB,KACjBjB,KAAKkB,UAAYxB,EAAKwB,UACtBlB,KAAKmB,SAAWzB,EAAKyB,SACrBnB,KAAKoB,WAAa1B,EAAK0B,WACvBpB,KAAKuB,SAAW7B,EAAK6B,SACrBvB,KAAK4B,YAAclC,EAAKkC,YACxB5B,KAAKqB,KAAO3B,EAAK2B,KACjBrB,KAAKwB,MAAQ9B,EAAK8B,MAClBxB,KAAK6B,cAAgBnC,EAAKmC,cAC1B7B,KAAK+B,sBAAwBrC,EAAKqC,sBAClC/B,KAAK0B,YAAchC,EAAKgC,YACxB1B,KAAKC,aAAeP,EAAKO,aACzBD,KAAKsB,MAAQ5B,EAAK4B,MAClBtB,KAAKgC,OAAStC,EAAKsC,QAGvBhC,KAAKE,GAAKR,EAAKQ,MAoFVwC,EAAmB,IAAIjD,EAAK,IAEzCiD,EAAWxB,UAAY,YACvBwB,EAAWvB,SAAW,MACtBuB,EAAWxC,GAAK,SAChBwC,EAAWlB,MAAQ,gBACnBkB,EAAWf,WAAa,8IACxBe,EAAW7C,QAAU,SACrB6C,EAAWhB,YAAc,eACzBgB,EAAWnB,SAAW,IACtBmB,EAAW3C,oBAAsB4C,KAAKC,MACtCF,EAAWd,YAAc,IAAIe,KAAK,cAClCD,EAAWV,OAAS,CAAC,UAAW,WC3JzB,IAAMa,EAAb,iDACIC,aADJ,OAEIC,YAFJ,yDAIenC,GACP,OAAOA,EAAQmC,SAAW/C,KAAK+C,SALvC,4CCUMC,EAAmB,CACrBC,aAAc,IAgULC,EAAsB,IA7TnC,WAUI,WAAYjE,GAAiB,IAAD,gCAT5BA,YAS4B,OAR5B6B,UAQ4B,OAP5BvB,WAO4B,OALlB4D,SAAsBH,EAKJ,KAH5BI,oBAG4B,OAF5BC,mBAE4B,EACxBrD,KAAKf,OAASA,EACde,KAAKT,MAAQ,IAAI+D,QAAJ,uCAAY,WAAOC,EAAKC,GAAZ,SAAAzE,EAAA,+EAEX,EAAK0E,OAFM,OAGjBF,GAAI,GAHa,uDAMjBxC,QAAQC,IAAR,MANiB,kBAOVwC,EAAI,EAAD,KAPO,yDAAZ,yDAZrB,mLA8Bc3E,EAAkBmB,MA9BhC,gCAiCoDR,EAAYkE,QAAQ9E,GAjCxE,QAiCkB+E,EAjClB,UAmCgB3D,KAAKmD,SAAWQ,GAnChC,gDAsCY5C,QAAQ6C,KAAR,KAAgB,0BAtC5B,mCA2CkB5D,KAAK6D,cA3CvB,QA6CgB7D,KAAKqD,eACLrD,KAAKqD,gBA9CrB,mDAiDYtC,QAAQC,IAAR,MAjDZ,kCAoDe,GApDf,wJAwDyB,IAAD,EAChB,OAAOhB,KAAKc,OAAL,UAAad,KAAKc,YAAlB,aAAa,EAAWlB,SAzDvC,8EA6DyBkE,GA7DzB,oEA8DaA,EA9Db,sBA+DkB,IAAIpD,MAAM,2BA/D5B,UAiEYqD,KAAKC,UAAUF,KAAaC,KAAKC,UAAUhE,KAAKmD,UAjE5D,wDAqEQnD,KAAKmD,SAAL,2BACOnD,KAAKmD,UACLW,GAvEf,SA0EqBtE,EAAYyE,QAAQrF,EAAeoB,KAAKmD,UA1E7D,qOA6EiCe,EAAcC,GA7E/C,0GA6EsEC,EA7EtE,gCA6E6FC,IA7E7F,iCA8Ec/D,EA9Ed,kCA+Ee6D,QA/Ef,IA+EeA,OA/Ef,EA+EeA,EAAS7D,SA/ExB,IAgFYgE,OAAQ,mBACR/D,cAAe6D,EAAa,2BAAapE,KAAKc,YAAlB,aAAa,EAAWlB,OAAxB,OAAkCuE,QAAlC,IAAkCA,GAAlC,UAAkCA,EAAS7D,eAA3C,aAAkC,kBAG9D+D,IACA/D,EAAQ,gBAAkB,oBAGxBiE,EAxFd,2BAyFeJ,GAzFf,IA0FY9D,eAAgB,cAChBmE,KAAM,OACNlE,YA5FZ,SA+F2BmE,MAAM,GAAD,OAAIzE,KAAKf,OAAOR,UAAhB,OAA2ByF,GAAQK,GA/FnE,UAgG4B,OADdG,EA/Fd,QAgGiBC,OAhGjB,oBAiGiB3E,KAAKc,KAjGtB,uBAkGsB,IAAIJ,MAAM,uCAlGhC,mCAwGwCV,KAAK4E,iBAxG7C,wBAwGwBhF,EAxGxB,EAwGwBA,MACRI,KAAKc,KAAKlB,MAAQA,EAEd2E,GAAUA,EAAOjE,SAAWiE,EAAOjE,QAAP,gBAC5BiE,EAAOjE,QAAP,+BAA4CV,IA5GhE,UA8G6BI,KAAKG,uBAAuB+D,EAAMK,GA9G/D,6FAgHsBvE,KAAK6E,SAhH3B,cAiHsB,MAAK,IAAInE,MAAM,2CAjHrC,iCAoHegE,GApHf,2QAyHc,IAAIhE,MAAM,gCAzHxB,qQA8HyClB,EAAYkE,QAAQ9E,GA9H7D,UA8HYkG,EA9HZ,6BA+H4B,IAAIpE,MAAM,kCA/HtC,cAiIQV,KAAKc,KAAO,IAAIrB,EAAKqF,GAjI7B,kBAkIe9E,KAAKc,MAlIpB,uPAsIad,KAAKc,KAtIlB,sBAuIkB,IAAIJ,MAAM,oBAvI5B,uBA0IclB,EAAYyE,QAAQrF,EAAmBoB,KAAKc,MA1I1D,oLA6IyBiE,GA7IzB,4EA8IaA,EA9Ib,sBA+IkB,IAAIrE,MAAM,kCA/I5B,WAiJQqE,EAAQA,EAAMC,SACCC,IAAUC,cAAcH,GAlJ/C,sBAmJkB,IAAIrE,MAAM,kCAnJ5B,UAqJaqE,EAAMI,WAAW,KArJ9B,sBAsJkB,IAAIzE,MAAM,8DAtJ5B,uBAyJ+BV,KAAKG,uBAAL,uBAA4CiF,mBAAmBL,IAAU,CAC5F3E,OAAQ,QA1JpB,WAyJcI,EAzJd,QA6JsBC,GA7JtB,6BA8JsBC,MA9JtB,UA8JmCF,EAASG,OA9J5C,2JA8J4B,EAAyBC,QA9JrD,gDA8JgE,uBA9JhE,gEAiKmCJ,EAASG,OAjK5C,kBAkK0B0E,MAlK1B,uBAmKkB,IAAI3E,MAAM,yEAnK5B,kCAsKe,GAtKf,2LAyK8BqE,GAzK9B,0FAyK6CO,EAzK7C,+BAyK+D,MAClDP,EA1Kb,sBA2KkB,IAAIrE,MAAM,kCA3K5B,WA6KQqE,EAAQA,EAAMC,SAECC,IAAUC,cAAcH,GA/K/C,sBAgLkB,IAAIrE,MAAM,kCAhL5B,UAkLaqE,EAAMI,WAAW,KAlL9B,sBAmLkB,IAAIzE,MAAM,8DAnL5B,wBAsL+BV,KAAKG,uBAAuB,0BAA2B,CAC1EC,OAAQ,OACRmF,KAAMxB,KAAKC,UAAU,CAAExB,aAAcuC,EAAOO,cAxLxD,YAsLc9E,EAtLd,QA0LsBC,GA1LtB,6BA2LsBC,MA3LtB,UA2LmCF,EAASG,OA3L5C,2JA2L4B,EAAyBC,QA3LrD,gDA2LgE,uBA3LhE,yEA8Le,GA9Lf,6KAiMgB4E,EAAUC,EAAMhE,GAjMhC,oGAmMkBzB,KAAK0F,cAAcF,EAAUC,EAAMhE,GAnMrD,uBAqMmCzB,KAAKG,uBAAuB,eAAgB,CAC/DC,OAAQ,OACRC,eAAgB,cAChBC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdiF,KAAMxB,KAAKC,UAAU,CAAExB,aAAcgD,EAAUC,OAAMhE,eA5MrE,WAqMkBjB,EArMlB,QA8M0BC,GA9M1B,6BA+M0BC,MA/M1B,UA+MuCF,EAASG,OA/MhD,2JA+MgC,EAAyBC,QA/MzD,gDA+MoE,gBA/MpE,gEAkNuCJ,EAASG,OAlNhD,YAkNkBE,EAlNlB,QAmN8B8E,QAnN9B,uBAoNsB,IAAIjF,MAAM,iBApNhC,yBAsN8BjB,EAAKmG,QAAQ5F,KAAMa,EAAagF,SAAUhF,EAAajB,OAtNrF,eAsNYI,KAAKc,KAtNjB,OAuNgBd,KAAKc,KAAKG,KAvN1B,UA4NkBjB,KAAK8F,cA5NvB,eA6NgB9F,KAAKqD,eACLrD,KAAKqD,gBA9NrB,kBAiOmBrD,KAAKc,MAjOxB,+OAwOkCiE,EAAeU,EAAchE,GAxO/D,oEAyOasD,GAAUtD,GAAagE,EAzOpC,sBA0OkB,IAAI/E,MAAM,6BA1O5B,WA4OQqE,EAAQA,EAAMC,SAECC,IAAUC,cAAcH,GA9O/C,sBA+OkB,IAAIrE,MAAM,kCA/O5B,UAiPaqE,EAAMI,WAAW,KAjP9B,sBAkPkB,IAAIzE,MAAM,8DAlP5B,UAoPauE,IAAUc,QAAQtE,EAAU,UApPzC,sBAqPkB,IAAIf,MAAM,wEArP5B,UAuPauE,IAAUc,QAAQN,EAAM,YAvPrC,uBAwPkB,IAAI/E,MAAM,6DAxP5B,+KA6PmBhB,GA7PnB,oGA+PkBM,KAAKgG,iBAAiBtG,GA/PxC,uBAiQmCM,KAAKG,uBAAuB,aAAc,CAC7DC,OAAQ,OACRmF,KAAMxB,KAAKC,UAAL,2BACCtE,GADD,IAEFuB,KAAM,QACNqB,eAAgB,eAtQpC,WAiQkB9B,EAjQlB,QAyQ0BC,GAzQ1B,6BA0Q0BC,MA1Q1B,UA0QuCF,EAASG,OA1QhD,2JA0QgC,EAAyBC,QA1QzD,gEA6QuCJ,EAASG,OA7QhD,eA6QkBE,EA7QlB,yBA+QmBA,GA/QnB,8OAqRqCnB,GArRrC,oFAsRc8B,EAA0E9B,EAA1E8B,MAAOC,EAAmE/B,EAAnE+B,SAAUS,EAAyDxC,EAAzDwC,WAAYC,EAA6CzC,EAA7CyC,UAAW8D,EAAkCvG,EAAlCuG,gBAAiBzD,EAAiB9C,EAAjB8C,aAC1DhB,GAAUC,EAvRvB,sBAwRkB,IAAIf,MAAM,6BAxR5B,UA0RYe,IAAawE,EA1RzB,sBA2RkB,IAAIvF,MAAM,2BA3R5B,UA6RQc,EAAQA,EAAMwD,OACd9C,EAAaA,EAAW8C,OACxB7C,EAAYA,EAAU6C,OACjB9C,GAAeC,EAhS5B,uBAiSkB,IAAIzB,MAAM,4CAjS5B,WAmSac,GAAUyD,IAAUiB,QAAQ1E,GAnSzC,uBAoSkB,IAAId,MAAM,8BApS5B,WAsSa8B,GAAiByC,IAAUC,cAAc1C,GAtStD,uBAuSkB,IAAI9B,MAAM,kCAvS5B,WAySa8B,EAAa2C,WAAW,KAzSrC,uBA0SkB,IAAIzE,MAAM,8DA1S5B,WA4SauE,IAAUc,QAAQtE,EAAU,UA5SzC,uBA6SkB,IAAIf,MAAM,wEA7S5B,mPAmTQ,IAAImC,EACJ7C,KAAKc,UAAOqF,EApTpB,SAqTc3G,EAAY4G,WAAWxH,GArTrC,OAuTYoB,KAAKoD,gBACLpD,KAAKoD,iBAxTjB,6GA6TmC,CAAgB/E,GACnD6E,EAAoBpC,KAAO4B,EAapB,IAAM2D,EAAsBC,wBAA2BpD,GAMjDqD,EAAeD,wBAMzB,CACCE,YAAa,SAACC,KACdA,SAAU,KACVC,YAAa,SAACnH,KACdoH,YAAa,SAACC,KACdC,WAAY,SAACC,OC5WF,EACD,YADC,EAEJ,SAFI,EAGD,YAHC,EAIA,iBAJA,EAKL,IALK,EAMA,aANA,EAOD,YAPC,EAQL,QARK,EASC,eATD,EAUG,iBAVH,EAWD,CACNC,OAAQ,oBACRC,SAAU,uBAbH,EAeI,iBAfJ,EAgBK,SAhBL,EAiBF,WAjBE,EAkBC,QAlBD,EAmBH,UAnBG,EAoBD,YApBC,EAqBO,YArBP,EAsBK,oBAtBL,EAuBS,qBAvBT,GAwBK,kB,SCnBb,SAASC,KACZ,IAAMC,EAAMC,qBAAWd,GAEvB,OACI,4BAAQe,UAAU,0BACd,yBAAKA,UAAU,6CACX,mCAAWF,EAAIjI,OAAOX,KAAtB,KAA6B,IAAIqE,MAAO0E,cAAxC,2BAA8E,kBAAC,KAAD,CAAMC,GAAIC,GAAV,kBAA9E,MAAqI,kBAAC,KAAD,CAAMD,GAAIC,GAAV,oBAArI,O,cCDT,SAASC,GAAT,GAAuD,IAAlCC,EAAiC,EAAjCA,SAAaC,EAAoB,6BACnDR,EAAMC,qBAAWd,GACjBsB,EAAUR,qBAAWZ,GACrBqB,EAAWC,cAEjB,OACI,kBAAC,IAAUH,EACNR,EAAIT,YAAckB,EAAQlB,SACvBgB,EAEI,kBAAC,IAAD,CAAUH,GAAI,CACVQ,SAAUP,EACVjG,MAAO,CACHyG,KAAMH,OAe3B,SAASI,GAAT,GAAoC,IAAbP,EAAY,EAAZA,SACpBP,EAAMC,qBAAWd,GACjBsB,EAAUR,qBAAWZ,GACrBqB,EAAWC,cAEjB,GAAIX,EAAIT,YAAckB,EAAQlB,SAAU,CAAC,IAC7BsB,GAAUH,EAAStG,OAAiB,CAAEyG,KAAM,CAAED,SAAU,OAAxDC,KACR,OAAO,kBAAC,IAAD,CAAUT,GAAIS,IAErB,OAAON,EC7CR,ICOHQ,GDPSC,GAAiD,CAC1DC,QAAS,CACLC,UAAW,0BAGfC,YAAa,CACTC,SAAU,MACVC,YAAa,OACbC,MAAO,QAEXC,YAAa,CACTH,SAAU,QACVI,WAAY,QAEhBC,eAAe,CACXC,OAAO,S,QCLA,SAASC,KAAW,IAAD,MACJC,mBAAS,CAAEC,UAAU,IADjB,mBACvBzH,EADuB,KAChB0H,EADgB,KAExB9B,EAAMC,qBAAWd,GACVc,qBAAWZ,GAcxB,OACI,yBAAKa,UAAU,SAASnG,KAAK,aAAagI,MAAOf,GAAOC,QAASe,aAAW,mBACxE,yBAAK9B,UAAU,gBACX,kBAAC,KAAD,CAAMA,UAAU,cAAcE,GAAIC,GAC9B,kBAAC,KAAD,CAAU0B,MAAOf,GAAOG,cACxB,0BAAMY,MAAOf,GAAOO,aAAcvB,EAAIjI,OAAOX,OAEjD,uBAAG2C,KAAK,SAASmG,UAAS,+BAA0B9F,EAAMyH,SAAW,YAAc,IAAMG,aAAW,OAAOC,gBAAc,QAAQC,cAAY,SAASC,QApB/I,WAEfC,aAAarB,IACT3G,EAAMyH,SACNC,EAAS,2BAAK1H,GAAN,IAAayH,UAAU,MAE/BC,EAAS,2BAAK1H,GAAN,IAAayH,UAAU,KAC/Bd,GAAQsB,YAAW,WACfP,EAAS,2BAAK1H,GAAN,IAAayH,UAAU,OAhBtB,QA6BL,0BAAMS,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAG1B,yBAAKpC,UAAS,sBAAiB9F,EAAMyH,SAAW,YAAc,KAC1D,yBAAK3B,UAAU,gBACX,kBAAC,KAAD,CAASE,GAAIC,EAAiBkC,OAAK,EAACC,gBAAgB,YAAYtC,UAAU,sBAA1E,aACA,kBAAC,KAAD,CAASE,GAAIC,EAAgBmC,gBAAgB,YAAYtC,UAAU,sBAAnE,YACA,kBAAC,KAAD,CAASE,GAAIC,EAAgBmC,gBAAgB,YAAYtC,UAAU,sBAAnE,YACA,kBAAC,KAAD,CAASE,GAAIC,EAAYmC,gBAAgB,YAAYtC,UAAU,sBAA/D,SAEJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,SACX,uBAAGA,UAAU,0BACT,2BAAOA,UAAU,mBAAmBuC,KAAK,SAASC,YAAY,sBAC9D,0BAAMxC,UAAU,yBAAwB,kBAAC,KAAD,CAAUA,UAAU,kBAIxE,yBAAKA,UAAU,yCACX,0BAAMA,UAAU,eAAhB,oBACQF,EAAIpG,YADZ,aACQ,EAAUI,UADlB,sBAC+BgG,EAAIpG,YADnC,aAC+B,EAAUK,WAEzC,yBAAKiG,UAAU,mBACX,kBAAC,KAAD,CAAME,GAAIC,EAAeH,UAAU,eAAnC,WACA,kBAAC,KAAD,CAAME,GAAIC,EAAkBH,UAAU,eAAtC,eACA,kBAAC,KAAD,CAAME,GAAIC,EAAcH,UAAU,eAAlC,cAGR,yBAAKA,UAAU,eACX,kBAAC,KAAD,CAAME,GAAIC,EAAgBH,UAAU,2CAA0C,kBAAC,KAAD,WClE/F,SAASyC,GAAT,GAAkK,IAAjJ/G,EAAgJ,EAAhJA,QAASgH,EAAuI,EAAvIA,KAAMC,EAAiI,EAAjIA,UAAWC,EAAsH,EAAtHA,KAASC,EAA6G,sDACpK,OACI,yBAAK7C,UAAU,0EACR2C,GAAa,4BAAQV,QAASU,EAAW3C,UAAU,WACrD0C,GACG,kBAAC,KAAD,CAAqB1C,UAAU,yCAElC6C,EAAMxC,SACHwC,EAAMxC,SACN3E,GACI,uBAAGsE,UAAU,iCAAiC4C,GAAQ,YAMnE,SAASE,KACZ,OACI,6BAAS9C,UAAU,8CAA8C6B,MAAO,CAAEkB,WAAY,UAAWC,QAAS,QACtG,yBAAKhD,UAAU,gDACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,gBACX,8BAAUA,UAAU,8BAA8BiD,IAAI,OAAtD,eAQjB,SAASC,GAAT,GAAsP,IAA9NC,EAA6N,EAA7NA,OAAQC,EAAqN,EAArNA,eAAgBC,EAAqM,EAArMA,YAAaC,EAAwL,EAAxLA,mBAAoBjD,EAAoK,EAApKA,SAAUwB,EAA0J,EAA1JA,MAC9F,OACI,yBAAK7B,UAAU,OAAO6B,MAAOA,GACzB,4BAAQ7B,UAAU,eACd,uBAAGA,UAAU,qBAAqBmD,GAClC,uBAAGnD,UAAU,oBACRoD,GAEG,0BAAMpD,UAAU,gBAAgBiC,QAASqB,GACpCD,KAKjB,yBAAKrD,UAAU,gBACX,yBAAKA,UAAU,2BACVK,KA4Bd,I,6BC9DPkD,KAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAKF,IAAMC,GAAYT,KAASS,YAChCC,GAAe,IAAIC,gBAAaF,IAEhCA,GAAUG,kBAAkB,CAC1BC,iBAAgB,I,aCqCPC,GAAb,kJAI6B3M,GAJ7B,0FAKe2M,EAAIC,MAAMC,IAAI,QAAQC,MAAMC,KAA5B,uCAAiC,WAAMC,GAAN,eAAA/M,EAAA,6DAEhC+M,EAAKC,SACLL,EAAQI,EAAKpM,OAAQgM,OAHW,kBAK7BpI,QAAQ0I,QAAQN,GAAS,KALI,2CAAjC,wDALf,4KAc4B5M,EAAkB6K,GAd9C,wEAeQA,EAAOA,EAAKsC,cAfpB,kBAgBeR,EAAIC,MAAMC,IAAI,QAAQO,OAAO,CAChCR,MAAOf,KAASS,UAAUe,WAAWC,WAAWzC,MAjB5D,6KAqB2B7K,EAAkBuN,GArB7C,8FAqBkDC,EArBlD,+BAqBmE,GACtDD,EAAIE,WAAcF,EAAIG,WAAcH,EAAII,QAAWJ,EAAIK,OAAUL,EAAIzE,UAAayE,EAAIM,kBAtBnG,sBAuBkB,IAAIjM,MAAM,6CAvB5B,YAyBY2L,EAAIO,MAAMC,OAAS,GAzB/B,sBA0BkB,IAAInM,MAAM,8CA1B5B,YA4BY2L,EAAIG,UAAUK,OAAS,GAAKR,EAAIS,gBAAgBD,OAAS,IA5BrE,sBA6BkB,IAAInM,MAAM,yDA7B5B,YA+BY2L,EAAIU,eAAiB,GA/BjC,sBAgCkB,IAAIrM,MAAM,0DAhC5B,YAkCY2L,EAAII,OAAS,GAlCzB,uBAmCkB,IAAI/L,MAAM,gCAnC5B,WAsCQ2L,EAAIW,YAAc,IAAIrC,KAASS,UAAU6B,SAASZ,EAAIzE,SAASsF,OAAOC,SAAUd,EAAIzE,SAASsF,OAAOE,WAE9FC,EAAS5B,EAAI6B,GAAG3B,QAGlBW,GAAUA,EAAOO,OAAS,GA3CtC,wBA6CkBtH,EAAO,IAAIgI,SACjBjB,EAAOkB,KAAI,SAACC,GACRlI,EAAKmI,OAAO,QAASD,MA/CrC,UAiDsC3O,EAAIqB,uBAAJ,cAA0C,CAChEC,OAAQ,OACRE,QAAS,CACL,WAAY+M,EAAOnN,IAEvBqF,SACD,GAAM,GAvDrB,YAiDkBoI,EAjDlB,QAyD6BlN,GAzD7B,6BA0D0BC,MA1D1B,UA0DuCiN,EAAYhN,OA1DnD,uBA0D2DC,QA1D3D,2BA0DsE,uBA1DtE,gEA6DiC+M,EAAYhN,OA7D7C,QA6DYiN,EA7DZ,OA6DqDlO,KA7DrD,eAgEQ2M,EAAInM,GAAKmN,EAAOnN,GAhExB,kBAiEemN,EAAOQ,IAAP,2BAAgBxB,GAAhB,IAAqBuB,kBAjEpC,8KAoE2B1G,EAAkBmF,GApE7C,0EAqE2B,aAAfA,EAAI1H,OArEhB,sBAsEkB,IAAIjE,MAAM,sCAtE5B,UAyE2B,aAAf2L,EAAI1H,OAzEhB,gCA0EkBuC,EAAI/G,uBAAJ,kBAA8C,CAChDC,OAAQ,SACRmF,KAAMxB,KAAKC,UAAU,CAAE8J,MAAOzB,EAAInM,GAAIe,KAAI,UAAEiG,EAAIpG,YAAN,aAAE,EAAUG,SACvD,GA7Ef,6CA+EkBwK,EAAI6B,GAAG3B,IAAIU,EAAInM,IAAI6N,SA/ErC,iCAiFe,GAjFf,gRAoFiCC,EApFjC,+BAoFyC,GApFzC,kBAqFevC,EAAI6B,GAAGW,MAAM,SAAU,KAAM,YAAYC,OAAOC,QAAQ,eAAgB,QAAQH,MAAMA,GAAOpC,MAAMC,KAAnG,uCAAwG,WAAMC,GAAN,eAAA/M,EAAA,6DACrGqP,EAAe,GACrBtC,EAAKuC,SAAQ,SAAA1C,GAAQ,IAAD,EACV2C,EAAY3C,EAAIjM,OACtB4O,EAAKpO,GAAKyL,EAAIzL,IACd,UAAIoO,EAAK1G,gBAAT,aAAI,EAAe2G,WACfD,EAAK3B,iBAAmB2B,EAAK1G,SAAS2G,SAE1CH,EAAKI,KAAKF,MAR6F,kBAUpGhL,QAAQ0I,QAAQoC,IAVoF,2CAAxG,wDArFf,0QAmG+BJ,EAnG/B,+BAmGuC,GAnGvC,kBAoGevC,EAAI6B,GAAGW,MAAM,SAAU,KAAM,CAAC,YAAa,YAAa,WAAY,gBAAgBC,OAAOC,QAAQ,eAAgB,QAAQH,MAAMA,GAAOpC,MAAMC,KAA9I,uCAAmJ,WAAMC,GAAN,eAAA/M,EAAA,6DAChJqP,EAAe,GACrBtC,EAAKuC,QAAL,uCAAa,WAAM1C,GAAN,iBAAA5M,EAAA,uDACHuP,EAAY3C,EAAIjM,QACjBQ,GAAKyL,EAAIzL,IACd,UAAIoO,EAAK1G,gBAAT,aAAI,EAAe2G,WACfD,EAAK3B,iBAAmB2B,EAAK1G,SAAS2G,SAE1CH,EAAKI,KAAKF,GAND,2CAAb,uDAFsJ,kBAU/IhL,QAAQ0I,QAAQoC,IAV+H,2CAAnJ,wDApGf,qJAkHyCK,GAAwB,IAAdT,EAAa,uDAAL,IAC7CU,EAAcjD,EAAI6B,GAAGW,MAAM,SAAU,KAAM,CAAC,YAAa,YAAa,WAAY,gBAAgBD,MAAMA,GAAOW,WAAjG,uCAA4G,WAAM7C,GAAN,eAAA/M,EAAA,sDACtHqP,EAAe,GACpBtC,EAAKoC,OAA4CG,SAAQ,SAAA1C,GAAQ,IAAD,EACvD2C,EAAY3C,EAAIjM,OACtB4O,EAAKpO,GAAKyL,EAAIzL,IACd,UAAIoO,EAAK1G,gBAAT,aAAI,EAAe2G,WACfD,EAAK3B,iBAAmB2B,EAAK1G,SAAS2G,SAE1CH,EAAKI,KAAKF,MAEdG,EAAS,KAAML,GAV6G,2CAA5G,uDAWjB,SAAAQ,GAAG,OAAIH,EAASG,EAAK,SAExB,OAAOF,IAhIf,0CAmI+BD,GAAsB,IAAZT,EAAW,uDAAH,EACnCU,EAAcjD,EAAI6B,GAAGW,MAAM,SAAU,KAAM,CAAC,YAAa,WAAY,gBAAgBD,MAAMA,GAAOW,WAApF,uCAA+F,WAAM7C,GAAN,eAAA/M,EAAA,sDACzGqP,EAAe,GACpBtC,EAAKoC,OAA4CG,SAAQ,SAAA1C,GAAQ,IAAD,EACvD2C,EAAY3C,EAAIjM,OACtB4O,EAAKpO,GAAKyL,EAAIzL,IACd,UAAIoO,EAAK1G,gBAAT,aAAI,EAAe2G,WACfD,EAAK3B,iBAAmB2B,EAAK1G,SAAS2G,SAE1CH,EAAKI,KAAKF,MAEdG,EAAS,KAAML,GAVgG,2CAA/F,uDAWjB,SAAAQ,GAAG,OAAIH,EAASG,EAAK,SAExB,OAAOF,IAjJf,8DAwJQ,IAJ0CG,EAI3C,EAJ2CA,MAAOC,EAIlD,EAJkDA,SAAUC,EAI5D,EAJ4DA,QAqB3D,OAhBoBtD,EAAI6B,GAAGW,MAAM,SAAU,KAAM,CAAC,YAAa,YAAa,WAAY,gBAAgBD,MAAM,GAAGW,WAA7F,uCAAwG,WAAM7C,GAAN,SAAA/M,EAAA,sDACvH+M,EAAKoC,OAA4Cc,aAAaX,SAAQ,SAAAY,GACnE,OAAQA,EAAOtF,MACX,IAAK,QACDkF,EAAMI,EAAOtD,KACb,MACJ,IAAK,WACDmD,EAASG,EAAOtD,KAChB,MACJ,IAAK,UACDoD,EAAQE,EAAOtD,SAV6F,2CAAxG,yDAzJ5B,kCA4KuB7M,EAAkBoB,GACjC,MAAM,GAAN,OAAUpB,EAAIG,OAAOR,SAArB,mBAAwCyB,EAAxC,YA7KR,KAAauL,GACM6B,GAAKjC,GAAa6D,WAAW,QADnCzD,GAEMC,MAAQL,GAAa6D,WAAW,S,qDCvDtCC,GAAU,SAAClF,GACpB,IAAM/C,EAAMC,qBAAWd,GAQR2G,GALA,IAAIoC,KAAO,CACtBvE,OAAQ3D,EAAIjI,OAAOP,OAAOC,OAC1BH,QAAS,WAGoByL,EAAzBoC,IAAOW,aAQf,OANAqC,qBAAU,cAIP,CAACrC,IAGA,uCAAK9M,GAAG,UAAU+I,MAAO,CAAEqG,MAAO,OAAQ1G,OAAQ,OAAQ2G,gBAAiB,WAAaC,IAAK,SAACA,MAOvFvF,KChBR,SAASwF,GAAT,GAA8C,IAAD,MAAtBpD,EAAsB,EAAtBA,IACpBnF,EAAMC,qBAAWd,GAEjBqJ,EAAOC,KAAOtD,EAAIhK,aAAauN,UACrC,OACI,yBAAKxI,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,qDACX,uBAAG6B,MAAO,CAAE4G,WAAY,SAAUC,aAAc,WAAYC,SAAU,WAAa1D,EAAIG,YAE3F,yBAAKpF,UAAU,iDACX,2BAAIiF,EAAIM,oBAIhB,yBAAKvF,UAAU,WACX,yBAAKA,UAAU,wBACX,2BAAIiF,EAAI2D,aAIpB,yBAAK5I,UAAU,eACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,sCAAsC6B,MAAO,CAAEgH,cAAe,SAAUC,KAAM,IACzF,yBAAK9I,UAAU,gBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,2BAA2B6B,MAAO,CAAEkH,eAAgB,WAC/D,4BAAQ/I,UAAU,0BACd,yBAAKA,UAAU,aAAagJ,IAAK3E,GAAI4E,YAAYnJ,EAAhB,UAAqBmF,EAAIvL,YAAzB,aAAqB,EAAUZ,QAGxE,yBAAKkH,UAAU,oBACX,yBAAKA,UAAU,cAAf,oBAAgCiF,EAAIvL,YAApC,aAAgC,EAAUI,UAA1C,sBAAuDmL,EAAIvL,YAA3D,aAAuD,EAAUK,YAErE,yBAAKiG,UAAU,yBACVsI,EAAKY,cAIlB,yBAAKlJ,UAAU,gBACX,8BAAUA,UAAU,mBAAmB6B,MAAOf,GAAOS,eAAgB4H,MAAO,EAAGlG,IAAI,OAAO,QAU/G,SAASmG,GAAT,GAAuD,IAAD,QAAnCnE,EAAmC,EAAnCA,IAAK/E,EAA8B,EAA9BA,GACrBJ,EAAMC,qBAAWd,GAEvB,GAAmB,cAAfgG,EAAI1H,OACJ,OAAO,kBAAC8L,GAAD,CAAgBpE,IAAKA,EAAK/E,GAAIA,EAAIoJ,IAAG,kBAAarE,EAAInM,MAGjE,IACIyQ,EADEjB,EAAOC,KAAOtD,EAAIhK,aAAauO,YAIrC,OAFIvE,EAAIwE,iBAAgBF,EAAUhB,KAAOtD,EAAIwE,eAAeD,aAGxD,kBAAC,KAAD,CAASlH,gBAAgB,YAAYpC,GAAIA,EAAI2B,MAAO,CAAE6H,UAAW,QAAU1J,UAAS,+FAChF,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,qDACX,uBAAG6B,MAAO,CAAE4G,WAAY,SAAUC,aAAc,WAAYC,SAAU,WAAa1D,EAAI2D,WAE3F,yBAAK5I,UAAU,+DACX,2BAAIiF,EAAIM,oBAGhB,yBAAKvF,UAAU,kCACX,yBAAKA,UAAU,2BAA2B6B,MAAO,CAAEkH,eAAgB,WAC/D,4BAAQ/I,UAAU,0BACd,yBAAKA,UAAU,aAAagJ,IAAK3E,GAAI4E,YAAYnJ,EAAhB,UAAqBmF,EAAIvL,YAAzB,aAAqB,EAAUZ,QAGxE,yBAAKkH,UAAU,6BACX,yBAAKA,UAAU,mBAAf,WAAqC,UAAAiF,EAAIvL,YAAJ,eAAUI,YAAa,OAA5D,aAAsE,UAAAmL,EAAIvL,YAAJ,eAAUK,WAAY,QAC5F,uBAAGiG,UAAU,aAAY,0BAAMA,UAAU,sBAAqB,kBAAC,KAAD,OAA9D,UAAgFiF,EAAIvL,YAApF,aAAgF,EAAUS,WAE9F,yBAAK6F,UAAU,uCACVsI,EAAKY,cAKlB,yBAAKlJ,UAAU,oDAAoD6B,MAAO,CAAEgH,cAAe,SAAUC,KAAM,IACvG,yBAAK9I,UAAU,gBACViF,EAAI0E,UAAY1E,EAAI0E,UAAY,IAC7B,wCAAcJ,EAAQL,YAEtB,8BAAUlJ,UAAU,mBAAmB6B,MAAOf,GAAOS,eAAgB4H,MAAOlE,EAAI0E,UAAY,EAAG1G,IAAI,OAAOgC,EAAI0E,YAI1H,yBAAK3J,UAAU,0EACX,0BAAMA,UAAU,gCAA+B,kBAAC,KAAD,OAC/C,0BAAM6B,MAAO,CAAE+H,WAAY,QAAU3E,EAAIG,cAOtD,SAASiE,GAAT,GAA8D,IAApCpE,EAAmC,EAAnCA,IAAK/E,EAA8B,EAA9BA,GACtBH,qBAAWd,GAEvB,OACI,kBAAC,KAAD,CAASqD,gBAAgB,YAAYpC,GAAIA,EAAI2B,MAAO,CAAE6H,UAAW,QAAU1J,UAAS,+FAChF,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,qDACX,uBAAG6B,MAAO,CAAE4G,WAAY,SAAUC,aAAc,WAAYC,SAAU,WAAa1D,EAAI2D,WAE3F,yBAAK5I,UAAU,+DACX,2BAAIiF,EAAIM,oBAGhB,yBAAKvF,UAAU,kCACX,yBAAKA,UAAU,wBACX,uBAAGA,UAAU,kCACT,0BAAMA,UAAU,wCAAuC,kBAAC,KAAD,OACvD,0BAAM6B,MAAO,CAAE+H,WAAY,QAA3B,aAGR,yBAAK5J,UAAU,yBACX,0DASrB,SAAS6J,GAAT,GAA0H,IAArG5E,EAAoG,EAApGA,IAAKjF,EAA+F,EAA/FA,UAAW8J,EAAoF,EAApFA,SACxC,IAAK7E,EACD,OACI,yBAAKjF,UAAS,UAAKA,EAAL,oBAAkC6B,MAAO,CAAEgH,cAAe,WACpE,yBAAK7I,UAAU,mEACX,0BAAMA,UAAU,QAAQ,kBAAC,KAAD,CAAW+J,KAAK,OAAOlI,MAAO,CAAEL,OAAQ,OAAQ0G,MAAO,WAC/E,uBAAGlI,UAAU,+CAAb,kCAKhB,IAAMsI,EAAOC,KAAOtD,EAAIhK,aAAauO,YAErC,OACI,yBAAKxJ,UAAS,UAAKA,EAAL,8BAA4C6B,MAAO,CAAEgH,cAAe,WAC9E,yBAAK7I,UAAU,+BACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,wBAAf,UAA8CsI,EAAKY,YACnD,yBAAKlJ,UAAU,6CAA6CiF,EAAIG,WAChE,yBAAKpF,UAAU,sCAAsCiF,EAAInM,KAE7D,yBAAKkH,UAAU,2BACX,yBAAKA,UAAU,kFACX,yBAAKA,UAAU,mDACX,kBAACgK,GAAD,CAAeC,YAAaH,EAAU7E,IAAKA,KAG/B,cAAfA,EAAI1H,QAAyC,cAAf0H,EAAI1H,OAC/B,yBAAKsE,MAAO,CAAEqI,WAAY,mBAAqBlK,UAAU,gEACrD,kBAAC,GAAD,CAASiF,IAAKA,EAAKjF,UAAU,iCAGjC,yBAAK6B,MAAO,CAAEqI,WAAY,mBAAqBlK,UAAU,iDACrD,kBAACmK,GAAD,CAAelF,IAAKA,SAU7C,SAAS+E,GAAT,GAA0E,IAAD,MAKxET,EAASa,EAAWC,EALIpF,EAAgD,EAAhDA,IAAKgF,EAA2C,EAA3CA,YAC3BnK,EAAMC,qBAAWd,GADqD,EAElDyC,mBAAS,CAAE4I,eAAe,IAFwB,mBAErEpQ,EAFqE,KAE9D0H,EAF8D,KAGpE2I,EAAaC,uBAAbD,SAGJtF,EAAIwE,iBAAgBF,EAAUkB,gBAAKxF,EAAIwE,eAAeD,WAAa,MACnEvE,EAAIhK,eAAcmP,EAAYK,gBAAKxF,EAAIhK,aAAauO,WAAa,MACjED,GAAWa,IAAWC,EAAYd,EAAQmB,KAAKN,EAAW,KAAK,IAEnE,IAAMN,EAAWa,sBAAW,sBAAC,sBAAAhT,EAAA,kEAEHiT,OAAOC,QAAQ,oIAFZ,wDAMrBjJ,EAAS,2BAAK1H,GAAN,IAAaoQ,eAAe,KANf,SAOfjG,GAAIyG,UAAUhL,EAAKmF,GAPJ,OAQrBsF,EAAS,8BAA+B,CAAEQ,WAAY,YACtDd,EAAYhF,GATS,kDAWrBsF,EAAS,KAAE/Q,SAAW,wBAAyB,CAAEuR,WAAY,UAXxC,yBAarBnJ,EAAS,2BAAK1H,GAAN,IAAaoQ,eAAe,KAbf,6EAe1B,CAACrF,EAAK/K,IAET,OACI,yBAAK8F,UAAU,gCAAgC6B,MAAO,CAAEgH,cAAe,WACnD,cAAf5D,EAAI1H,OACD,yBAAKyC,UAAU,uCACX,0BAAMA,UAAU,sCAAhB,kCF7NW,GE6NX,0BAGJ,4BAAQA,UAAU,iBAAiB6B,MAAO,CAAEmJ,SAAU,WAAYC,WAAY,QAC1E,yBAAKjC,IAAK,2CACV,uBAAGhJ,UAAU,kBAAkB6B,MAAO,CAAEmJ,SAAU,WAAYE,OAAQ,EAAGC,MAAO,EAAGC,WAAY,cAAeC,OAAQ,IAClH,0BAAMrL,UAAU,kBAAiB,kBAAC,KAAD,SAI7C,yBAAKA,UAAU,eAAe6B,MAAO,CAAEgH,cAAe,SAAUE,eAAgB,gBAAiBD,KAAM,IACnG,yBAAK9I,UAAU,qBACX,2BAAOA,UAAU,mCACb,2BAAOA,UAAU,8CACb,wBAAIA,UAAU,yBACV,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,QACA,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,kBAAkBiF,EAAI2D,WAE5D,wBAAI5I,UAAU,yBACV,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,YACA,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,kBAAkBiF,EAAIM,mBAE5D,wBAAIvF,UAAU,yBACV,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,eACA,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,kBAAkBiF,EAAIS,kBAE5D,wBAAI1F,UAAU,yBACV,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,OACA,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,oDAAmD,kCAAQiF,EAAII,QAAjG,OAAqH,0BAAMrF,UAAU,uBAAhB,IAAwCiF,EAAIK,QAEpKL,EAAIO,OAASP,EAAIO,MAAMC,OAAS,EAC7B,wBAAIzF,UAAU,yBACV,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,SACA,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,kBAAlC,UACKiF,EAAIO,aADT,aACK,EAAWY,KAAI,SAAAkF,GAAI,OAAI,uBAAGhC,IAAKgC,EAAK1I,MAAb,KAAsB0I,EAAK1I,WAGzD,KACN,wBAAI5C,UAAU,yBACV,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,UACA,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAiBoK,EAAUlB,YAAV,MAEvD,wBAAIlJ,UAAU,yBACV,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,OACA,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,mBAAyB,QAAP,EAAAuJ,SAAA,eAASL,aAAT,MAExD,wBAAIlJ,UAAU,yBACV,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,cACA,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,mBAA2B,QAAT,EAAAqK,SAAA,eAAWkB,QAAQ,KAAnB,SAKnEtG,EAAI0E,UAAY1E,EAAI0E,UAAY,IAC7B,4BAAQ3J,UAAU,mCAAmC6B,MAAO,CAAE2J,UAAW,aAAzE,gBAEA,4BAAQC,SAAUvR,EAAMoQ,cAAerI,QAAS6H,EAAU9J,UAAS,wDAAmD9F,EAAMoQ,cAAgB,aAAe,IAAMzI,MAAO,CAAE2J,UAAW,aAAcpK,MAAO,UAA1M,gBAOb,SAAS+I,GAAT,GAAgD,IAAD,kBAE9CC,EAFwBnF,EAAsB,EAAtBA,IACtBnF,EAAMC,qBAAWd,GAIvB,OAFIgG,EAAIhK,eAAcmP,EAAY7B,KAAOtD,EAAIhK,aAAauO,aAGtD,yBAAKxJ,UAAU,8BAA8B6B,MAAO,CAAEgH,cAAe,WACjE,yBAAKhH,MAAO,CAAE6J,aAAc,qBAAuB1L,UAAU,wBACzD,yBAAKA,UAAU,2BAA2B6B,MAAO,CAAEkH,eAAgB,WAC/D,4BAAQ/I,UAAU,0BACd,yBAAKA,UAAU,aAAagJ,IAAK3E,GAAI4E,YAAYnJ,EAAhB,UAAqBmF,EAAIvL,YAAzB,aAAqB,EAAUZ,QAGxE,yBAAKkH,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gDACX,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,gDAAb,WAAgE,UAAAiF,EAAIvL,YAAJ,eAAUI,YAAa,OAAvF,aAAiG,UAAAmL,EAAIvL,YAAJ,eAAUK,WAAY,SAE3H,yBAAKiG,UAAU,qEAAf,iBAEJ,yBAAKA,UAAU,yBACX,uBAAGA,UAAU,aAAY,0BAAMA,UAAU,sBAAqB,kBAAC,KAAD,OAA9D,UAAgFiF,EAAIvL,YAApF,aAAgF,EAAUS,UAK1F,uBAAG6F,UAAU,aAAb,UAA0BiF,EAAIvL,YAA9B,aAA0B,EAAUa,YACpC,uBAAGyF,UAAU,+CAA8C,0BAAMA,UAAU,gBAAhB,gBAA3D,QAAqHuI,KAAM,UAACtD,EAAIvL,YAAL,aAAC,EAAUc,aAAa0O,gBAKnK,yBAAKlJ,UAAU,eAAe6B,MAAO,CAAEgH,cAAe,SAAUE,eAAgB,gBAAiBD,KAAM,IACnG,2BAAO9I,UAAU,mCACb,2BAAOA,UAAU,aACb,wBAAIA,UAAU,yBACV,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,WACA,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,UAAmDiF,EAAIvL,YAAvD,aAAmD,EAAUY,cAMjE,wBAAI0F,UAAU,yBACV,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,cACA,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAiBoK,EAAUlB,aAEjE,wBAAIlJ,UAAU,yBACV,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,iBAAlC,mCACA,wBAAI6B,MAAO,CAAEiH,KAAM,GAAK9I,UAAU,kBAC7B,UAAAiF,EAAIvL,YAAJ,eAAUkB,SAAUqK,EAAIvL,KAAKkB,OAAO6K,OAAS,EAA7C,UAAiDR,EAAIvL,KAAKkB,cAA1D,aAAiD,EAAiBwL,KAAI,SAAAkF,GAAI,OAAI,gCAAMA,MAApF,QAMjB,4BAAQtL,UAAU,mCAAmC6B,MAAO,CAAE2J,UAAW,eAAzE,aAkCGjQ,KAAKC,MAELD,KAAKC,MACPD,KAAKC,MAQHD,KAAKC,MAELD,KAAKC,MACPD,KAAKC,MASHD,KAAKC,MAELD,KAAKC,MACPD,KAAKC,MAQHD,KAAKC,MAGLD,KAAKC,MACPD,KAAKC,MAQHD,KAAKC,MASLD,KAAKC,MASLD,KAAKC,MAWLD,KAAKC,MAGLD,KAAKC,MACPD,KAAKC,MAQHD,KAAKC,MAGLD,KAAKC,MACPD,KAAKC,MAQHD,KAAKC,MAGLD,KAAKC,MACPD,KAAKC,MC5df,SAASmQ,GAAT,GAA0D,IAAvC3L,EAAsC,EAAtCA,UAChBF,EAAMC,qBAAWd,GADqC,EAElCyC,mBAAS,CAAEsF,KAAM,IAAI4E,MAAeC,SAAS,IAFX,mBAErD3R,EAFqD,KAE9C0H,EAF8C,KAIpD2I,EAAaC,uBAAbD,SAuBR,OArBAtC,qBAAU,WAkBN,OAjBArG,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KACVxH,GAAIyH,oBAAJ,uCAAwB,WAAOtE,EAAKuE,GAAZ,SAAApU,EAAA,0DACpC6P,EADoC,uBAEpC5F,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAFM,kBAG7BtB,EAAS/C,EAAIhO,SAAW,wBAHK,uBAK3B0C,QAAQ8P,IACjBD,EAAK3F,IAAL,uCAAS,WAAO6F,GAAP,SAAAtU,EAAA,yDACY,cAAbsU,EAAE1O,SAA0B0O,EAAEC,YAD7B,gCAEc7T,EAAK8T,gBAAgBrM,EAAKmM,EAAEC,aAF1C,OAEDD,EAAEvS,KAFD,uCAIEuS,GAJF,2CAAT,wDANoC,OAKxCF,EALwC,OAaxCnK,EAAS,2BAAK1H,GAAN,IAAa8M,KAAM+E,EAAMF,SAAS,KAbF,2CAAxB,2DAiBrB,IAGC,yBAAK7L,UAAWA,GACX9F,EAAM2R,QACH,8BAAU7L,UAAU,iCAAiCiD,IAAI,OAAzD,WACE/I,EAAM8M,KAAKZ,KAAI,SAAAgG,GAAC,OACd,kBAAC,KAAD,CAAM9C,IAAK8C,EAAEtT,GAAIoH,GAAE,UAAKC,EAAL,YAAyBiM,EAAEtT,IAAMkH,UAAU,yDAC1D,kBAACqI,GAAD,CAAapD,IAAKmH,SCpCnC,SAASC,GAAT,GAA8E,IAAlDC,EAAiD,EAAjDA,aACzBhE,EAAOC,KAAOkC,KAAK6B,EAAaC,UAAY,KAClD,OACI,yBAAKvM,UAAU,mDAAmDwM,MAAOF,EAAaE,OAClF,yBAAKxM,UAAU,mDACX,yBAAKA,UAAU,sFACX,uBAAG6B,MAAO,CAAE4G,WAAY,SAAUC,aAAc,WAAYC,SAAU,WAenF,SAA6B8D,GAChC,OAAQA,EAAMlK,MACV,IAAK,YACD,OAAO,0BAAMvC,UAAU,mDAAmD6B,MAAO,CAAE6K,aAAc,MAAOxL,SAAU,UAA3G,IAAuH,kBAAC,KAAD,MAAvH,KACX,IAAK,WACD,OAAO,0BAAMlB,UAAU,mDAAmD6B,MAAO,CAAE6K,aAAc,MAAOxL,SAAU,UAA3G,IAAuH,kBAAC,KAAD,MAAvH,KACX,IAAK,WACD,OAAO,0BAAMlB,UAAU,mDAAmD6B,MAAO,CAAE6K,aAAc,MAAOxL,SAAU,UAA3G,IAAuH,kBAAC,KAAD,MAAvH,MAtBoFyL,CAAoBL,GAAvG,IAAuHA,EAAaE,QAExI,yBAAKxM,UAAU,oFACX,uBAAG6B,MAAO,CAAE+K,SAAU,IAAMtE,EAAKuE,aAGzC,yBAAK7M,UAAU,WACX,2BACKsM,EAAa5Q,WAkB3B,SAASoR,GAAT,GAA0C,IAAd9M,EAAa,EAAbA,UAAa,EACZ0B,oBAAS,GADG,mBACrCqL,EADqC,KAC3BC,EAD2B,KAG5C,OACI,yBAAKhN,UAAWA,GACZ,yBAAKA,UAAU,oBACX,yBAAKiC,QAAS,kBAAM+K,GAAaD,IAAW/M,UAAU,uJAClD,4CACA,4BAAQA,UAAU,uEACZ+M,EAGE,kBAAC,KAAD,CAAaE,KAAM,GAAIjN,UAAS,iCAFhC,kBAAC,KAAD,CAAWiN,KAAM,GAAIjN,UAAS,mCAK1C,yBAAK6B,MAAO,CAAEqL,WAAY,qBAAuBlN,UAAS,UAAM+M,EAA2B,GAAhB,gBACtEI,GAAoB1H,OAAS,EAC1B0H,GAAoB/G,KAAI,SAAAgH,GAAC,OACrB,kBAAC,KAAD,CAAM9D,IAAK8D,EAAEtU,GAAIoH,GAAE,KAAQF,UAAU,eACjC,kBAACqM,GAAD,CAAkBC,aAAcc,QAIxC,kBAAC3K,GAAD,CAAOG,KAAK,iCAgBpC,IAAMuK,GAAuC,CACzC,CACIzR,QAAS,cACT6Q,UAAWhR,KAAKC,MAChB+G,KAAM,YACNiK,MAAO,uBACP1T,GAAI,QAER,CACI4C,QAAS,aACT6Q,UAAWhR,KAAKC,MAChB+G,KAAM,WACNiK,MAAO,uBACP1T,GAAI,QAER,CACI0T,MAAO,YACPD,UAAWhR,KAAKC,MAChB+G,KAAM,WACN7G,QAAS,4DACT5C,GAAI,QAER,CACI0T,MAAO,YACPD,UAAWhR,KAAKC,MAChB+G,KAAM,WACN7G,QAAS,4DACT5C,GAAI,QAER,CACI0T,MAAO,YACPD,UAAWhR,KAAKC,MAChB+G,KAAM,YACN7G,QAAS,4DACT5C,GAAI,SCzGNuU,GAAoBC,KAAKC,aAAa,QAAS,CAAEC,SAAU,MAAO3L,MAAO,WAAY4L,sBAAuB,IAE3G,SAASC,GAAT,GAA0D,IAAnCC,EAAkC,EAAlCA,QACpBrF,EAAOC,KAAOkC,KAAKkD,EAAQpB,UAAY,KAE7C,OACI,yBAAKvM,UAAU,mDAAmDwM,MAAOmB,EAAQnB,OAC7E,yBAAKxM,UAAU,mDACX,yBAAKA,UAAU,qFACX,uBAAG6B,MAAO,CAAE4G,WAAY,SAAUC,aAAc,WAAYC,SAAU,WAAagF,EAAQnB,QAE/F,yBAAKxM,UAAU,oFACX,2BAAIsI,EAAKuE,aAGjB,yBAAK7M,UAAU,WACX,2BAgDT,SAA+B2N,GAClC,OAAQA,EAAQpL,MACZ,IAAK,UACD,MAAM,gCAAN,OAAuC8K,GAAkBO,OAAOD,EAAQE,MAAxE,8CAAmHF,EAAQG,OAC/H,IAAK,OACD,MAAM,gBAAN,OAAuBT,GAAkBO,OAAOD,EAAQE,MAAxD,kCAAuFF,EAAQG,QApDtFC,CAAsBJ,MAOpC,SAASK,GAAT,GAAqC,IAAdhO,EAAa,EAAbA,UAAa,EACP0B,oBAAS,GADF,mBAChCqL,EADgC,KACtBC,EADsB,KAGvC,OACI,yBAAKhN,UAAWA,GACZ,yBAAKA,UAAU,oBACX,yBAAKiC,QAAS,kBAAM+K,GAAaD,IAAW/M,UAAU,uJAClD,uCACA,4BAAQA,UAAU,uEACZ+M,EAGE,kBAAC,KAAD,CAAaE,KAAM,GAAIjN,UAAS,iCAFhC,kBAAC,KAAD,CAAWiN,KAAM,GAAIjN,UAAS,mCAK1C,yBAAK6B,MAAO,CAAEqL,WAAY,qBAAuBlN,UAAS,UAAM+M,EAA2B,GAAhB,gBACtEkB,GAAexI,OAAS,EACrBwI,GAAe7H,KAAI,SAAA8H,GAAC,OAChB,kBAAC,KAAD,CAAMhO,GAAE,MAASoJ,IAAK4E,EAAEpV,GAAIkH,UAAU,eAClC,kBAAC0N,GAAD,CAAaC,QAASO,QAI9B,kBAACzL,GAAD,CAAOG,KAAK,iCA2B7B,IAAMqL,GAA6B,CACtC,CACI1L,KAAM,UACNgK,UAAWhR,KAAKC,MAChBqS,KAAM,OACNrB,MAAO,aACPsB,MAAO,kBACPhV,GAAI,UAER,CACIyJ,KAAM,OACNgK,UAAWhR,KAAKC,MAChBqS,KAAM,QACNrB,MAAO,mCACPsB,MAAO,kBACPhV,GAAI,WAER,CACIyJ,KAAM,UACNgK,UAAWhR,KAAKC,MAChBqS,KAAM,SACNrB,MAAO,aACPsB,MAAO,kBACPhV,GAAI,UC9FL,SAASqV,KACZ,OACI,yBAAKnO,UAAU,4DACX,kBAAC8M,GAAD,CAAkB9M,UAAU,0CAC5B,yBAAKA,UAAU,sCAAsC6B,MAAO,CAAEgH,cAAe,SAAUE,eAAgB,kBACnG,kBAAC7F,GAAD,CAAcC,OAAO,cAAcC,eAAgB,kBAAC,KAAD,CAAMlD,GAAIC,GAAV,YAA6C0B,MAAO,CAAEuM,aAAc,UACnH,kBAACzC,GAAD,CAAS3L,UAAW,qEAG5B,kBAACgO,GAAD,CAAahO,UAAU,2C,mCCb5B,SAASqO,KACZ,OAAO,IAAInS,SAAQ,SAACC,EAAKC,GACrB,KALG,gBAAiBkS,WAMhB,MAAM,IAAIhV,MAAM,+DAGpBgV,UAAUC,YAAYC,mBAAmBrS,EAAKC,EAAK,CAC/CqS,oBAAoB,EACpBC,WAAY,S,cCIjB,SAASC,GAAT,GAA0Z,IAArYC,EAAoY,EAApYA,MAAOzF,EAA6X,EAA7XA,MAAO0F,EAAsX,EAAtXA,SAAU7O,EAA4W,EAA5WA,UAAWuC,EAAiW,EAAjWA,KAAMC,EAA2V,EAA3VA,YAAaE,EAA8U,EAA9UA,KAA8U,IAAxUoM,iBAAwU,MAA5T,KAA4T,MAA/SC,gBAA+S,aAA7RC,iBAA6R,MAAjR,GAAiR,MAApQ5R,YAAoQ,MAA7P,SAA6P,MAAnPqO,gBAAmP,aAAjOI,eAAiO,aAAhNoD,YAAgN,aAAlMC,kBAAkM,aAA/KC,0BAA+K,MAA1J,GAA0J,MAAtJC,kBAAsJ,aAAlIC,iBAAkI,MAAtHC,OAAOC,iBAA+G,MAA7FC,mBAA6F,MAA/E,GAA+E,MAA3EC,oBAA2E,MAA5D,GAA4D,MAAxDC,qBAAwD,MAAxC,GAAwC,MAApCC,iBAAoC,aAAjBC,aAAiB,MAAT,qCAAS,EAC5Z,OACI,yBAAK5P,UAAS,UAAKmP,EAAL,YAA2BD,EAAa,iBAAmB,GAA3D,yBACV,2BAAOlP,UAAU,gBAAgB6B,MAAO,CAAEkH,eAAgB,gBAAiBhG,WAAY,WAAY,8BAAO6L,GAA1G,IAAwH,0BAAM5O,UAAU,mDAAmDwP,IACzLG,EAsDE,yBAAK3P,UAAS,UAAK2P,EAAY,aAAe,GAAhC,WACV,yBAAK3P,UAAS,kBAAa0C,EAAO,iBAAmB,GAAvC,iBACTuM,EACG,kBAAC,KAAD,CACIH,UAAWA,EACX3F,MAAOA,EACPpN,SAAU,CACNyG,cACAwM,YACA5R,OACAQ,MAAM,EACNiS,aAAc,CACVC,SAAS,EACTC,UAAU,IAGlBhB,SAAUA,EACV/O,UAAS,UAAKA,EAAL,UACTyL,SAAUA,EACVI,QAASA,EACTgD,SAAU,SAAAmB,GAAC,OAAKA,EAAEC,UAAWpB,EAASmB,EAAEE,OAAO/G,UAGnD,2BAAO4F,SAAUA,EAAUtD,SAAUA,EAAUtC,MAAOA,EAAO0F,SAAU,SAACmB,GAAD,OAAOnB,EAASmB,EAAEE,OAAO/G,QAAQkG,UAAWA,EAAWrP,UAAS,UAAKA,EAAL,UAAwBuC,KAAMA,EAAMC,YAAaA,EAAaX,MAAO,CAAEsO,YAAa,KAE9NzN,EAAO,0BAAM1C,UAAU,yBAAyB0C,GAAe,MAEnEkN,GAhFL,yBAAK5P,UAAS,kBAAa0C,EAAO,iBAAmB,GAAvC,iBACT0M,EACGH,EACI,kBAAC,KAAD,CACIH,UAAWA,EACX3F,MAAOA,EACPpN,SAAU,CACNyG,cACAwM,YACA5R,KAAM,KACNQ,MAAM,EACNiS,aAAc,CACVC,SAAS,EACTC,UAAU,IAGlBK,UAAU,WACVpQ,UAAS,UAAKA,GACd6L,QAASA,EACTwD,UAAWA,EACXN,SAAUA,EACVtD,SAAUA,EACVoD,SAAU,SAAAmB,GAAC,OAAKnB,EAASmB,EAAEE,OAAO/G,UAGtC,8BAAU4F,SAAUA,EAAUtD,SAAUA,EAAUtC,MAAOA,EAAO0F,SAAU,SAACmB,GAAD,OAAOnB,EAASmB,EAAEE,OAAO/G,QAAQnJ,UAAS,UAAKA,EAAL,aAA2BqP,UAAWA,EAAW7M,YAAaA,IAEtLyM,EACI,kBAAC,KAAD,CACIH,UAAWA,EACX3F,MAAOA,EACPpN,SAAU,CACNyG,cACAwM,YACA5R,OACAQ,MAAM,EACNiS,aAAc,CACVC,SAAS,EACTC,UAAU,IAGlBhB,SAAUA,EACV/O,UAAS,UAAKA,EAAL,UACT6L,QAASA,EACTJ,SAAUA,EACVoD,SAAU,SAAAmB,GAAC,OAAKA,EAAEC,UAAWpB,EAASmB,EAAEE,OAAO/G,UAGnD,2BAAO4F,SAAUA,EAAUtD,SAAUA,EAAUtC,MAAOA,EAAO0F,SAAU,SAACmB,GAAD,OAAOnB,EAASmB,EAAEE,OAAO/G,QAAQkG,UAAWA,EAAWrP,UAAS,UAAKA,EAAL,UAAwBuC,KAAMA,EAAMC,YAAaA,IAE/LE,EAAO,0BAAM1C,UAAU,yBAAyB0C,GAAe,MAiCxE,yBAAK1C,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,WACVyP,EAAe,uBAAGzP,UAAU,gDAAgDyP,EAA7D,KAAkF,KACjGC,EAAgB,uBAAG1P,UAAU,iDAAiD0P,EAA9D,KAAoF,SAQtH,SAASW,GAAT,GAAkE,IAA7C5E,EAA4C,EAA5CA,SAAUtC,EAAkC,EAAlCA,MAAO0F,EAA2B,EAA3BA,SAAUyB,EAAiB,EAAjBA,cAC7ClI,EAAMmI,iBAAyB,MAErC,OACI,yBAAKvQ,UAAU,2CACX,2BAAOA,UAAU,gBAAgB6B,MAAO,CAAEkH,eAAgB,gBAAiBhG,WAAY,WAAY,4CAAnG,IAA2H,0BAAM/C,UAAU,mDAAhB,yCAC3H,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,sCACX,2BAAOA,UAAU,6BACb,2BAAO6O,SAAU,SAAC2B,GACd,GAAIA,EAAGN,OAAOO,MAAO,CAEjB,IADA,IAAMA,EAAgB,GACbC,EAAI,EAAGA,GAAC,UAAGF,EAAGN,OAAOO,aAAb,aAAG,EAAiBhL,QAAQiL,IAAK,CAAC,IAAD,EAC9CD,EAAMrJ,KAAKoJ,EAAGN,OAAOO,MAAMC,IAE3BD,EAAMhL,OAAS,GACfoJ,EAAS4B,KAGlBzQ,UAAU,aAAa2Q,UAAQ,EAACvI,IAAKA,EAAKqD,SAAUA,EAAUlJ,KAAK,OAAOqO,OAAO,YACpF,0BAAM5Q,UAAU,oCAAoC6B,MAAO,CAAEqG,MAAO,SAChE,0BAAMlI,UAAU,aACZ,kBAAC,KAAD,OAEJ,0BAAMA,UAAU,cAAhB,oBAMXmJ,GAASA,EAAM1D,OAAS,EACrB,yBAAKzF,UAAU,yCACVmJ,EAAM/C,KAAI,SAACyK,EAAYC,GAAb,OACP,yBAAKxH,IAAG,UAAKwH,EAAL,YAAcD,EAAK3Z,MAAQ8I,UAAU,sBACzC,yBAAKA,UAAU,mBACX,0BAAMsJ,IAAG,UAAKuH,EAAK3Z,KAAV,YAAkB2Z,EAAK5D,KAAvB,YAA+B6D,GAAS9Q,UAAU,eAAe6Q,EAAK3Z,MAC/E,4BAAQ+K,QAAS,WAAQqO,EAAcQ,IAAU9Q,UAAU,wBAKzE,OAMf,SAAS+Q,GAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,QAASxR,EAAoB,EAApBA,KAAMyR,EAAc,EAAdA,WACjCnR,EAAMC,qBAAWd,GAD8B,EAE3ByC,mBAAS,CAC/BmK,SAAS,EACTrG,MAAO,GACPjD,KAAM,GACNiK,MAAO,GACPrV,YAAa,GACbgQ,QAAS,GACT+J,gBAAiB,GACjBC,MAAO,GACPC,cAAc,EACdC,kBAAkB,EAClBC,eAAe,EACf9Q,SAAU,OAduC,mBAE9CtG,EAF8C,KAEvC0H,EAFuC,OAgBzBF,mBAAS,IAhBgB,mBAgB9CwD,EAhB8C,KAgBtCqM,EAhBsC,KAiB7ChH,EAAaC,uBAAbD,SACFjG,EAAQkN,mBAAQ,WAClB,MAAO,CACHC,SAAU,IAAI7F,MACdpL,SAAU,MAEf,IACGsO,EAAY4C,sBAAaC,EAAaD,sBAmC5C,OAvBAzJ,qBAAU,WACN,IAAI/L,QAAJ,sBAAY,8BAAAvE,EAAA,+EAEmB0M,GAAIuN,YAAY9R,GAFnC,OAEJwE,EAAMmN,SAFF,OAGEI,EAAc/C,EAAUgD,QAC9BnY,QAAQC,IAAIkV,GACR+C,IACAA,EAAO9V,SAASiT,UAAUvJ,OAAS,EACnCoM,EAAOhG,SAAQ,GAAMkG,SAASC,KAAKC,KAAKJ,IACxC,EAAAA,EAAO9V,SAASiT,WAAU5H,KAA1B,qBAAkC9C,EAAMmN,UAAxC,oBAAqDI,EAAO1I,SAC5D0I,EAAOhG,SAAQ,GAAOkG,SAASC,KAAKC,KAAKJ,EAAQA,EAAO1I,OAEvD2F,EAAUgD,QAAgB/V,SAASiT,UAAY1K,EAAMmN,UAE1D9X,QAAQC,IAAI0K,EAAMmN,SAAU,qBAbxB,kDAeJ9X,QAAQC,IAAR,MACA2Q,EAAS,4BAA6B,CAAEQ,WAAY,UAhBhD,6DAmBb,IAIC,0BAAM/K,UAAS,gBAAWR,EAAO,YAAc,IAAM0S,SAAQ,uCAAE,WAAOlC,GAAP,iBAAArY,EAAA,yDAC3DqY,EAAEmC,kBACFnC,EAAEoC,iBAEFxQ,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAJ6B,WAMjDwG,EAAS,CACXpX,aAAcsI,KAASS,UAAUe,WAAWuN,kBAC5ClN,UAAWlL,EAAMsS,MACjB5D,SAAUjM,KAAK4V,MAAMrY,EAAMqI,MAAM,GAAG4G,MAAMtE,cAC1CM,UAAS,UAAErF,EAAIpG,YAAN,aAAE,EAAUZ,GACrBuM,OAAQmN,SAAStY,EAAMiX,MAAO,IAC9BxL,eAAgB6M,SAAStY,EAAMgX,gBAAiB,IAChD5L,KAAM,aACN/H,OAAQ,YACRiI,MAAO7I,KAAK4V,MAAMrY,EAAMsL,OAAOY,KAAI,SAAA6F,GAAC,MAAK,CAAEnT,GAAI2Z,eAAM7P,KAAMqJ,EAAE9C,UAC7D5D,iBAAkBrL,EAAMiN,QACxB3G,SAAUtG,EAAMsG,SAAW,CACvBsF,OAAQ,CACJC,SAAU7L,EAAMsG,SAASsF,OAAOC,SAChCC,UAAW9L,EAAMsG,SAASsF,OAAOE,UACjC0M,SAAUxY,EAAMsG,SAASsF,OAAO4M,SAChCC,SAAUzY,EAAMsG,SAASsF,OAAO6M,SAChCC,QAAS1Y,EAAMsG,SAASsF,OAAO8M,QAC/BC,iBAAkB3Y,EAAMsG,SAASsF,OAAO+M,iBACxCC,MAAO5Y,EAAMsG,SAASsF,OAAOgN,OAC9BvG,UAAWrS,EAAMsG,SAAS+L,gBAC7BxN,EACJ2G,gBAAiBxL,EAAM/C,cAEhByR,UAAa/K,IAAUkV,QAAQV,EAAOzJ,WAActE,EAAMmN,SAASuB,MAAK,SAAAzQ,GAAI,OAAIA,IAAS8P,EAAOzJ,YA9BpD,gCAiC7CvE,GAAI4O,WAAWnT,EAAKuS,EAAOzJ,UAjCkB,wBAoCjDvE,GAAI6O,UAAUpT,EAAKuS,EAAQnN,GApCsB,QAqCvDtD,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAC9BtB,EAAS,0BAA2B,CAAEQ,WAAY,YAClDkG,IAvCuD,kDAyCvDtX,QAAQC,IAAR,MACAgI,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAC9BtB,EAAS,KAAE/Q,SAAW,qBAAsB,CAAEuR,WAAY,UA3CH,0DAAF,uDA8CzD,yBAAK/K,UAAU,qBACf,yBAAKA,UAAU,cACX,4BAAQA,UAAU,mBACd,yBAAKA,UAAU,mDACX,yBAAKA,UAAU,wBACX,4BAAQA,UAAU,SAASiC,QAAS+O,GAAS,0BAAMhR,UAAU,QAAO,kBAAC,KAAD,OAAwB,0BAAMA,UAAU,oBAAhB,wBAEhG,yBAAKA,UAAU,4CACX,kDAEJ,uBAAGA,UAAU,8BAGrB,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBAAkB6B,MAAO,CAAE6J,aAAc,oBACpD,uBAAG1L,UAAU,uEAAb,eACA,uBAAGA,UAAU,kFAAb,6CAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,eACX,kBAAC2O,GAAD,CAAWI,UAAQ,EAACtD,SAAUvR,EAAM2R,QAAS1C,MAAOjP,EAAMqI,KAAMuM,UAAWA,EAAWG,MAAI,EAACD,UAAW1K,EAAMmN,SAAU5C,SAAU,SAACtM,GAAD,OAAUX,GAAS,SAAC1H,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBqI,aAAUvC,UAAU,GAAGmP,mBAAmB,OAAOP,MAAM,WAAWpM,YAAY,0BAA0BD,KAAK,OAAOG,KAAM,kBAAC,KAAD,MAAc+M,aAAa,qFAChU,kBAACd,GAAD,CAAWI,UAAQ,EAACtD,SAAUvR,EAAM2R,QAAS1C,MAAOjP,EAAMsS,MAAOqC,SAAU,SAACrC,GAAD,OAAW5K,EAAS,2BAAK1H,GAAN,IAAasS,YAAUxM,UAAU,GAAGmP,mBAAmB,OAAOP,MAAM,QAAQpM,YAAY,8BAA8BD,KAAK,OAAOG,KAAM,KAAM+M,aAAa,uEAAuEC,cAAc,wBAAwBL,UAAW,KACjX,kBAACV,GAAD,CAAWI,UAAQ,EAACtD,SAAUvR,EAAM2R,QAAS1C,MAAOjP,EAAM/C,YAAa0X,SAAU,SAAC1X,GAAD,OAAiByK,EAAS,2BAAK1H,GAAN,IAAa/C,kBAAgB6I,UAAU,GAAGmP,mBAAmB,OAAOP,MAAM,cAAcQ,YAAU,EAAC5M,YAAY,mCAAmCD,KAAK,OAAOG,KAAM,KAAM+M,aAAa,6EAA6EC,cAAc,wBAAwBL,UAAW,KAC/Z,kBAACV,GAAD,CAAWI,UAAW7U,EAAMoX,cAAe7F,SAAUvR,EAAM2R,SAAW3R,EAAMmX,iBAAkBlI,MAAOjP,EAAMiN,QAAS2H,UAAW6C,EAAY1C,MAAO/U,EAAMoX,cAAetC,UAAW1K,EAAM9D,SAAUqO,SAAU,SAAC1H,GAAD,OAAavF,GAAS,SAAC1H,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBiN,gBAAanH,UAAU,GAAGmP,mBAAmB,OAAOP,MAAM,mBAAmBpM,YAAY,6CAA6CD,KAAK,OAAOG,KAAM,kBAAC,KAAD,MAC9YiN,WAAS,EAACC,MACN,yBAAK5P,UAAU,WACX,4BAAQyL,SAAUvR,EAAM2R,SAAW3R,EAAMmX,iBAAkBrR,UAAS,iBAAY9F,EAAMmX,iBAAmB,aAAe,GAApD,YAA0DnX,EAAMoX,cAAgB,yBAA2B,IAAMrP,QAAO,sBAAE,4BAAAtK,EAAA,2DACpL2Z,GAAiBpX,EAAMoX,eAD6J,wBAItL1P,EAAS,2BAAK1H,GAAN,IAAamX,kBAAkB,KAJ+I,cAMlLzP,EANkL,6BAMpK1H,GANoK,kBAM7ImU,KAN6I,0BAM7J7N,SAN6J,mDAOlL+J,EAAS,+BAAgC,CAAEQ,WAAY,YACvDnJ,GAAS,SAAC1H,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBiN,QAAS,GAAImK,gBAAeD,kBAAkB,OARmG,kDAUlL1X,QAAQC,IAAR,MACAgI,GAAS,SAAC1H,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBmX,kBAAkB,OACnD9G,EAAS,KAAE/Q,SAAW,mCAAoC,CAAEuR,WAAY,UAZ0G,gCAetLnJ,GAAS,SAAC1H,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBsG,SAAU,KAAM8Q,qBAfqI,0DAiB3L/O,KAAK,SAASV,MAAO,CAAET,MAAOlH,EAAMoX,cAAgB,QAAU,QAASpH,WAAY,EAAGiJ,OAAQ,IAAK,0BAAMnT,UAAU,aAAa9F,EAAMoX,cAAgB,yBAA2B,gCAKpM,yBAAKtR,UAAU,eACX,kBAAC2O,GAAD,CAAWI,UAAQ,EAACtD,SAAUvR,EAAM2R,QAAS1C,MAAOjP,EAAMgX,gBAAiBrC,SAAU,SAACqC,GAAD,OAAqBtP,EAAS,2BAAK1H,GAAN,IAAagX,sBAAoBvB,WAAS,EAAC3P,UAAU,GAAGmP,mBAAmB,OAAOP,MAAM,0CACtMpM,YAAY,0CACZD,KAAK,SAASmN,cAAc,kCAC5BhN,KAAM,KACNkN,MACI,yBAAK5P,UAAU,WACX,4BAAQA,UAAU,SAASyL,UAAQ,EAAC5J,MAAO,CAAET,MAAO,QAAS8I,WAAY,IAAzE,cAIZ,kBAACyE,GAAD,CAAWI,UAAQ,EAACtD,SAAUvR,EAAM2R,QAAS1C,MAAOjP,EAAMiX,MAAOtC,SAAU,SAACsC,GAAD,OAAWvP,EAAS,2BAAK1H,GAAN,IAAaiX,YAAUxB,WAAS,EAAC3P,UAAU,GAAGmP,mBAAmB,OAAOP,MAAM,MACxKpM,YAAY,oBACZD,KAAK,SAASkN,aAAa,2FAC3B/M,KAAM,kBAAC,KAAD,MACNkN,MACI,yBAAK5P,UAAU,WACX,4BAAQA,UAAU,SAASyL,UAAQ,EAAC5J,MAAO,CAAET,MAAO,QAAS8I,WAAY,IAAzE,qBAIZ,kBAACyE,GAAD,CAAWI,UAAQ,EAACtD,SAAUvR,EAAM2R,QAAS1C,MAAOjP,EAAMsL,MAAOyJ,MAAI,EAACJ,SAAU,SAACrJ,GAAD,OAAW5D,GAAS,SAAC1H,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBsL,cAAW4J,YAAU,EAACpP,UAAU,GAAGmP,mBAAmB,OAAOP,MAAM,QAAQpM,YAAY,aAAaD,KAAK,OAAOG,KAAM,KAAM8M,YAAY,8DAA8DE,cAAc,wCAEhV,kBAACW,GAAD,CAAW5E,SAAUvR,EAAM2R,QAAS1C,MAAOjE,EAAQoL,cAAe,SAACI,GAAQa,EAAUrM,EAAOkO,QAAO,SAACC,EAAGvC,GAAJ,OAAcA,IAAUJ,OAAO7B,SAAU,SAAC3J,GAAD,OAAYqM,EAAUrM,WAOtL,4BAAQlF,UAAU,oCACd,4BAAQyL,SAAUvR,EAAM2R,QAAS7L,UAAU,SAASiC,QAAS+O,GAA7D,UACA,4BAAQvF,SAAUvR,EAAM2R,QAAS7L,UAAS,yBAAoB9F,EAAM2R,QAAU,aAAe,IAAMtJ,KAAK,UAAxG,c,wBCxVb,SAAS+Q,GAAT,GAA4E,IAArDtT,EAAoD,EAApDA,UAAWuT,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,YAC/D,OACI,yBAAKzT,UAAS,UAAKA,EAAL,sDACV,yBAAKA,UAAU,sCACX,uBAAGA,UAAU,iBAAb,gBACA,uBAAGA,UAAU,6BAA6BiC,QAASwR,GAAa,kBAAC,KAAD,QAEpE,yBAAKzT,UAAU,eACX,yBAAKA,UAAU,mBAAmB6B,MAAO,CAAEiH,KAAM,IAC7C,yBAAK9I,UAAU,sCACX,2BAAO6B,MAAO,CAAEsO,YAAa,GAAKnQ,UAAU,mBAAmBuC,KAAK,SAASC,YAAY,mBACzF,0BAAMxC,UAAU,gBAAe,kBAAC,KAAD,QAEnC,yBAAKA,UAAU,WACX,4BAAQ6B,MAAO,CAAEqI,WAAY,GAAKlK,UAAU,oBAAoBiC,QAAS,kBAAM2I,OAAO8I,MAAM,oBACxF,0BAAM1T,UAAU,iBAAgB,kBAAC,KAAD,WAKhD,yBAAKA,UAAU,cACX,kBAAC,KAAD,CAASE,GAAE,UAAKC,GAAoBmC,gBAAgB,aAApD,UACA,kBAAC,KAAD,CAASpC,GAAE,UAAKC,GAAsBmC,gBAAgB,aAAtD,aAEJ,yBAAKtC,UAAU,2BAA2B6B,MAAO,CAAE8R,UAAW,OAAQjK,UAAW,WAC7E,kBAAC,IAAD,CAAO5M,KAAI,UAAKqD,GAAoByT,OAAQ,kBAAML,EAAWnN,KAAI,SAAAgG,GAAC,OAAI,kBAAChD,GAAD,CAASE,IAAK8C,EAAEtT,GAAImM,IAAKmH,EAAGlM,GAAE,UAAKC,EAAL,YAAyBiM,EAAEtT,YAC/H,kBAAC,IAAD,CAAOgE,KAAI,UAAKqD,GAAsByT,OAAQ,kBAAMJ,EAAapN,KAAI,SAAAgG,GAAC,OAAI,kBAAChD,GAAD,CAASE,IAAK8C,EAAEtT,GAAImM,IAAKmH,EAAGlM,GAAE,UAAKC,EAAL,YAA2BiM,EAAEtT,cCtB9I,SAAS+a,KACZ,IAAM/T,EAAMC,qBAAWd,GADJ,EAEOyC,mBAAS,CAAEmK,SAAS,EAAOiI,WAAW,EAAOC,SAAU,OAF9D,mBAEZ7Z,EAFY,KAEL0H,EAFK,OAGSF,mBAAS,IAHlB,mBAGZ/B,EAHY,KAGJqU,EAHI,OAIatS,mBAAS,IAJtB,mBAIZ9B,EAJY,KAIFqU,EAJE,KAKX1J,EAAaC,uBAAbD,SACF/J,EAAWC,cAEXyT,EZyDsB,SAAC7M,GAC7B,IAAM8M,EAAU,SAACC,GACE,WAAXA,EAAG9K,KACHjC,KAIR,OADAuD,OAAOyJ,SAASC,iBAAiB,UAAWH,GACrC,kBAAMvJ,OAAOyJ,SAASE,oBAAoB,UAAWJ,IYhEhCK,EAAiB,kBAAM5S,EAAS,2BAAK1H,GAAN,IAAa4Z,WAAW,QAEnF7L,qBAAU,WACN,OAAOiM,MACR,IAEHjM,qBAAU,WACNrG,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAC9B,IAAMvE,EAAcjD,GAAIoQ,8BAAJ,uCAAkC,WAAOjN,EAAKuE,GAAZ,SAAApU,EAAA,0DAC9C6P,EAD8C,uBAE9C5F,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAFgB,kBAGvCtB,EAAS/C,EAAIhO,SAAW,wBAHe,uBAKrC0C,QAAQ8P,IACjBD,EAAK3F,IAAL,uCAAS,WAAO6F,GAAP,SAAAtU,EAAA,yDACY,cAAbsU,EAAE1O,SAA0B0O,EAAEC,YAD7B,gCAEc7T,EAAK8T,gBAAgBrM,EAAKmM,EAAEC,aAF1C,OAEDD,EAAEvS,KAFD,uCAIEuS,GAJF,2CAAT,wDAN8C,OAKlDF,EALkD,OAalDnK,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAC9BmI,EAAUjI,GAdwC,2CAAlC,yDA6BpB,OAZA1H,GAAIqQ,kBAAkBjQ,KAAtB,uCAA2B,WAAOuC,GAAP,SAAArP,EAAA,sEAAsBqP,EAAKZ,IAAL,uCAAS,WAAO6F,GAAP,SAAAtU,EAAA,sEACvCU,EAAK8T,gBAAgBrM,EAAKmM,EAAEC,aADW,cACtDD,EAAEvS,KADoD,yBAE/CuS,GAF+C,2CAAT,uDAAtB,mFAA3B,uDAGIxH,MAAK,SAAAuC,GACLiN,EAAYjN,MACb2N,OAAM,SAAA3E,GACLrW,QAAQC,IAAIoW,GACZzF,EAASyF,EAAExW,SAAW,8BAA+B,CACjDuR,WAAY,aAIbzD,IACR,IA9CgB,IAgDXxO,EAAO8b,cAAP9b,GACF+b,EAAcC,YAAc,CAC9BhY,KAAMqD,EAAeR,OACrBoV,QAAQ,EACR1S,OAAO,IAEL2S,EAAgBF,YAAc,CAChChY,KAAMqD,EAAeP,WAgBzB,OAbAqI,qBAAU,WACN,GAAInP,EACA,GAAI+b,EAAa,CACb,IAAMd,EAAWpU,EAAOqT,MAAK,SAAA/G,GAAC,OAAIA,EAAEnT,KAAOA,KAC3Ca,QAAQC,IAAId,EAAI,WAAY+b,EAAaG,EAAe,aAAcjB,GACtEnS,EAAS,2BAAK1H,GAAN,IAAa6Z,SAAUA,GAAY,aACxC,GAAIiB,EAAe,CACtB,IAAMjB,EAAWnU,EAASoT,MAAK,SAAA/G,GAAC,OAAIA,EAAEnT,KAAOA,KAC7C8I,EAAS,2BAAK1H,GAAN,IAAa6Z,SAAUA,GAAY,WAGpD,CAACvT,EAAUb,EAAQC,IAGlB,yBAAKI,UAAU,2DACX,kBAACsT,GAAD,CAAaC,WAAY5T,EAAQ6T,aAAc5T,EAAU6T,YAAa,kBAAM7R,EAAS,2BAAK1H,GAAN,IAAa4Z,WAAW,MAAS9T,UAAU,kEAC/H,kBAAC6J,GAAD,CAAWC,SAAU,SAAC7E,GACC,aAAfA,EAAI1H,OACJ0W,EAAYrU,EAASwT,QAAO,SAAAnH,GAAC,OAAIA,EAAEnT,KAAOmM,EAAInM,OAE9Ckb,EAAUrU,EAAOyT,QAAO,SAAAnH,GAAC,OAAIA,EAAEnT,KAAOmM,EAAInM,OAE9C8I,EAAS,2BAAK1H,GAAN,IAAa6Z,SAAU,SAE/B9O,IAAKnM,EAAKoB,EAAM6Z,SAAW,KAAM/T,UAAU,iDAC9C9F,EAAM4Z,UACH,kBAAC/C,GAAD,CAAWvR,KAAMtF,EAAM4Z,UAAW9C,QAAS,kBAAMpP,EAAS,2BAAK1H,GAAN,IAAa4Z,WAAW,MAAU7C,WAAY,WACnGrP,EAAS,2BAAK1H,GAAN,IAAa4Z,WAAW,QAElC,M,mCCzEX,SAASmB,KACZ,IAAMnV,EAAMC,qBAAWd,GADI,EAEDyC,mBAAS,CAC/BoS,WAAW,EACXoB,iBAAiB,EACjBC,cAAc,EACdC,oBAAoB,EACpBvJ,SAAS,IAPc,mBAEpB3R,EAFoB,KAEb0H,EAFa,OASOF,mBAAoB,CAClDtH,MAAO,GACPU,WAAY,GACZC,UAAW,GACXV,SAAU,GACVwE,gBAAiB,GACjBzD,aAAc,KAfS,mBASpBia,EAToB,KASTC,EATS,KAkBnB/K,EAAaC,uBAAbD,SACFgL,EAAUC,cACVhV,EAAWC,cAEXyR,EAAWvH,sBAAW,uCAAC,WAAOqF,GAAP,eAAArY,EAAA,6DACzBqY,EAAEoC,iBACFpC,EAAEmC,kBAEFvQ,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAJL,kBAOE/L,EAAI2V,SAASJ,GAPf,WAOfjc,EAPe,SASHA,EAASmF,QATN,sBAUX,IAAIjF,MAAM,4BAVC,OAYrBiR,EAAS,gCAAiC,CACtCQ,WAAY,YAEhBnJ,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAC9B0J,EAAQnO,KAAKjH,EAAaK,EAAStG,OAhBd,kDAkBrBP,QAAQC,IAAR,MACA2Q,EAAS,KAAE/Q,SAAW,0BAA2B,CAC7CuR,WAAY,UAEhBnJ,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAtBT,0DAAD,sDAwBzB,CAAC3R,EAAOmb,IAGX,OACI,yBAAKrV,UAAU,WACX,4BAAQA,UAAU,yBAAyB6B,MAAO,CAAE6T,OAAQ,SACxD,yBAAK1M,IAAK2M,KAAM3V,UAAU,gBAG9B,uBAAGA,UAAU,kCAAb,2DAEA,0BAAMA,UAAU,OAAOkS,SAAUA,GAC7B,yBAAKlS,UAAU,uBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,2BACX,2BAAO6P,aAAa,aAAapE,SAAUvR,EAAM2R,QAASkD,UAAQ,EAAC5F,MAAOkM,EAAUva,WAAY+T,SAAU,SAACmB,GAAD,OAAOsF,EAAa,2BAAKD,GAAN,IAAiBva,WAAYkV,EAAEE,OAAO/G,UAAU3G,YAAY,kBAAkBxC,UAAU,QAAQuC,KAAK,SAClO,0BAAMvC,UAAU,yBAAwB,kBAAC,KAAD,SAGhD,yBAAKA,UAAU,SACX,yBAAKA,UAAU,2BACX,2BAAO6P,aAAa,cAAcpE,SAAUvR,EAAM2R,QAASkD,UAAQ,EAAC5F,MAAOkM,EAAUta,UAAW8T,SAAU,SAACmB,GAAD,OAAOsF,EAAa,2BAAKD,GAAN,IAAiBta,UAAWiV,EAAEE,OAAO/G,UAAU3G,YAAY,iBAAiBxC,UAAU,QAAQuC,KAAK,SAChO,0BAAMvC,UAAU,yBAAwB,kBAAC,KAAD,WAMxD,yBAAKA,UAAU,SACX,yBAAKA,UAAU,2BACX,2BAAO6P,aAAa,MAAMpE,SAAUvR,EAAM2R,QAASkD,UAAQ,EAAC5F,MAAOkM,EAAUjb,MAAOyU,SAAU,SAACmB,GAAD,OAAOsF,EAAa,2BAAKD,GAAN,IAAiBjb,MAAO4V,EAAEE,OAAO/G,UAAU3G,YAAY,2BAA2BxC,UAAU,QAAQuC,KAAK,UAC1N,0BAAMvC,UAAU,yBAAwB,kBAAC,KAAD,SAIhD,yBAAKA,UAAU,SACX,yBAAKA,UAAU,2BACX,2BAAO6P,aAAa,MAAMpE,SAAUvR,EAAM2R,QAASkD,UAAQ,EAAC5F,MAAOkM,EAAUja,aAAcyT,SAAU,SAACmB,GAAD,OAAOsF,EAAa,2BAAKD,GAAN,IAAiBja,aAAc4U,EAAEE,OAAO/G,UAAU3G,YAAY,+CAA+CxC,UAAU,QAAQuC,KAAK,QAC5P,0BAAMvC,UAAU,yBAAwB,kBAAC,KAAD,SAIhD,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,sCACX,2BAAO6P,aAAa,MAAMpE,SAAUvR,EAAM2R,QAASkD,UAAQ,EAAC5F,MAAOkM,EAAUhb,SAAUwU,SAAU,SAACmB,GAAD,OAAOsF,EAAa,2BAAKD,GAAN,IAAiBhb,SAAU2V,EAAEE,OAAO/G,UAAU3G,YAAY,sBAAsBxC,UAAU,QAAQuC,KAAMrI,EAAMib,aAAe,OAAS,aAC1P,0BAAMnV,UAAU,yBAAwB,kBAAC,KAAD,QAE5C,yBAAKA,UAAU,WACX,4BAAQA,UAAU,SAASuC,KAAK,SAASN,QAAS,SAAC+N,GAAD,OAAOpO,EAAS,2BAAK1H,GAAN,IAAaib,cAAejb,EAAMib,kBAAkBjb,EAAMib,aAAe,kBAAC,KAAD,MAAiB,kBAAC,KAAD,SAKnK,yBAAKnV,UAAU,oBACX,yBAAKA,UAAU,sCACX,2BAAO6P,aAAa,MAAMpE,SAAUvR,EAAM2R,QAASkD,UAAQ,EAAC5F,MAAOkM,EAAUxW,gBAAiBgQ,SAAU,SAACmB,GAAD,OAAOsF,EAAa,2BAAKD,GAAN,IAAiBxW,gBAAiBmR,EAAEE,OAAO/G,UAAU3G,YAAY,yBAAyBxC,UAAU,QAAQuC,KAAMrI,EAAMkb,mBAAqB,OAAS,aACjR,0BAAMpV,UAAU,yBAAwB,kBAAC,KAAD,QAE5C,yBAAKA,UAAU,WACX,4BAAQA,UAAU,SAASuC,KAAK,SAASN,QAAS,SAAC+N,GAAD,OAAOpO,EAAS,2BAAK1H,GAAN,IAAakb,oBAAqBlb,EAAMkb,wBAAwBlb,EAAMkb,mBAAqB,kBAAC,KAAD,MAAiB,kBAAC,KAAD,WAQ7L,yBAAKpV,UAAU,cACX,yBAAKA,UAAU,WACX,4BAAQyL,SAAUvR,EAAM2R,QAAS7L,UAAS,iEAA4D9F,EAAM2R,QAAU,aAAe,IAAMtJ,KAAK,UAC5I,kBAAC,KAAD,MADJ,oBAOZ,yBAAKvC,UAAU,0BACX,uDACA,kBAAC,KAAD,CAAME,GAAIC,GAAV,yBAQT,SAASyV,KACZ,IAAM9V,EAAMC,qBAAWd,GADC,GAERc,qBAAWZ,GACDuC,mBAAS,CAC/BwT,iBAAiB,EACjBrJ,SAAS,EACTlO,MAAO,MANa,mBAGjBzD,EAHiB,KAGV0H,EAHU,KAShB2I,EAAaC,uBAAbD,SAMFsL,EAAsBlL,sBAAW,uCAAC,WAAOmL,GAAP,SAAAne,EAAA,6DACpCiK,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KADM,kBAK1B/L,EAAIiW,eAAeD,EAAKnY,OALE,uBAObmC,EAAIkW,oBAAoBF,EAAKnY,MAA7B,OAAoCmY,QAApC,IAAoCA,OAApC,EAAoCA,EAAM5X,SAP7B,uCAUtB,IAAI5E,MAAM,kCAVY,cAahCiR,EAAS,wCAAyC,CAC9CQ,WAAY,YAEhBnJ,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,EAAOlO,MAAOmY,EAAKnY,SAhBjB,mBAiBzB,GAjByB,yCAmBhChE,QAAQC,IAAR,MACA2Q,EAAS,KAAE/Q,SAAW,uBAAwB,CAC1CuR,WAAY,UAEhBnJ,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAvBE,mBAwBzB,GAxByB,0DAAD,sDA0BpC,CAAC3R,IAKE+b,EAAmBtL,sBAAW,uCAAC,WAAOmL,GAAP,SAAAne,EAAA,6DACjCiK,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KADG,kBAIV/L,EAAIoW,MAAMJ,EAAK1a,aAAc0a,EAAKzX,KAAMyX,EAAKzb,UAJnC,uCAOnB,IAAIf,MAAM,oBAPS,cAU7BiR,EAAS,oBAAqB,CAC1BQ,WAAY,YAEhBnJ,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KAbD,mBActB,GAdsB,yCAgB7BlS,QAAQC,IAAR,MACA2Q,EAAS,KAAE/Q,SAAW,gBAAiB,CACnCuR,WAAY,UAEhBnJ,EAAS,2BAAK1H,GAAN,IAAa2R,SAAS,KApBD,mBAqBtB,GArBsB,0DAAD,sDAuBjC,CAAC3R,IAGJ,OACI,yBAAK8F,UAAU,WACX,4BAAQA,UAAU,yBAAyB6B,MAAO,CAAE6T,OAAQ,SACxD,yBAAK1M,IAAK2M,KAAM3V,UAAU,gBAG9B,uBAAGA,UAAU,kCAAb,2DAEC9F,EAAMgb,gBACH,kBAACiB,GAAD,CAAiBlF,WAAY,kBAAMrP,EAAS,2BAAK1H,GAAN,IAAagb,iBAAiB,MAAUrJ,QAAS3R,EAAM2R,QAASqG,SAAU2D,IAEjH,kBAACO,GAAD,CAAWtM,SAAU,kBAAMlI,EAAS,2BAAK1H,GAAN,IAAagb,iBAAiB,MAASrJ,QAAS3R,EAAM2R,QAASlO,MAAOzD,EAAMyD,MAAOuU,SAAU+D,IAGxI,yBAAKjW,UAAU,0BACX,kDACA,kBAAC,KAAD,CAAME,GAAIC,GAAV,oBAOhB,SAASgW,GAAT,GAA6D,IAWrDE,EAXmBnE,EAAiC,EAAjCA,SAAUrG,EAAuB,EAAvBA,QAASoF,EAAc,EAAdA,WAAc,EAC9BvP,mBAAS,CAC/B/D,MAAO,GACPO,QAAS,QAH2C,mBACjDhE,EADiD,KAC1C0H,EAD0C,OAK3BF,mBAAS,CAClC4U,aAAa,EACbC,MAAM,EACNC,UAAW,IARyC,mBAKjDC,EALiD,KAKtCC,EALsC,KAalDC,EAAehM,sBAAW,uCAAC,WAAOqF,GAAP,eAAArY,EAAA,6DAC7BqY,EAAEoC,iBACFpC,EAAEmC,kBAF2B,SAKPD,EAAShY,GALF,gBAOrB0c,EAAU,GAEdC,cAAcR,GACdA,EAAaS,aAAY,WACrB,GAAgB,IAAZF,EAGA,OAFAC,cAAcR,QACdK,EAAQ,2BAAKD,GAAN,IAAiBF,MAAM,EAAOD,aAAa,EAAME,UAAWI,KAGvEF,EAAQ,2BAAKD,GAAN,IAAiBF,MAAM,EAAMC,UAAWI,EAASN,aAAa,KACrEM,MACD,MAlBsB,2CAAD,sDAoB7B,CAAC1c,EAAOuc,IAEX,OACI,0BAAMvE,SAAUyE,GACZ,yBAAK3W,UAAU,SACX,yBAAKA,UAAU,2BACX,2BAAO6P,aAAa,MAAMpE,SAAUI,GAAW4K,EAAUF,KAAMxH,UAAQ,EAAC5F,MAAOjP,EAAMyD,MAAOkR,SAAU,SAACmB,GAAD,OAAOpO,EAAS,2BAAK1H,GAAN,IAAayD,MAAOqS,EAAEE,OAAO/G,UAAU3G,YAAY,0BAA0BxC,UAAU,mBAAmBuC,KAAK,QACpO,0BAAMvC,UAAU,yBAAwB,kBAAC,KAAD,SAIhD,yBAAKA,UAAU,cACX,yBAAKA,UAAU,WACVyW,EAAUH,YAEH,4BAAQrU,QAASgP,EAAYxF,SAAUI,EAAS7L,UAAS,oDAA+C6L,EAAU,aAAe,IAAMtJ,KAAK,UACxI,kBAAC,KAAD,MADJ,gBAIA,4BAAQkJ,SAAUI,GAAW4K,EAAUF,KAAMvW,UAAS,iDAA4C6L,EAAU,aAAe,IAAMtJ,KAAK,UAC/G,QAAlBrI,EAAMgE,QAAoB,oCAAE,kBAAC,KAAD,MAAF,kBAAiC,oCAAE,kBAAC,KAAD,MAAF,mBAOhF,yBAAK8B,UAAU,mBAEVyW,EAAUH,YACP,oCACI,uBAAGtW,UAAU,kBAAb,oBAAgDyW,EAAUF,KAAO,0BAAMvW,UAAU,mBAAhB,iBAAiDyW,EAAUD,UAA3D,KAAgF,MACjJ,yBAAKxW,UAAU,0CACX,4BAAQiC,QAAS,WACbyU,EAAQ,2BAAKD,GAAN,IAAiBH,aAAa,MACtC7K,SAAUI,GAAW4K,EAAUF,KAAMvW,UAAS,mFAAsFuC,KAAK,UACxI,0BAAMvC,UAAU,aAAhB,cAEJ,4BAAQiC,QAAS,WACbL,EAAS,2BAAK1H,GAAN,IAAagE,QAA2B,QAAlBhE,EAAMgE,QAAoB,OAAS,SACjEwY,EAAQ,2BAAKD,GAAN,IAAiBH,aAAa,MACtC7K,SAAUI,GAAW4K,EAAUF,KAAMvW,UAAS,mFAAsFuC,KAAK,UACxI,0BAAMvC,UAAU,aAAhB,IAAgD,QAAlB9F,EAAMgE,QAAoB,YAAc,cAIlF,OAQpB,SAASkY,GAAT,GAA4D,IAAvCzY,EAAsC,EAAtCA,MAAOkO,EAA+B,EAA/BA,QAASqG,EAAsB,EAAtBA,SAAUpI,EAAY,EAAZA,SAAY,EAC7BpI,mBAAiB,CACvCrD,KAAM,GACNjD,aAAcuC,EACdtD,SAAU,GACV8a,cAAc,IALqC,mBAChDjb,EADgD,KACzC0H,EADyC,KAQjD+U,EAAehM,sBAAW,uCAAC,WAAOqF,GAAP,SAAArY,EAAA,6DAC7BqY,EAAEoC,iBACFpC,EAAEmC,kBAF2B,SAIvBD,EAAShY,GAJc,2CAAD,sDAK7B,CAACA,IAEJ,OACI,0BAAMgY,SAAUyE,GACZ,yBAAK3W,UAAU,SACX,yBAAKA,UAAU,0BACX,2BAAO6P,aAAa,MAAMpE,UAAQ,EAACsD,UAAQ,EAAC5F,MAAOjP,EAAMkB,aAAcoH,YAAY,0BAA0BxC,UAAU,QAAQuC,KAAK,QACpI,0BAAMvC,UAAU,yBAAwB,kBAAC,KAAD,SAGhD,yBAAKA,UAAU,SACX,yBAAKA,UAAU,0BACX,2BAAO6P,aAAa,MAAMkH,QAAS,SAAU9T,IAAK,KAAMoM,UAAW,EAAG2H,UAAW,EAAGvL,SAAUvR,EAAM2R,QAASkD,UAAQ,EAAC5F,MAAOjP,EAAMmE,KAAMwQ,SAAU,SAACmB,GAAD,OAAOpO,EAAS,2BAAK1H,GAAN,IAAamE,KAAM2R,EAAEE,OAAO/G,UAAU3G,YAAY,sBAAsBxC,UAAU,QAAQuC,KAAK,WACjQ,0BAAMvC,UAAU,yBAAwB,kBAAC,KAAD,SAGhD,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,sCACX,2BAAO6P,aAAa,MAAMpE,SAAUvR,EAAM2R,QAASkD,UAAQ,EAAC5F,MAAOjP,EAAMG,SAAUwU,SAAU,SAACmB,GAAD,OAAOpO,EAAS,2BAAK1H,GAAN,IAAaG,SAAU2V,EAAEE,OAAO/G,UAAU3G,YAAY,sBAAsBxC,UAAU,QAAQuC,KAAMrI,EAAMib,aAAe,OAAS,aAC9O,0BAAMnV,UAAU,yBAAwB,kBAAC,KAAD,QAE5C,yBAAKA,UAAU,WACX,4BAAQA,UAAU,SAASuC,KAAK,SAASN,QAAS,SAAC+N,GAAD,OAAOpO,EAAS,2BAAK1H,GAAN,IAAaib,cAAejb,EAAMib,kBAAkBjb,EAAMib,aAAe,kBAAC,KAAD,MAAiB,kBAAC,KAAD,SAInK,yBAAKnV,UAAU,cACX,yBAAKA,UAAU,+BACX,4BAAQiC,QAAS6H,EAAU2B,SAAUI,EAAS7L,UAAS,qDAAwDuC,KAAK,UAChH,kBAAC,KAAD,MADJ,aAGA,4BAAQkJ,SAAUI,EAAS7L,UAAS,oDAA+C6L,EAAU,aAAe,IAAMtJ,KAAK,UACnH,kBAAC,KAAD,MADJ,iBC9Xb,SAAS0U,KACZ,IAAM1W,EAAUR,qBAAWZ,GADP,EAEMuC,mBAAS,CAAEoS,WAAW,IAF5B,6BAcpB,OAVA7L,qBAAU,WAIN,OAHA1H,EAAQhB,aAAY,GACpBgB,EAAQd,YAAW,GAEZ,WACHc,EAAQhB,aAAY,GACpBgB,EAAQd,YAAW,OAKvB,kBAACmB,GAAD,KACI,yBAAKZ,UAAU,iDACX,yBAAKA,UAAU,iDACX,kBAAC4V,GAAD,OAEJ,yBAAK5V,UAAU,8DCrBxB,SAASkX,KACZ,IAAMpX,EAAMC,qBAAWd,GACjBsB,EAAUR,qBAAWZ,GAa3B,OAXA8I,qBAAU,WAKN,OAJA1H,EAAQjB,aAAY,GACpBiB,EAAQhB,aAAY,GACpBO,EAAIrC,SAEG,WACH8C,EAAQhB,aAAY,GACpBgB,EAAQjB,aAAY,MAEzB,IAEEiB,EAAQlB,UAOTkB,EAAQlB,SAAW,qCANZ,kBAAC,IAAD,CAAUa,GAAI,CAAEQ,SAAU,O,cCVlC,SAASyW,GAAT,GAA8D,IAAnC3d,EAAkC,EAAlCA,QACxB8O,EAAOC,KAAOkC,KAAKjR,EAAQ+S,UAAY,KAC7C,OACI,kBAAC,KAAD,CAASjK,gBAAgB,YAAYpC,GAAI,KAAMF,UAAS,0EACpD,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,2BAA2B6B,MAAO,CAAEkH,eAAgB,WAC/D,4BAAQ/I,UAAU,0BACd,yBAAKA,UAAU,aAAagJ,IAAKxP,EAAQ4d,OAAOC,oBAGxD,yBAAKrX,UAAU,UACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,mEACX,qCAAOxG,EAAQ4d,OAAOtd,UAAtB,YAAmCN,EAAQ4d,OAAOrd,YAEtD,yBAAKiG,UAAU,yBACX,2BAAIsI,EAAKY,cAGjB,yBAAKlJ,UAAU,yBACX,2BAAIxG,EAAQkC,eAUrC,SAAS4b,GAAT,GAAmE,IAAD,IAA3C7D,mBAA2C,MAA7B,aAA6B,MAAlBzT,iBAAkB,MAAN,GAAM,EACrE,OACI,yBAAKA,UAAS,UAAKA,EAAL,sDACV,yBAAKA,UAAU,sCACX,uBAAGA,UAAU,iBAAb,mBACA,yBAAKA,UAAU,qCACX,4BAAQA,UAAU,oBAAoBiC,QAASwR,GAAa,kBAAC,KAAD,OAC5D,4BAAQzT,UAAU,oBAAoBiC,QAASwR,GAAa,kBAAC,KAAD,SAGpE,yBAAKzT,UAAU,eACX,yBAAKA,UAAU,mBAAmB6B,MAAO,CAAEiH,KAAM,IAC7C,yBAAK9I,UAAU,sCACX,2BAAO6B,MAAO,CAAEsO,YAAa,GAAKnQ,UAAU,mBAAmBuC,KAAK,SAASC,YAAY,uBACzF,0BAAMxC,UAAU,gBAAe,kBAAC,KAAD,QAEnC,yBAAKA,UAAU,WACX,4BAAQ6B,MAAO,CAAEqI,WAAY,GAAKlK,UAAU,oBAAoBiC,QAAS,kBAAM2I,OAAO8I,MAAM,mBACxF,0BAAM1T,UAAU,iBAAgB,kBAAC,KAAD,WAKhD,yBAAKA,UAAU,2BAA2B6B,MAAO,CAAE8R,UAAW,OAAQjK,UAAW,WAEzE6N,GAAenR,KAAI,SAAAoR,GAAC,OAAI,kBAACL,GAAD,CAAiB3d,QAASge,SAO/D,SAASC,GAAT,GAAsH,IAA7Fje,EAA4F,EAA5FA,QAASwG,EAAmF,EAAnFA,UAAW0X,EAAwE,EAAxEA,QAChD,OAAKle,GAAYke,EAWb,yBAAK1X,UAAS,UAAKA,EAAL,oBAAkC6B,MAAO,CAAEgH,cAAe,WACpE,yBAAK7I,UAAU,+BACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,6CAAf,UAA+D0X,EAAQ5d,UAAvE,YAAoF4d,EAAQ3d,WAC5F,yBAAKiG,UAAU,4BAA4B6B,MAAO,CAAEkH,eAAgB,aAChE,4BAAQ/I,UAAU,qBAAoB,kBAAC,KAAD,SAG9C,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,+CAGf,yBAAKA,UAAU,sDAvB3B,yBAAKA,UAAS,UAAKA,EAAL,oBAAkC6B,MAAO,CAAEgH,cAAe,WACpE,yBAAK7I,UAAU,mEACX,0BAAMA,UAAU,QAAQ,kBAAC,KAAD,CAAY+J,KAAK,OAAOlI,MAAO,CAAEL,OAAQ,OAAQ0G,MAAO,WAChF,uBAAGlI,UAAU,+CAAb,sCAuCb,IAAMuX,GAA6B,CACtC,CACI7b,QAAS,QACT0b,OAAQ9b,EACRiR,UAAWhR,KAAKC,MAChB+G,KAAM,OACNzJ,GAAI,aCzHL,SAAS6e,KACZ,OACI,yBAAK3X,UAAU,2DACX,kBAACsX,GAAD,CAAa7D,YAAa,aAAWzT,UAAU,qDAC/C,kBAACyX,GAAD,CAAeje,QAAS+d,GAAgBG,QAASpc,EAAY0E,UAAU,qCCF5E,SAAS4X,KACZ,IAAMrX,EAAUR,qBAAWZ,GADJ,EAEGuC,mBAAS,CAAEoS,WAAW,IAFzB,gCAGWpS,mBAAS,CACvC5G,WAAY,GACZC,UAAW,GACXV,SAAU,GACVwE,gBAAiB,GACjBzE,MAAO,GACPgB,aAAc,GACd+Z,cAAc,EACdC,oBAAoB,KAXD,6BAwBvB,OAVAnN,qBAAU,WAIN,OAHA1H,EAAQhB,aAAY,GACpBgB,EAAQd,YAAW,GAEZ,WACHc,EAAQd,YAAW,GACnBc,EAAQhB,aAAY,OAKxB,kBAACqB,GAAD,KACI,yBAAKZ,UAAU,iDACX,yBAAKA,UAAU,iDACX,kBAACiV,GAAD,OAEJ,yBAAKjV,UAAU,iEC7BxB,SAAS6X,GAAT,GAAsD,IAA5BrL,EAA2B,EAA3BA,MAA2B,IAApBnM,gBAAoB,MAAT,qCAAS,EACxD,OACI,yBAAKL,UAAU,sCACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,yEAAyEwM,IAEzFnM,GAKN,SAASyX,KACA/X,qBAAWd,GAGvB,OACI,yBAAKe,UAAU,2DACX,yBAAKA,UAAS,gBAAmB6B,MAAO,CAAEgH,cAAe,SAAUC,KAAM,IACrE,yBAAK9I,UAAU,4DAA4D6B,MAAO,CAAEgH,cAAe,WAC/F,yBAAK7I,UAAU,kBAAkB6B,MAAO,CAAEb,UAAW,0CACjD,yBAAKhB,UAAU,6BACX,uBAAGA,UAAU,6CAAb,cAGR,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,4BAA4B6B,MAAO,CAAEkW,SAAU,IAC1D,yBAAK/X,UAAU,8CACX,yBAAKA,UAAU,aACX,kBAAC,KAAD,CAASA,UAAU,iBAAiBsC,gBAAgB,YAAYpC,GAAIC,EAAwBkC,OAAK,GAC7F,yBAAKrC,UAAU,gCACX,uBAAGA,UAAU,QAAb,wBAGR,kBAAC,KAAD,CAASA,UAAU,iBAAiBsC,gBAAgB,YAAYpC,GAAIC,GAChE,yBAAKH,UAAU,gCACX,uBAAGA,UAAU,QAAb,qBAGR,kBAAC,KAAD,CAASA,UAAU,iBAAiBsC,gBAAgB,YAAYpC,GAAIC,GAChE,yBAAKH,UAAU,gCACX,uBAAGA,UAAU,QAAb,yBAGR,kBAAC,KAAD,CAASA,UAAU,iBAAiBsC,gBAAgB,YAAYpC,GAAIC,IAChE,yBAAKH,UAAU,gCACX,uBAAGA,UAAU,QAAb,uBAKhB,yBAAKA,UAAU,uDACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOlD,KAAMqD,EAAwBkC,OAAK,EAACuR,OAAQ,kBAC/C,kBAACoE,GAAD,SAEJ,kBAAC,IAAD,CAAOlb,KAAMqD,EAAsBkC,OAAK,EAACuR,OAAQ,kBAC7C,kBAACqE,GAAD,SAEJ,kBAAC,IAAD,CAAOnb,KAAMqD,GAAsBkC,OAAK,EAACuR,OAAQ,kBAC7C,kBAACsE,GAAD,SAEJ,kBAAC,IAAD,CAAOtE,OAAQ,kBACX,yBAAK5T,UAAU,4DACX,yBAAKA,UAAU,yBACX,0BAAMA,UAAU,QAAQ,kBAAC,KAAD,CAAQ+J,KAAK,OAAOlI,MAAO,CAAEL,OAAQ,OAAQ0G,MAAO,WAC5E,uBAAGlI,UAAU,+CAAb,mCAezC,SAASgY,KAAoB,IAAD,QACzBlY,EAAMC,qBAAWd,GADQ,EAELyC,mBAAS,CAC/BtH,MAAK,UAAE0F,EAAIpG,YAAN,aAAE,EAAUU,MAAO+d,WAAW,EAAOC,gBAAgB,EAC1Dzf,qBAAqB,UAAAmH,EAAIpG,YAAJ,eAAUf,qBAAsB8R,iBAAK,UAAA3K,EAAIpG,YAAJ,eAAUf,qBAAsB,KAAQ,OAJvE,mBAExBuB,EAFwB,KAEjB0H,EAFiB,KAO/B,OACI,kBAACiW,GAAD,CAAgBrL,MAAO,qBAAsBnM,SACzC,oCACI,yBAAKL,UAAU,WACX,yBAAKA,UAAU,iDACX,uBAAGA,UAAU,gDAAgD6B,MAAO,CAAEwJ,OAAQ,IAA9E,iBACA,uBAAGrL,UAAU,0BAAb,4CAEJ,yBAAKA,UAAU,kDACX,yBAAKA,UAAS,WACV,2BAAOA,UAAS,gBAAW9F,EAAMie,UAAY,GAAK,YAAlC,qEAAkHhP,MAAOjP,EAAME,MAAOie,iBAAiB,EAAO5M,UAAWvR,EAAMie,UAAWtJ,SAAU,SAAAmB,GAAC,OAAIpO,EAAS,2BAAK1H,GAAN,IAAaE,MAAO4V,EAAEE,OAAO/G,aAElQ,yBAAKnJ,UAAU,qCACX,yBAAKA,UAAU,WACX,4BAAQA,UAAU,SAASiC,QAAS,kBAAML,EAAS,2BAAK1H,GAAN,IAAaie,WAAYje,EAAMie,eAAjF,WAEHje,EAAMie,UACH,yBAAKnY,UAAU,WACX,4BAAQA,UAAS,yBAAoB9F,EAAMke,eAAiB,aAAe,IAAMnW,QAAS,WACtFL,EAAS,2BAAK1H,GAAN,IAAake,gBAAgB,OADzC,WAIJ,QAIhB,yBAAKpY,UAAU,WACX,yBAAKA,UAAU,iDACX,uBAAGA,UAAU,gDAAgD6B,MAAO,CAAEwJ,OAAQ,IAA9E,gBACA,uBAAGrL,UAAU,0BAAb,+CAEJ,yBAAKA,UAAU,kDACX,yBAAKA,UAAS,WACV,2BAAOA,UAAS,mFAAsFyL,UAAQ,EAACtC,MAAK,UAAErJ,EAAIpG,YAAN,aAAE,EAAUY,eAEpI,uBAAG0F,UAAU,0BAAb,sEAIR,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iDACX,uBAAGA,UAAU,gDAAgD6B,MAAO,CAAEwJ,OAAQ,IAA9E,YACA,uBAAGrL,UAAU,0BAAb,+DAEJ,yBAAKA,UAAU,kDACX,yBAAKA,UAAS,iBACV,4BAAQA,UAAU,iBAAiBiC,QAAS,kBAAML,EAAS,2BAAK1H,GAAN,IAAaie,WAAYje,EAAMie,eAAzF,WAEJ,uBAAGnY,UAAU,0BAA0B9F,EAAMvB,oBAAN,wBAA6CuB,EAAMvB,oBAAoBuQ,YAAe,sBAU9I,SAAS+O,KAAkB,IAAD,MACvBnY,EAAMC,qBAAWd,GADM,EAEHyC,mBAAS,CAC/BtH,MAAK,UAAE0F,EAAIpG,YAAN,aAAE,EAAUU,MAAO+d,WAAW,EAAOC,gBAAgB,EAC1Dzf,qBAAqB,UAAAmH,EAAIpG,YAAJ,eAAUf,qBAAsB8R,iBAAK,UAAA3K,EAAIpG,YAAJ,eAAUf,qBAAsB,KAAQ,OAJzE,6BAO7B,OACI,kBAACkf,GAAD,CAAgBrL,MAAO,kBAAmBnM,SACtC,oCACI,yBAAKL,UAAU,2BACX,yBAAKA,UAAU,iDACX,uBAAGA,UAAU,0CAA0C6B,MAAO,CAAEwJ,OAAQ,IAAxE,oBACA,uBAAGrL,UAAU,0BAAb,wCAEJ,yBAAKA,UAAU,kDACX,uBAAGA,UAAU,oCAAoC6B,MAAO,CAAEwJ,OAAQ,IAAM,uBACxE,kBAAC,KAAD,CAAMnL,GAAE,UAAKC,EAAL,YAAR,YAGR,yBAAKH,UAAU,WACX,yBAAKA,UAAU,iDACX,uBAAGA,UAAU,0CAA0C6B,MAAO,CAAEwJ,OAAQ,IAAxE,mBAGR,yBAAKrL,UAAU,UAAU6B,MAAO,CAAEyW,UAAW,IACzC,yBAAKtY,UAAU,kDACX,yBAAKA,UAAU,4BACX,0BAAMA,UAAU,QACZ,kBAAC,KAAD,CAASiN,KAAM,MAEnB,2CACA,0BAAMjN,UAAU,QACZ,kBAAC,KAAD,CAAgBiN,KAAM,SAKtC,yBAAKjN,UAAU,WACX,yBAAKA,UAAU,kDACX,yBAAKA,UAAU,4BACX,0BAAMA,UAAU,QACZ,kBAAC,KAAD,CAAUiN,KAAM,MAEpB,wCACA,0BAAMjN,UAAU,QACZ,kBAAC,KAAD,CAAgBiN,KAAM,SAKtC,yBAAKjN,UAAU,UAAU6B,MAAO,CAAE6J,aAAc,IAC5C,yBAAK1L,UAAU,kDACX,kBAAC,KAAD,CAAME,GAAE,UAAKC,EAAL,SAAR,+BASjB,SAAS+X,KAAkB,IAAD,MACvBpY,EAAMC,qBAAWd,GADM,EAEHyC,mBAAS,CAC/BtH,MAAK,UAAE0F,EAAIpG,YAAN,aAAE,EAAUU,MAAO+d,WAAW,EAAOC,gBAAgB,EAC1Dzf,qBAAqB,UAAAmH,EAAIpG,YAAJ,eAAUf,qBAAsB8R,iBAAK,UAAA3K,EAAIpG,YAAJ,eAAUf,qBAAsB,KAAQ,OAJzE,6BAO7B,OACI,kBAACkf,GAAD,CAAgBrL,MAAO,kBAAmBnM,SACtC,oCACI,kBAAC,KAAD,CAAMH,GAAE,UAAKC,GAAL,kBAA2CH,UAAU,wCACzD,yBAAKA,UAAU,iDACX,uBAAGA,UAAU,6BAAb,mBAEJ,yBAAKA,UAAU,kDACX,uBAAGA,UAAU,sBAAsB6B,MAAO,CAAEwJ,OAAQ,IAChD,0BAAMrL,UAAU,QAAO,kBAAC,KAAD,UAInC,kBAAC,KAAD,CAAME,GAAE,UAAKC,GAAL,YAAqCH,UAAU,wCACnD,yBAAKA,UAAU,iDACX,uBAAGA,UAAU,6BAAb,mBAEJ,yBAAKA,UAAU,kDACX,uBAAGA,UAAU,sBAAsB6B,MAAO,CAAEwJ,OAAQ,IAChD,0BAAMrL,UAAU,QAAO,kBAAC,KAAD,UAInC,kBAAC,KAAD,CAAME,GAAE,UAAKC,GAAL,UAAmCH,UAAU,wCACjD,yBAAKA,UAAU,iDACX,uBAAGA,UAAU,6BAAb,qBAEJ,yBAAKA,UAAU,kDACX,uBAAGA,UAAU,sBAAsB6B,MAAO,CAAEwJ,OAAQ,IAChD,0BAAMrL,UAAU,QAAO,kBAAC,KAAD,UAInC,kBAAC,KAAD,CAAME,GAAE,UAAKC,GAAL,WAAoCH,UAAU,wCAClD,yBAAKA,UAAU,iDACX,uBAAGA,UAAU,6BAAb,kBAEJ,yBAAKA,UAAU,kDACX,uBAAGA,UAAU,sBAAsB6B,MAAO,CAAEwJ,OAAQ,IAChD,0BAAMrL,UAAU,QAAO,kBAAC,KAAD,aC1KpCuY,OAvEf,WACE,IAAMzY,EAAMC,qBAAWd,GADV,EAEayC,mBAAS,CAAEvJ,OAAO,IAF/B,mBAEN+B,EAFM,KAEC0H,EAFD,OAGuBF,oBAAS,GAHhC,mBAGNjC,EAHM,KAGM+Y,EAHN,OAIuB9W,oBAAS,GAJhC,mBAIN+W,EAJM,KAIQlZ,EAJR,OAKmBmC,mBAAsB,MALzC,mBAOPgX,EAAc,CAClBrZ,SARW,KASXD,YATW,KAUXE,YAAa,SAACnH,GAAD,OAAWyJ,EAAS,2BAAK1H,GAAN,IAAa/B,YAC7CoH,cACAE,WAAY,SAACA,GAAD,OAAgB+Y,EAAc/Y,KAuB5C,OApBAwI,qBAAU,WACRnI,EAAI7D,cAAgB,WACd6D,EAAIT,YACNqZ,EAAYtZ,YAAYU,EAAIpG,OAIhCoG,EAAI9D,eAAiB,kBAAM0c,EAAYtZ,YAAY,OAEnDU,EAAI3H,MAAMsM,MAAK,SAACtM,GACd,IAAKA,EACH,OAAOwB,QAAQC,IAAI,wDAAyD,oCAE9EgI,EAAS,2BAAK1H,GAAN,IAAa/B,OAAO,QAE3Bwc,OAAM,SAAA3E,GACLrW,QAAQC,IAAIoW,QAEf,IAGD,kBAAC7Q,EAAawZ,SAAd,CAAuBxP,MAAOuP,GAC3Bxe,EAAM/B,MACL,oCACGsgB,EAAe,kBAAChX,GAAD,MAAc,KAC9B,yBAAKzB,UAAU,YACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4Y,UAAW3B,GAAOna,KAAMqD,EAAakC,OAAK,IACjD,kBAAC,IAAD,CAAOuW,UAAWhB,GAAU9a,KAAMqD,EAAgBkC,OAAK,IACvD,kBAAC,IAAD,CAAOuW,UAAW1B,GAAQpa,KAAMqD,EAAckC,OAAK,IAEnD,kBAACjC,GAAD,CAAWwY,UAAWd,GAAUhb,KAAMqD,IACtC,kBAACC,GAAD,CAAWwT,OAAQ,SAAC/Q,GAClB,OAAO,kBAAC,IAAD,CAAU3C,GAAI,CAAEQ,SAAUP,EAAkBjG,MAAO2I,EAAMrC,SAAStG,UACxE4C,KAAMqD,EAAYkC,OAAK,IAC1B,kBAAC,IAAD,CAAOuW,UAAW/E,GAAM/W,KAAMqD,EAAeR,SAC7C,kBAACS,GAAD,CAAWwY,UAAW/E,GAAM/W,KAAMqD,EAAeP,WACjD,kBAACQ,GAAD,CAAWwY,UAAWjB,GAAU7a,KAAMqD,IACtC,kBAAC,IAAD,CAAOyY,UAAWzK,GAAWrR,KAAMqD,EAAiBkC,OAAK,IAEzD,kBAAC,IAAD,CAAOvF,KAAMqD,EAAY4U,QAAQ,EAAO1S,OAAO,GAC5CvC,EAAIT,YAAcqZ,EAAYrZ,SAAW,kBAAC,IAAD,CAAUa,GAAIC,IAAsB,kBAAC,IAAD,CAAUD,GAAIC,KAE9F,kBAACC,GAAD,SAILX,EAAa,kBAACI,GAAD,MAAa,MAE7B,kBAACiD,GAAD,QCxEY+V,QACW,cAA7BjO,OAAOpK,SAASnJ,UAEe,UAA7BuT,OAAOpK,SAASnJ,UAEhBuT,OAAOpK,SAASnJ,SAASyhB,MACvB,2DCLNC,IAASnF,OACP,kBAAC,IAAMoF,WAAP,KACE,kBAAC,iBAAD,CAAeC,YAAa,IAAMC,UAAU,cAC1C,kBAAC,KAAD,CAAeC,SAAS,oBACtB,kBAACla,EAAoB0Z,SAArB,CAA8BxP,MAAOrN,GACnC,kBAAC,GAAD,UAKRuY,SAAS+E,eAAe,SDoHpB,kBAAmB9K,WACrBA,UAAU+K,cAAclhB,MACrBsM,MAAK,SAAA6U,GACJA,EAAaC,gBAEd5E,OAAM,SAAA6E,GACL7f,QAAQ6f,MAAMA,EAAMhgB,c","file":"static/js/main.f1cc9d7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { Config } from \".\";\n\nconst CONFIG: Config = {\n    name: 'Gigchasers Admin',\n    description: 'Gigchasers admin dashboard',\n    version: '1.0',\n    hostname: 'https://contractor-app-test-api.herokuapp.com/v1',\n    // hostname: 'http://localhost:3001/v1',\n    Google: {\n        mapKey: 'AIzaSyB8xVAMRa2hoq8lRXEG1wXG3v2yR1KkHsQ'\n    }\n}\n\nexport default CONFIG","import lf from \"localforage\";\nimport { Application } from \".\";\n\nexport const KEYS = {\n    USER_SESSION: 'app.user.session',\n    REFRESH_TOKEN: 'app.user.refreshtoken',\n    APP_DATA: 'app.data'\n}\n\nexport async function initializeStorage(app: Application) {\n    lf.config({\n        driver: [\n            lf.INDEXEDDB,\n            lf.LOCALSTORAGE,\n            lf.WEBSQL\n        ],\n        name: `${app.config.name} v${app.config.version}`,\n        version: 1,\n        storeName: 'adminstore',\n        description: 'Storage for Contractor application administrative interface'\n    })\n\n    await lf.ready()\n}\n\nexport const localforage = lf\n","import { IJobHistory } from \"./job\";\nimport { IEducationHistory, ILicense } from \"./education\";\nimport { Application } from \".\";\n\nexport const DUMMY_TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdlMDFmOTBiMjRmNzAwMTcyZmRkOTQiLCJlbWFpbCI6Inp6QGdtYWlsLmNvbSIsInBob25lX251bWJlciI6IisyMzQ4MDgzODIxNzgyIiwiaWF0IjoxNjE1NjYzNDQ4fQ.nHEwobqCa4yT1z27ydwpSHPg_6s4CEp1QarlJGU1HUo\"\nexport const DUMMY_TOKEN_SECRET = \"secret\"\n\nclass AppUser {\n    id\n    role: string\n    firstName: string\n    lastName: string\n    occupation: string\n    city: string\n    state: string\n    starRate: number = 5.0\n    email: string\n    password?: string\n    phoneNumber: string\n    profilePhoto: string\n    profileBio?: string\n    dateCreated?: Date\n    accountStatus: string = \"Pending\"\n    workHistory: IJobHistory[] = []\n    educationalBackground: IEducationHistory[] = []\n    skills: string[] = []\n    licenses: ILicense[] = []\n\n    constructor(data, raw?: boolean) {\n        if (raw) {\n            this.role = data.role\n            this.firstName = data.first_name\n            this.lastName = data.last_name\n            this.occupation = data.occupation\n            this.starRate = data.star_rate\n            this.dateCreated = data.date_created\n            this.city = data.city\n            this.email = data.email\n            this.accountStatus = data.account_status\n            this.educationalBackground = data.educational_background\n            this.phoneNumber = data.phone_number\n            this.profilePhoto = data.profile_photo\n            this.state = data.state\n            this.skills = data.skills\n        } else {\n            this.role = data.role\n            this.firstName = data.firstName\n            this.lastName = data.lastName\n            this.occupation = data.occupation\n            this.starRate = data.starRate\n            this.dateCreated = data.dateCreated\n            this.city = data.city\n            this.email = data.email\n            this.accountStatus = data.accountStatus\n            this.educationalBackground = data.educationalBackground\n            this.phoneNumber = data.phoneNumber\n            this.profilePhoto = data.profilePhoto\n            this.state = data.state\n            this.skills = data.skills\n        }\n\n        this.id = data.id\n    }\n}\n\nexport class User extends AppUser {\n    get profileImageURL() {\n        return this.profilePhoto\n    }\n    token\n    jobType?: \"onsite\" | \"remote\"\n    activeTask\n    lastPasswordChanged?: number\n\n    constructor(data, raw?: boolean) {\n        super(data, raw)\n        this.token = data.token\n        this.jobType = data.jobType\n        this.activeTask = data.activeTask\n        this.lastPasswordChanged = data.lastPasswordChanged\n    }\n\n    /**\n     * \n     * @param app Application object\n     * @param id Identity of user whose detail will be fetched\n     * @param token Secret token obtained from logging into the application.\n     */\n    static async getUser(app: Application, id: string, token: string) {\n        try {\n            const response = await app.initiateNetworkRequest(`/users/${id}`, {\n                method: 'GET',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    Authorization: `Bearer ${token}`\n                },\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Failed to fetch user data!\")\n            }\n\n            const jsonResponse = await response.json()\n            const user = new User(jsonResponse, true)\n            user.id = id\n            user.token = token\n\n            return user\n\n        } catch (e) {\n            throw e\n        }\n    }\n\n    /**\n       * \n       * @param app Application object\n       * @param id Identity of user whose detail will be fetched\n       */\n    static async getExternalUser(app: Application, id: string): Promise<User> {\n        try {\n            const response = await app.initiateNetworkRequest(`/users/${id}`, {\n                method: 'GET',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }, true)\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Failed to fetch user data!\")\n            }\n\n            const jsonResponse = await response.json()\n            const user = new User(jsonResponse, true)\n            user.id = id\n\n            return user\n        } catch (e) {\n            console.log('failed to fetch user data', e)\n            return new User({})\n        }\n    }\n}\n\nexport const DUMMY_USER: User = new User({})\n\nDUMMY_USER.firstName = \"Johnathan\"\nDUMMY_USER.lastName = \"Doe\"\nDUMMY_USER.id = 'unique'\nDUMMY_USER.email = 'a@example.com'\nDUMMY_USER.profileBio = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ullam vero iure, ducimus, explicabo vel nesciunt eveniet, enim quis quos ex autem!\"\nDUMMY_USER.jobType = 'onsite'\nDUMMY_USER.phoneNumber = '080838111111'\nDUMMY_USER.starRate = 4.2\nDUMMY_USER.lastPasswordChanged = Date.now()\nDUMMY_USER.dateCreated = new Date(\"20/07/2020\")\nDUMMY_USER.skills = ['Farming', 'Poultry']\n// DUMMY_USER.profileImageURL = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTv3f3Zf2onEOPtpRtWPoRX6SWQUSpV_GBB6Q&usqp=CAU\"\n","import React from \"react\";\n\nexport class Message {\n    content\n    sender\n\n    isSameUser(message: Message) {\n        return message.sender === this.sender\n    }\n\n\n    isSameDay(){\n        \n    }\n}\n","import { createContext } from \"react\"\nimport validator from \"validator\"\nimport { IRegister } from \"../components/auth\"\nimport CONFIG from \"./config\"\nimport { initializeStorage, KEYS, localforage } from \"./storage\"\nimport { DUMMY_USER, User } from \"./user\"\nimport { Message } from \"./message\";\n\ninterface ISettings {\n    lastUserName: string\n}\n\nconst DEFAULT_SETTINGS = {\n    lastUserName: ''\n}\n\nexport class Application {\n    config: Config\n    user?: User\n    ready: Promise<boolean>\n\n    protected settings: ISettings = DEFAULT_SETTINGS\n\n    logoutListener?: () => any\n    loginListener?: () => any\n\n    constructor(config: Config) {\n        this.config = config\n        this.ready = new Promise(async (res, rej) => {\n            try {\n                await this.init()\n                res(true)\n            } catch (e) {\n                // if an error occurred during initialization, throw the error and handle within the application\n                console.log(e)\n                return rej(e)\n            }\n        })\n    }\n\n    /**\n     * Initialize application dependencies.\n     * \n     * Dependencies that fail to load should fail silently at this stage, unless required for application to function.\n     */\n    async init() {\n        await initializeStorage(this)\n\n        try {\n            const appData: ISettings | null = await localforage.getItem(KEYS.APP_DATA)\n            if (appData) {\n                this.settings = appData\n            }\n        } catch (e) {\n            console.info(e, 'No app data persisted!')\n        }\n\n        // check for existing user session\n        try {\n            await this.inflateUser()\n            // If user session exists, trigger login listener\n            if (this.loginListener) {\n                this.loginListener()\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n        return true\n    }\n\n\n    signedIn(): boolean {\n        return this.user && this.user?.token\n    }\n\n\n    async updateSettings(options: Partial<ISettings>) {\n        if (!options) {\n            throw new Error('Empty options provided!')\n        }\n        if (JSON.stringify(options) === JSON.stringify(this.settings)) {\n            return\n        }\n\n        this.settings = {\n            ...this.settings,\n            ...options\n        }\n\n        return await localforage.setItem(KEYS.APP_DATA, this.settings)\n    }\n\n    async initiateNetworkRequest(path: string, request?: RequestInit, authenticated = false, isJson = true): Promise<Response> {\n        const headers = {\n            ...request?.headers,\n            Accept: 'application/json',\n            Authorization: authenticated ? `Bearer ${this.user?.token}` : request?.headers?.['Authorization'],\n        }\n\n        if (isJson) {\n            headers['Content-Type'] = 'application/json'\n        }\n        \n        const reqObj: RequestInit = {\n            ...request,\n            referrerPolicy: 'no-referrer',\n            mode: 'cors',\n            headers\n        }\n\n        const resp = await fetch(`${this.config.hostname}${path}`, reqObj)\n        if (resp.status === 401) {\n            if (!this.user) {\n                throw new Error(\"Unauthenticated access not allowed!\")\n            }\n            // Authorization failed. This usually means the token has expired and refresh token could not be used to regenerate token\n            //\n            // Try to reauthenticate the user\n            try {\n                const { token } = await this.reauthenticate()\n                this.user.token = token\n                // since token is generated already, retry the request\n                if (reqObj && reqObj.headers && reqObj.headers['Authorization']) {\n                    reqObj.headers['Authorization'] = `Bearer ${token}`\n                }\n                return await this.initiateNetworkRequest(path, reqObj)\n            } catch (e) {\n                await this.logout()\n                throw e || new Error(\"App session expired. Login to continue!\")\n            }\n        }\n        return resp\n    }\n\n    protected async reauthenticate(): Promise<{ token: string }> {\n        // No logic to reauthenticate. Throw error, forcing user to logout.\n        throw new Error(\"Failed to authenticate user!\")\n    }\n\n    protected async inflateUser() {\n        // inflate user session\n        let session: User | null = await localforage.getItem(KEYS.USER_SESSION)\n        if (!session) throw new Error(\"No session available for user!\")\n\n        this.user = new User(session)\n        return this.user\n    }\n\n    protected async persistUser() {\n        if (!this.user) {\n            throw new Error('No user created!')\n        }\n\n        await localforage.setItem(KEYS.USER_SESSION, this.user)\n    }\n\n    async validateNumber(phone: string) {\n        if (!phone) {\n            throw new Error(\"Phone number must be provided!\")\n        }\n        phone = phone.trim()\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n\n        const response = await this.initiateNetworkRequest(`/users/phone/${encodeURIComponent(phone)}`, {\n            method: 'GET',\n        })\n\n        if (!response.ok) {\n            throw new Error((await response.json())?.message || \"Verification failed!\")\n        }\n\n        const jsonResponse = await response.json()\n        if (!jsonResponse.valid) {\n            throw new Error('Invalid phone number (ensure phone number is associated with a user)!')\n        }\n\n        return true\n    }\n\n    async triggerVerification(phone: string, channel: string = 'sms') {\n        if (!phone) {\n            throw new Error(\"Phone number must be provided!\")\n        }\n        phone = phone.trim()\n\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n\n        const response = await this.initiateNetworkRequest('/users/sms_registration', {\n            method: 'POST',\n            body: JSON.stringify({ phone_number: phone, channel })\n        })\n        if (!response.ok) {\n            throw new Error((await response.json())?.message || \"Verification failed!\")\n        }\n\n        return true\n    }\n\n    async login(username, code, password) {\n        try {\n            await this.validateLogin(username, code, password)\n\n            const response = await this.initiateNetworkRequest('/users/login', {\n                method: 'POST',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({ phone_number: username, code, password })\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Login failed!\")\n            }\n\n            const jsonResponse = await response.json()\n            if (!jsonResponse.success) {\n                throw new Error(\"Login failed!\")\n            }\n            this.user = await User.getUser(this, jsonResponse.userName, jsonResponse.token)\n            if (this.user.role !== 'admin') {\n                // TODO: Decide the kind of users that can access this webapp\n                // throw new Error(\"Authenticated access only allowed for administrators!\")\n            }\n\n            await this.persistUser()\n            if (this.loginListener) {\n                this.loginListener()\n            }\n\n            return this.user\n\n        } catch (e) {\n            throw e\n        }\n    }\n\n    protected async validateLogin(phone: string, code: string, password: string) {\n        if (!phone || !password || !code) {\n            throw new Error(\"Credentials not provided!\")\n        }\n        phone = phone.trim()\n\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n        if (!validator.matches(password, /.{6,}/i)) {\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\n        }\n        if (!validator.matches(code, /[0-9]{4}/)) {\n            throw new Error(\"Invalid code provided (provided code must have 4 digits)!\")\n        }\n    }\n\n    // TODO\n    async addAdmin(data: IRegister) {\n        try {\n            await this.validateRegister(data)\n\n            const response = await this.initiateNetworkRequest('/users/new', {\n                method: 'POST',\n                body: JSON.stringify({\n                    ...data,\n                    role: 'admin',\n                    account_status: 'pending'\n                })\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message)\n            }\n\n            const jsonResponse = await response.json()\n\n            return jsonResponse\n        } catch (e) {\n            throw e\n        }\n    }\n\n    protected async validateRegister(data: IRegister) {\n        let { email, password, first_name, last_name, password_verify, phone_number } = data\n        if (!email || !password) {\n            throw new Error(\"Credentials not provided!\")\n        }\n        if (password !== password_verify) {\n            throw new Error('Passwords do not match!')\n        }\n        email = email.trim()\n        first_name = first_name.trim()\n        last_name = last_name.trim()\n        if (!first_name || !last_name) {\n            throw new Error('Firstname and lastname must be provided!')\n        }\n        if (!email || !validator.isEmail(email)) {\n            throw new Error(\"Invalid username provided!\")\n        }\n        if (!phone_number || !validator.isMobilePhone(phone_number)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone_number.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n        if (!validator.matches(password, /.{6,}/i)) {\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\n        }\n    }\n\n\n    async logout() {\n        new Message()\n        this.user = undefined\n        await localforage.removeItem(KEYS.USER_SESSION)\n        //await localforage.removeItem(KEYS.REFRESH_TOKEN)\n        if (this.logoutListener) {\n            this.logoutListener()\n        }\n    }\n}\n\nexport const DEFAULT_APPLICATION = new Application(CONFIG)\nDEFAULT_APPLICATION.user = DUMMY_USER\n/**\n * This is the application context used within the web application.\n * \n * This context provided the application engine and is not tied to any view rendering.\n * \n * The underlying aplication object exposes the required functions and do not modify the view.\n * This underlying object is made available to all React components via the application context.\n * \n * All view rendering is managed in React.\n * \n * **VIEW RENDERING SHOULD NOT DEPEND ON ANY PROPERTY OF THIS CONTEXT**\n */\nexport const APPLICATION_CONTEXT = createContext<Application>(DEFAULT_APPLICATION)\n\n/**\n * This context is used for managing the views within the web app.\n * Activities such as loading and splashscreen are implemented using this context.\n */\nexport const VIEW_CONTEXT = createContext<{\n    setSignedIn: any,\n    signedIn: null | User,\n    setAppReady: any,\n    showToolbar: any,\n    showFooter: any\n}>({\n    setSignedIn: (signedIn) => { },\n    signedIn: null,\n    setAppReady: (ready: boolean) => { },\n    showToolbar: (show: boolean) => { },\n    showFooter: (footer) => { }\n})\n\nexport interface Config {\n    name: string\n    version: string\n    description: string\n    hostname: string\n    Google: {\n        mapKey: string\n    }\n}\n","export default {\n    register: '/register',\n    login: '/login',\n    messages: '/messages',\n    _messages: '/messages/:id?',\n    home: '/',\n    dashboard: '/dashboard',\n    invoices: '/invoices',\n    jobs: '/jobs',\n    activeJobs: '/jobs/active',\n    inactiveJobs: '/jobs/inactive',\n    _jobItem: {\n        active: '/jobs/active/:id?',\n        inactive: '/jobs/inactive/:id?'\n    },\n    privacyPolicy: '/privacyPolicy',\n    termsOfService: '/terms',\n    profile: '/profile',\n    helpCenter: '/help',\n    logout: '/logout',\n    settings: '/settings',\n    loginAndSecurity: '/settings',\n    paymentMethods: '/settings/payment',\n    additionalFeatures: '/settings/features',\n    legalDocuments: '/settings/legal'\n}","import React, { useContext } from \"react\";\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport links from '../lib/links'\nimport { Link } from \"react-router-dom\";\n\nexport function Footer() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    return (\n        <footer className='footer is-unselectable' >\n            <div className=\"content has-text-centered is-size-7-touch\">\n                <p>&copy; {ctx.config.name} {new Date().getFullYear()}. All Rights Reserved | <Link to={links.privacyPolicy}>Privacy Policy</Link> | <Link to={links.termsOfService}>Terms of Service</Link> </p>\n            </div>\n        </footer>\n    )\n}","import React, { useContext } from \"react\"\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from \"../lib\"\nimport { Redirect, Route, useLocation, useHistory, RouteProps } from \"react-router-dom\"\nimport links from \"../lib/links\"\n\n/**\n * HOC (high order component) for rendering private views only if the user is authenticated.\n * \n * @param children View to render if authenticated\n */\nexport function AuthGuard({ children, ...rest }: RouteProps) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const location = useLocation()\n\n    return (\n        <Route {...rest}>\n            {ctx.signedIn() && viewCTX.signedIn ? (\n                children\n            ) : (\n                    <Redirect to={{\n                        pathname: links.login,\n                        state: {\n                            from: location\n                        }\n                    }} />\n                )\n            }\n        </Route>\n    )\n}\n\n/**\n * HOC for rendering components based on the authenticated state of the application.\n * This HOC is used for conditionally rendering authentication views (like login pages) or redirect if the user is already authenticated.\n * \n * @param children View to render\n */\nexport function AuthHandler({ children }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const location = useLocation()\n\n    if (ctx.signedIn() && viewCTX.signedIn) {\n        const { from } = (location.state as any) || { from: { pathname: '/' } }\n        return <Redirect to={from} />\n    } else {\n        return children\n    }\n}","import React from 'react'\n\nexport const STYLES: { [key: string]: React.CSSProperties } = {\n    toolbar: {\n        boxShadow: \"-2px 2px 3px 0px #8888\",\n        // background: \"#282c34\",\n    },\n    appLogoIcon: {\n        fontSize: '2em',\n        marginRight: '.5em',\n        color: 'blue'\n    },\n    appLogoText: {\n        fontSize: '1.2em',\n        fontWeight: 'bold'\n    },\n    jobProgressBar:{\n        height:'.4em'\n    }\n}","import React, { useState, useContext, useCallback } from 'react'\nimport { STYLES } from '../lib/theme'\nimport { FaJoint, FaUser, FaContao, FaCog, FaSearch } from \"react-icons/fa\";\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\nimport { Link, NavLink } from 'react-router-dom';\nimport links from '../lib/links';\n\n\nconst AUTOHIDE_TIMEOUT = 20000\nlet timer: any\n// TODO: build your own toolbar styling.\n\nexport default function Toolbar() {\n    const [state, setState] = useState({ showMenu: false })\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const vctx = useContext(VIEW_CONTEXT)\n    const toggleMenu = () => {\n        // Clear the existing timer for closing menu and then hide/show the menu\n        clearTimeout(timer)\n        if (state.showMenu) {\n            setState({ ...state, showMenu: false })\n        } else {\n            setState({ ...state, showMenu: true })\n            timer = setTimeout(() => {\n                setState({ ...state, showMenu: false })\n            }, AUTOHIDE_TIMEOUT)\n        }\n    }\n\n    return (\n        <nav className='navbar' role='navigation' style={STYLES.toolbar} aria-label='main navigation'>\n            <div className='navbar-brand'>\n                <Link className='navbar-item' to={links.home}>\n                    <FaContao style={STYLES.appLogoIcon} />\n                    <span style={STYLES.appLogoText}>{ctx.config.name}</span>\n                </Link>\n                <a role=\"button\" className={`navbar-burger burger ${state.showMenu ? 'is-active' : ''}`} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbar\" onClick={toggleMenu}>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n            <div className={`navbar-menu ${state.showMenu ? 'is-active' : ''}`} >\n                <div className='navbar-start'>\n                    <NavLink to={links.dashboard} exact activeClassName='is-active' className='navbar-item is-tab'>Dashboard</NavLink>\n                    <NavLink to={links.messages} activeClassName='is-active' className='navbar-item is-tab'>Messages</NavLink>\n                    <NavLink to={links.invoices} activeClassName='is-active' className='navbar-item is-tab'>Invoices</NavLink>\n                    <NavLink to={links.jobs} activeClassName='is-active' className='navbar-item is-tab'>Jobs</NavLink>\n                </div>\n                <div className='navbar-end'>\n                    <div className='navbar-item'>\n                        <div className='field'>\n                            <p className='control has-icons-left'>\n                                <input className='input is-rounded' type='search' placeholder='Type to search...' />\n                                <span className='icon is-small is-left'><FaSearch className='is-size-5' /></span>\n                            </p>\n                        </div>\n                    </div>\n                    <div className='navbar-item has-dropdown is-hoverable'>\n                        <span className='navbar-link'>\n                            {`${ctx.user?.firstName} ${ctx.user?.lastName}`}\n                        </span>\n                        <div className='navbar-dropdown'>\n                            <Link to={links.profile} className='navbar-item'>Profile</Link>\n                            <Link to={links.helpCenter} className='navbar-item'>Help Center</Link>\n                            <Link to={links.logout} className='navbar-item'>Sign Out</Link>\n                        </div>\n                    </div>\n                    <div className='navbar-item'>\n                        <Link to={links.settings} className='button is-rounded is-light is-fullwidth'><FaCog /></Link>\n                    </div>\n                </div>\n            </div>\n        </nav >\n    )\n}","import React, { ReactChild } from 'react'\nimport { FaExclamationCircle } from 'react-icons/fa';\n\nexport function Empty({ content, icon, onDismiss, text, ...props }: { text?: string, content?: ReactChild, icon?: ReactChild, onDismiss?: any, children?: ReactChild }) {\n    return (\n        <div className='notification px-4 is-light is-uppercase is-warning has-text-centered'>\n            {!!onDismiss && <button onClick={onDismiss} className='delete'></button>}\n            {icon ? icon :\n                <FaExclamationCircle className='has-text-warning-dark is-size-4 mb-2' />\n            }\n            {props.children ?\n                props.children :\n                content ? content :\n                    <p className='block has-text-grey is-size-7'>{text || 'No data'}</p>\n            }\n        </div>\n    )\n}\n\nexport function Loading() {\n    return (\n        <section className='hero is-fullheight is-bold is-flex-centered' style={{ alignItems: 'stretch', padding: '2em' }}>\n            <div className='hero-body is-flex-centered has-text-centered'>\n                <div className='column is-4 is-12-mobile'>\n                    <div className='section px-6'>\n                        <progress className=\"progress is-small is-danger\" max=\"100\">loading</progress>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport function CardFragment({ header, optionsElement, optionsText, onOptionsTextClick, children, style }: { header: string, optionsElement?: React.ReactChild, optionsText?: any, onOptionsTextClick?: any, children?: any, style?: React.CSSProperties }) {\n    return (\n        <div className=\"card\" style={style}>\n            <header className='card-header'>\n                <p className='card-header-title'>{header}</p>\n                <p className='card-header-icon'>\n                    {optionsElement ?\n                        optionsElement :\n                        <span className='has-text-link' onClick={onOptionsTextClick}>\n                            {optionsText}\n                        </span>\n                    }\n                </p>\n            </header>\n            <div className='card-content'>\n                <div className='container is-fluid px-0'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport function debounce(func, wait: number, immediate: boolean = false) {\n    var timeout;\n    return async (...args) => {\n        var later = async () => {\n            timeout = null;\n            if (!immediate) return func(...args)\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) return func(...args)\n    };\n};\n\nexport async function wait(duration = 5000) {\n    await new Promise((res) => {\n        setTimeout(res, duration)\n    })\n}\n\nexport const useEscapeHandler = (callback: any) => {\n    const handler = (ev: KeyboardEvent) => {\n        if (ev.key === 'Escape') {\n            callback()\n        }\n    }\n    window.document.addEventListener('keydown', handler)\n    return () => window.document.removeEventListener('keydown', handler)\n}","import firebase from \"firebase/app\";\n// Required for side-effects\nimport \"firebase/firestore\";\nimport { GeoFirestore } from \"geofirestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjXx1AqIQnkyKkCPh8HZKZYyiKGfiLcbc\",\n  authDomain: \"contracting-app.firebaseapp.com\",\n  databaseURL: \"https://contracting-app.firebaseio.com\",\n  projectId: \"contracting-app\",\n  storageBucket: \"contracting-app.appspot.com\",\n  messagingSenderId: \"557426956160\",\n  appId: \"1:557426956160:web:c1393a9710ed0e40151365\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore(),\n  geoFirestore = new GeoFirestore(firestore)\n\n  firestore.enablePersistence({\n    synchronizeTabs:true\n  })","import { geoFirestore } from \"./firebase\";\nimport firebase from 'firebase'\nimport { useCallback } from \"react\";\nimport { User } from \"./user\";\nimport { Application } from \".\";\n\n\nexport const JOB_MILE_RADIUS = 10\n\nexport interface IJob {\n    id\n    coordinates: firebase.firestore.GeoPoint\n    date_completed: firebase.firestore.Timestamp | null\n    date_created: firebase.firestore.Timestamp\n    g: any\n    executed_by: string\n    job_title: string\n    job_description: string\n    job_type: string\n    location: {\n        coords: {\n            accuracy: number\n            altitude: number\n            altitudeAccuracy: number\n            heading: number\n            latitude: number\n            longitude: number\n            speed: number\n        }\n        timestamp\n    }\n    location_address: any\n    posted_by: string\n    salary: number\n    star_rate: number | null\n    status: \"available\" | \"in review\" | \"accepted\" | \"in progress\" | \"complete\"\n    tasks: { id: string, text: string }[]\n    wage: \"hr\"\n    required_count: number\n    progress?: number\n    user?: User\n}\n\nexport interface IJobHistory {\n    employer_name: string\n    employer_phone_number: string\n    employer_address: string\n    supervisor_name?: string\n    supervisor_title?: string\n    user_position_title?: string\n    date_started: Date\n    date_ended: Date\n    actual_job?: boolean\n    salary?: string\n    wage?: string\n    description?: string\n}\n\nexport class Job {\n    private static db = geoFirestore.collection('jobs')\n    private static types = geoFirestore.collection('types')\n\n    static async getJobTypes(app: Application) {\n        return Job.types.doc('jobs').get().then(async snap => {\n            let types\n            if (snap.exists) {\n                types = snap.data()!.types\n            }\n            return Promise.resolve(types || [])\n        })\n    }\n\n    static async addJobType(app: Application, type: string) {\n        type = type.toLowerCase()\n        return Job.types.doc('jobs').update({\n            types: firebase.firestore.FieldValue.arrayUnion(type)\n        })\n    }\n\n    static async addNewJob(app: Application, job, photos: File[] = []) {\n        if (!job.posted_by || !job.job_title || !job.salary || !job.wage || (!job.location && !job.location_address)) {\n            throw new Error('Complete all required fields to continue!')\n        }\n        if (job.tasks.length < 1) {\n            throw new Error('You must add at least 1 task for this job!')\n        }\n        if (job.job_title.length < 8 || job.job_description.length < 20) {\n            throw new Error(\"Kindly enter a more meaningful title and description!\")\n        }\n        if (job.required_count < 1) {\n            throw new Error(\"Provide the number of people you require for this job!\")\n        }\n        if (job.salary < 0) {\n            throw new Error(\"Salary must be more than $0!\")\n        }\n\n        job.coordinates = new firebase.firestore.GeoPoint(job.location.coords.latitude, job.location.coords.longitude)\n\n        const newDoc = Job.db.doc()\n        let photo_files\n\n        if (photos && photos.length > 0) {\n            // If photo is selected, add the photo\n            const body = new FormData()\n            photos.map((photo) => {\n                body.append(\"photo\", photo);\n            })\n            const apiResponse = await app.initiateNetworkRequest(`/job/upload`, {\n                method: \"POST\",\n                headers: {\n                    \"x-job-id\": newDoc.id,\n                },\n                body,\n            }, true, false)\n\n            if (!apiResponse.ok) {\n                throw new Error((await apiResponse.json()).message || \"Failed to upload job\");\n            }\n\n            photo_files = (await apiResponse.json()).data;\n        }\n\n        job.id = newDoc.id\n        return newDoc.set({ ...job, photo_files })\n    }\n\n    static async cancelJob(ctx: Application, job: IJob) {\n        if (job.status === 'complete') {\n            throw new Error('You cannot cancel a completed job!')\n        }\n\n        if (job.status === 'accepted') {\n            await ctx.initiateNetworkRequest(`users/cancelJob`, {\n                method: 'DELETE',\n                body: JSON.stringify({ jobID: job.id, role: ctx.user?.role })\n            }, true)\n        } else {\n            await Job.db.doc(job.id).delete()\n        }\n        return true\n    }\n\n    static async getInactiveJobs(limit = 20) {\n        return Job.db.where('status', '==', \"complete\").native.orderBy('date_created', 'desc').limit(limit).get().then(async snap => {\n            const jobs: IJob[] = []\n            snap.forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            return Promise.resolve(jobs)\n        })\n    }\n\n    static async getActiveJobs(limit = 20) {\n        return Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"]).native.orderBy('date_created', 'desc').limit(limit).get().then(async snap => {\n            const jobs: IJob[] = []\n            snap.forEach(async doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            return Promise.resolve(jobs)\n        })\n    }\n\n    static listenForActiveAndPendingJobs(callback, limit = 100) {\n        const unsubscribe = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"]).limit(limit).onSnapshot(async snap => {\n            const jobs: IJob[] = [];\n            (snap.native as firebase.firestore.QuerySnapshot).forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            callback(null, jobs)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n\n    static listenForActiveJobs(callback, limit = 9) {\n        const unsubscribe = Job.db.where('status', 'in', [\"in review\", \"accepted\", \"in progress\"]).limit(limit).onSnapshot(async snap => {\n            const jobs: IJob[] = [];\n            (snap.native as firebase.firestore.QuerySnapshot).forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            callback(null, jobs)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n\n    static listenForActiveJobsWithChangeHandler({ added, modified, removed }: {\n        added: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any,\n        modified: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any,\n        removed: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any\n    }) {\n        const unsubscribe = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"]).limit(6).onSnapshot(async snap => {\n            (snap.native as firebase.firestore.QuerySnapshot).docChanges().forEach(change => {\n                switch (change.type) {\n                    case 'added':\n                        added(change.doc)\n                        break\n                    case 'modified':\n                        modified(change.doc)\n                        break\n                    case 'removed':\n                        removed(change.doc)\n                        break\n                }\n            })\n        })\n\n        return unsubscribe\n    }\n\n    static getPhotoURL(app: Application, id) {\n        return `${app.config.hostname}/images/${id}.jpg`\n    }\n}","import React, { DetailedHTMLProps, useRef, useEffect, useContext } from 'react'\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport L from \"leaflet\";\nimport { APPLICATION_CONTEXT } from '../lib';\n\nexport const MapView = (props) => {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    // const map = useRef(L.map('mapview'))\n    const loader = new Loader({\n        apiKey: ctx.config.Google.mapKey,\n        version: \"weekly\",\n    })\n\n    const { job: { coordinates } } = props\n\n    useEffect(() => {\n        if (coordinates) {\n            // map.current?.setView({ lat: coordinates.latitude, lng: coordinates.longitude })\n        }\n    }, [coordinates])\n\n    return (\n        <div id='mapview' style={{ width: '100%', height: '100%', backgroundColor: '#dadada' }} ref={(ref) => {\n            if (ref) {\n                // map.current = L.map(ref, {\n                //     zoomControl: false,\n                //     keyboard: false,\n                // })\n            }\n        }} {...props}>\n\n        </div>\n    )\n}","import moment, { unix } from 'moment'\nimport React, { useCallback, useState, useContext } from 'react'\nimport { FaExpandAlt, FaStar, FaMapMarkerAlt, FaGlobeAfrica, FaClipboardList, FaHardHat, FaCaretRight, FaArrowRight, FaChevronRight } from 'react-icons/fa'\nimport { ImSpinner } from \"react-icons/im\";\nimport { NavLink } from 'react-router-dom'\nimport { STYLES } from '../lib/theme'\nimport { DUMMY_USER, User } from '../lib/user'\nimport { IJob, Job, JOB_MILE_RADIUS } from '../lib/job'\nimport firebase from \"firebase\";\nimport { useToasts } from 'react-toast-notifications';\nimport { wait } from './util';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { MapView } from './map';\n\nexport function JobListItem({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    const time = moment(job.date_created.toDate())\n    return (\n        <div className='card'>\n            <div className='card-content'>\n                <div className='columns mb-0'>\n                    <div className='column is-6 has-text-centered-touch has-text-left'>\n                        <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_title}</p>\n                    </div>\n                    <div className='column has-text-centered-touch has-text-right'>\n                        <p>{job.location_address}</p>\n                    </div>\n\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left'>\n                        <p>{job.job_type}</p>\n                    </div>\n                </div>\n            </div>\n            <div className='card-footer'>\n                <div className='card-footer-item'>\n                    <div className='columns px-4 is-vcentered is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\n                        <div className='column is-12'>\n                            <div className='columns is-vcentered is-mobile'>\n                                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                                    <figure className='image is-flex is-32x32'>\n                                        <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                                    </figure>\n                                </div>\n                                <div className='column is-narrow'>\n                                    <div className='title is-6'>{`${job.user?.firstName} ${job.user?.lastName}`}</div>\n                                </div>\n                                <div className='column has-text-right'>\n                                    {time.calendar()}\n                                </div>\n                            </div>\n                        </div>\n                        <div className='column is-12'>\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={0} max=\"100\">{0}</progress>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport function JobItem({ job, to }: { job: IJob, to: any }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    if (job.status === 'available') {\n        return <PendingJobItem job={job} to={to} key={`pending-${job.id}`} />\n    }\n\n    const time = moment(job.date_created.toMillis())\n    let endTime\n    if (job.date_completed) endTime = moment(job.date_completed.toMillis())\n\n    return (\n        <NavLink activeClassName=\"is-active\" to={to} style={{ overflowX: 'auto' }} className={`job-item is-size-7 px-1 py-1 is-block card is-shadowless is-radiusless has-background-white`}>\n            <div className='card-content py-2 px-2'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-6 has-text-centered-touch has-text-left'>\n                            <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_type}</p>\n                        </div>\n                        <div className='column has-text-centered-touch has-text-right has-text-grey'>\n                            <p>{job.location_address}</p>\n                        </div>\n                    </div>\n                    <div className='columns is-vcentered is-mobile'>\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                            <figure className='image is-flex is-48x48'>\n                                <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                            </figure>\n                        </div>\n                        <div className='column px-0 has-text-left'>\n                            <div className='title is-7 mb-1'>{`${job.user?.firstName || 'John'} ${job.user?.lastName || \"Doe\"}`}</div>\n                            <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate}</p>\n                        </div>\n                        <div className='column has-text-grey has-text-right'>\n                            {time.calendar()}\n                        </div>\n                    </div>\n\n                </div>\n                <div className='columns mb-0 is-vcentered has-text-grey is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\n                    <div className='column is-12'>\n                        {job.progress && job.progress >= 100 ? (\n                            <p>Completed {endTime.calendar()}</p>\n                        ) :\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={job.progress || 0} max=\"100\">{job.progress}</progress>\n                        }\n                    </div>\n                </div>\n                <div className='content has-text-left has-text-grey is-flex is-flex-align-items-center'>\n                    <span className='icon has-text-info is-size-6'><FaChevronRight /></span>\n                    <span style={{ lineHeight: '2em' }}>{job.job_title}</span>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function PendingJobItem({ job, to }: { job: IJob, to: any }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    return (\n        <NavLink activeClassName=\"is-active\" to={to} style={{ overflowX: 'auto' }} className={`job-item is-size-7 px-1 py-1 is-block card is-shadowless is-radiusless has-background-white`}>\n            <div className='card-content py-2 px-2'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-6 has-text-centered-touch has-text-left'>\n                            <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_type}</p>\n                        </div>\n                        <div className='column has-text-centered-touch has-text-right has-text-grey'>\n                            <p>{job.location_address}</p>\n                        </div>\n                    </div>\n                    <div className='columns is-vcentered is-mobile'>\n                        <div className='column has-text-left'>\n                            <p className='is-size-7 is-flex is-vcentered'>\n                                <span className='icon is-size-6 has-text-info spinner'><ImSpinner /></span>\n                                <span style={{ lineHeight: '2em' }}>Pending</span>\n                            </p>\n                        </div>\n                        <div className='column has-text-right'>\n                            <p>Searching for deployee</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function JobDetail({ job, className, onCancel }: { onCancel: (job: IJob) => any, job: IJob | null, className?: string }) {\n    if (!job) {\n        return (\n            <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n                <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\n                    <span className='my-4' ><FaHardHat fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                    <p className='is-uppercase is-size-6 has-text-weight-bold'>View and manage job listings</p>\n                </div>\n            </div>\n        )\n    }\n    const time = moment(job.date_created.toMillis())\n\n    return (\n        <div className={`${className} card job-detail is-size-6`} style={{ flexDirection: 'column' }}>\n            <div className='card-content is-paddingless'>\n                <div className='level py-4 mb-0'>\n                    <div className='level-item is-size-7'>POSTED {time.calendar()}</div>\n                    <div className='level-item is-size-6 has-text-weight-bold'>{job.job_title}</div>\n                    <div className='level-item is-size-7 has-text-grey'>{job.id}</div>\n                </div>\n                <div className='container is-fluid px-0'>\n                    <div className='columns is-fullheight mx-0 my-0 is-multiline animate__animated animate__fadeIn'>\n                        <div className='column is-8-fullhd is-7-desktop is-12 px-0 pt-0'>\n                            <JobDetailTask onJobCancel={onCancel} job={job} />\n                        </div>\n\n                        {job.status === \"available\" || job.status === 'in review' ?\n                            <div style={{ borderLeft: 'solid 1px #8881' }} className='column is-4-fullhd is-5-desktop is-12 is-flex is-paddingless'>\n                                <MapView job={job} className='container pt-4 pb-0 is-flex' />\n                            </div>\n                            :\n                            <div style={{ borderLeft: 'solid 1px #8881' }} className='column is-4-fullhd is-5-desktop is-12 is-flex'>\n                                <JobDetailUser job={job} />\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function JobDetailTask({ job, onJobCancel }: { job: IJob, onJobCancel }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({ loadingCancel: false })\n    const { addToast } = useToasts()\n\n    let endTime, startTime, totalTime\n    if (job.date_completed) endTime = unix(job.date_completed.toMillis() / 1000)\n    if (job.date_created) startTime = unix(job.date_created.toMillis() / 1000)\n    if (endTime && startTime) totalTime = endTime.diff(startTime, 'h', true)\n\n    const onCancel = useCallback(async () => {\n        try {\n            const confirmed = window.confirm(\"Are you sure you want to cancel this job? If Job is accepted, it will return to the job pool. Otherwise, the job will be deleted\")\n            if (!confirmed) {\n                return\n            }\n            setState({ ...state, loadingCancel: true })\n            await Job.cancelJob(ctx, job)\n            addToast('Cancelled job successfully!', { appearance: 'success' })\n            onJobCancel(job)\n        } catch (e) {\n            addToast(e.message || 'Failed to cancel job!', { appearance: 'error' })\n        } finally {\n            setState({ ...state, loadingCancel: false })\n        }\n    }, [job, state])\n\n    return (\n        <div className='is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\n            {job.status === 'available' ?\n                <div className='section has-text-centered is-size-6'>\n                    <span className='px-4 py-4 is-flex is-flex-centered'>Searching for deployees within {JOB_MILE_RADIUS} mile radius from you</span>\n                </div>\n                :\n                <figure className='image is-16by9' style={{ position: 'relative', paddingTop: '30%' }}>\n                    <img src={'https://via.placeholder.com/728x90.png'} />\n                    <a className='button is-large' style={{ position: 'absolute', bottom: 4, right: 4, background: 'transparent', border: 0 }}>\n                        <span className='icon is-size-2'><FaExpandAlt /></span>\n                    </a>\n                </figure>\n            }\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\n                <div className='section py-2 pb-3'>\n                    <table className='table is-hoverable is-fullwidth'>\n                        <tbody className='is-flex is-flex-direction-column is-size-7'>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>TYPE</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.job_type}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>LOCATION</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.location_address}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>DESCRIPTION</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.job_description}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>PAY</td>\n                                <td style={{ flex: 2 }} className='is-flex-align-items-center is-flex has-text-left'><span>${job.salary}</span>&nbsp;<span className='has-text-grey-light'>/{job.wage}</span></td>\n                            </tr>\n                            {job.tasks && job.tasks.length > 0 ?\n                                <tr className='is-flex has-text-left'>\n                                    <td style={{ flex: 1 }} className='has-text-grey'>TASKS</td>\n                                    <td style={{ flex: 2 }} className=' has-text-left'>\n                                        {job.tasks?.map(task => <p key={task.text}>- {task.text}</p>)}\n                                    </td>\n                                </tr>\n                                : null}\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'> START</td>\n                                <td style={{ flex: 2 }} className='has-text-left'>{startTime.calendar() || `-`}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>END</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{endTime?.calendar() || `-`}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>TOTAL TIME</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{totalTime?.toFixed(2) || `-`}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                {job.progress && job.progress >= 100 ? (\n                    <button className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-end' }}>View Invoice</button>\n                ) :\n                    <button disabled={state.loadingCancel} onClick={onCancel} className={`button is-white is-uppercase is-inverted mx-4 ${state.loadingCancel ? 'is-loading' : ''}`} style={{ alignSelf: 'flex-start', color: 'white' }}>Cancel Job</button>\n                }\n            </div>\n        </div >\n    )\n}\n\nexport function JobDetailUser({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    let startTime\n    if (job.date_created) startTime = moment(job.date_created.toMillis())\n\n    return (\n        <div className='container pt-4 pb-0 is-flex' style={{ flexDirection: 'column' }} >\n            <div style={{ borderBottom: 'solid #aaa4 0.2px' }} className='columns is-vcentered'>\n                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                    <figure className='image is-80x80 is-flex'>\n                        <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                    </figure>\n                </div>\n                <div className='column'>\n                    <div className='container'>\n                        <div className='columns is-marginless is-vcentered is-mobile'>\n                            <div className='column pb-0 pl-0'>\n                                <p className='is-size-6 has-text-left has-text-weight-bold'>{`${job.user?.firstName || \"John\"} ${job.user?.lastName || 'Doe'}`}</p>\n                            </div>\n                            <div className=\"column is-narrow has-text-right has-text-info pr-0 pb-0 is-size-7\">View Profile</div>\n                        </div>\n                        <div className='content has-text-left'>\n                            <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate}\n                                {/* TODO: should option of remote or onsite be present?\n                             &nbsp;{generateUserJobType(DUMMY_USER)} \n                             */}\n                            </p>\n                            <p className='is-size-7'>{job.user?.profileBio}</p>\n                            <p className='has-text-left has-text-grey-light is-size-7'><span className='is-uppercase'>member since</span>&nbsp; {moment(job.user?.dateCreated).calendar()}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\n                <table className='table is-hoverable is-fullwidth'>\n                    <tbody className='is-size-7'>\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>CONTACT</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>{job.user?.phoneNumber}</td>\n                        </tr>\n                        {/* <tr>\n                            <td className='has-text-right'>ACTIVE TASK</td>\n                            <td className='has-text-left'>{job.user?.activeTask}</td>\n                        </tr> */}\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>START TIME</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>{startTime.calendar()}</td>\n                        </tr>\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>HIGHLIGHTED SKILLS AND LICENSES</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>\n                                {job.user?.skills && job.user.skills.length > 0 ? job.user.skills?.map(task => <p>- {task}</p>) : `-`}\n                            </td>\n\n                        </tr>\n                    </tbody>\n                </table>\n                <button className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-start' }}>Message</button>\n            </div>\n        </div>\n    )\n}\n\nexport function generateUserJobType(user: User) {\n    switch (user.jobType) {\n        case 'onsite':\n            return <><span className='icon has-text-info'><FaMapMarkerAlt /></span> On Site</>\n        case 'remote':\n            return <><span className='icon has-text-info'><FaGlobeAfrica /></span> Remote</>\n    }\n}\n\nexport interface IJobSample {\n    user: User\n    timestamp: number\n    title: string\n    description: string\n    location: string\n    progress?: number\n    startTime?: number\n    endTime?: number\n    tasks?: string[]\n    fullLocation?: string\n    id\n}\n\nexport const DUMMY_JOBS: IJobSample[] = [\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        progress: 80,\n        tasks: [],\n        id: 'papdsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdefvzsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 99,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 20,\n        id: 'padpp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 90,\n        id: 'papdvp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        id: 'papdfp'\n    }\n]\n\nexport const DUMMY_COMPLETED: IJobSample[] = [\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n]","import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DUMMY_USER, User } from '../lib/user';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { Job, IJob } from '../lib/job';\nimport { useToasts } from 'react-toast-notifications';\nimport { JobListItem } from './job';\nimport links from '../lib/links';\n\nexport function JobList({ className }: { className?: string; }) {\n    const ctx = useContext(APPLICATION_CONTEXT);\n    const [state, setState] = useState({ jobs: new Array<IJob>(), loading: false });\n\n    const { addToast } = useToasts();\n\n    useEffect(() => {\n        setState({ ...state, loading: true });\n        const unsubscribe = Job.listenForActiveJobs(async (err, docs: IJob[]) => {\n            if (err) {\n                setState({ ...state, loading: false });\n                return addToast(err.message || 'Failed to get jobs!');\n            }\n            docs = await Promise.all(\n                docs.map(async (v) => {\n                    if (v.status !== 'available' && v.executed_by) {\n                        v.user = await User.getExternalUser(ctx, v.executed_by);\n                    }\n                    return v;\n                })\n            );\n            setState({ ...state, jobs: docs, loading: false });\n        });\n\n        return unsubscribe;\n    }, []);\n\n    return (\n        <div className={className}>\n            {state.loading ?\n                <progress className=\"progress is-small is-info my-6\" max=\"100\">loading</progress>\n                : state.jobs.map(j => (\n                    <Link key={j.id} to={`${links.activeJobs}/${j.id}`} className='column is-4-fullhd is-6-desktop is-12-touch list-item'>\n                        <JobListItem job={j} />\n                    </Link>\n                ))}\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport { FaSearch, FaMapMarkerAlt, FaCheckSquare, FaCheck, FaCaretUp, FaCaretDown } from 'react-icons/fa'\nimport moment from \"moment\";\nimport { Link, NavLink } from 'react-router-dom';\nimport { Empty } from './util';\n\nexport function NotificationItem({ notification }: { notification: INotification }) {\n    const time = moment.unix(notification.timestamp / 1000)\n    return (\n        <div className='container is-fluid is-paddingless list-item py-2' title={notification.title}>\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\n                <div className='column is-paddingless is-6 has-text-left has-text-centered-mobile  list-item-title'>\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{getNotificationIcon(notification)} {notification.title}</p>\n                </div>\n                <div className='column is-paddingless has-text-right has-text-centered-mobile list-item-subtitle'>\n                    <p style={{ maxLines: 2 }}>{time.fromNow()}</p>\n                </div>\n            </div>\n            <div className='content'>\n                <p>\n                    {notification.content}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport function getNotificationIcon(notif: INotification) {\n    switch (notif.type) {\n        case 'discovery':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaSearch /> </span>\n        case 'location':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaMapMarkerAlt /> </span>\n        case 'progress':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaCheck /> </span>\n    }\n}\n\nexport function NotificationList({ className }) {\n    const [expanded, setExpanded] = useState(true)\n\n    return (\n        <nav className={className}>\n            <div className='panel is-clipped' >\n                <div onClick={() => setExpanded(!expanded)} className='panel-heading is-size-6 has-text-left has-background-white-bis is-align-items-center is-flex is-flex-direction-row is-justify-content-space-between'>\n                    <p>Notifications</p>\n                    <button className='button is-static has-background-white is-rounded is-size-8 is-small'>\n                        {!expanded ?\n                            <FaCaretUp size={16} className={`icon has-text-black is-small`} />\n                            :\n                            <FaCaretDown size={16} className={`icon has-text-black is-small`} />}\n                    </button>\n                </div>\n                <div style={{ transition: \"all 0.500s linear\" }} className={`${!expanded ? 'is-height-0' : ''}`}>\n                    {DUMMY_NOTIFICATIONS.length > 0 ?\n                        DUMMY_NOTIFICATIONS.map(n => (\n                            <Link key={n.id} to={`/f`} className='panel-block'>\n                                <NotificationItem notification={n} />\n                            </Link>\n                        ))\n                        :\n                        <Empty text='No Notification available' />\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport interface INotification {\n    content: string\n    timestamp\n    type: 'discovery' | 'location' | 'progress'\n    title: string\n    id: string\n}\n\nconst DUMMY_NOTIFICATIONS: INotification[] = [\n    {\n        content: 'testing 123',\n        timestamp: Date.now(),\n        type: 'discovery',\n        title: 'testing notification',\n        id: '23xe'\n    },\n    {\n        content: 'testing 12',\n        timestamp: Date.now(),\n        type: 'location',\n        title: 'testing notification',\n        id: '23xe'\n    },\n    {\n        title: 'testing 1',\n        timestamp: Date.now(),\n        type: 'progress',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    },\n    {\n        title: 'testing 1',\n        timestamp: Date.now(),\n        type: 'location',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    },\n    {\n        title: 'testing 1',\n        timestamp: Date.now(),\n        type: 'discovery',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    }\n]","import React, { useState } from 'react'\nimport moment from 'moment'\nimport { FaCaretDown, FaCaretUp } from \"react-icons/fa\";\nimport { NavLink, Link } from 'react-router-dom'\nimport { Empty } from './util';\n\nconst CurrencyFormatter = Intl.NumberFormat('en-US', { currency: 'USD', style: 'currency', maximumFractionDigits: 2 })\n\nexport function PaymentItem({ payment }: { payment: IPayment }) {\n    const time = moment.unix(payment.timestamp / 1000)\n\n    return (\n        <div className='container is-fluid is-paddingless list-item py-2' title={payment.title}>\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\n                <div className='column is-paddingless is-6 has-text-left has-text-centered-mobile list-item-title'>\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{payment.title}</p>\n                </div>\n                <div className='column is-paddingless has-text-right has-text-centered-mobile list-item-subtitle'>\n                    <p>{time.fromNow()}</p>\n                </div>\n            </div>\n            <div className='content'>\n                <p>\n                    {getPaymentDescription(payment)}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport function PaymentList({ className }) {\n    const [expanded, setExpanded] = useState(true)\n\n    return (\n        <nav className={className} >\n            <div className='panel is-clipped'>\n                <div onClick={() => setExpanded(!expanded)} className='panel-heading is-size-6 has-text-left has-background-white-bis is-align-items-center is-flex is-flex-direction-row is-justify-content-space-between'>\n                    <p>Payments</p>\n                    <button className='button is-static has-background-white is-rounded is-size-8 is-small'>\n                        {!expanded ?\n                            <FaCaretUp size={16} className={`icon has-text-black is-small`} />\n                            :\n                            <FaCaretDown size={16} className={`icon has-text-black is-small`} />}\n                    </button>\n                </div>\n                <div style={{ transition: \"all 0.500s linear\" }} className={`${!expanded ? 'is-height-0' : ''}`}>\n                    {DUMMY_PAYMENTS.length > 0 ?\n                        DUMMY_PAYMENTS.map(p => (\n                            <Link to={`/ f`} key={p.id} className='panel-block'>\n                                <PaymentItem payment={p} />\n                            </Link>\n                        ))\n                        :\n                        <Empty text='No Payment data available' />\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport interface IPayment {\n    type: 'pending' | 'paid'\n    timestamp\n    cost: number\n    title\n    payee\n    id: string\n}\n\nexport function getPaymentDescription(payment: IPayment): string {\n    switch (payment.type) {\n        case 'pending':\n            return `You have a pending charge of ${CurrencyFormatter.format(payment.cost)} for the completion of this job by ${payment.payee}`\n        case 'paid':\n            return `A payment of ${CurrencyFormatter.format(payment.cost)} has been submitted to ${payment.payee}`\n    }\n}\n\n\nexport const DUMMY_PAYMENTS: IPayment[] = [\n    {\n        type: 'pending',\n        timestamp: Date.now(),\n        cost: 20.405,\n        title: 'Clear lawn',\n        payee: 'Philip Barnabas',\n        id: '2ss354'\n    },\n    {\n        type: 'paid',\n        timestamp: Date.now(),\n        cost: 200.405,\n        title: 'Clear lawn and take out firewood',\n        payee: 'Philip Barnabas',\n        id: '23sss54'\n    },\n    {\n        type: 'pending',\n        timestamp: Date.now(),\n        cost: 3000.405,\n        title: 'Clear lawn',\n        payee: 'Philip Barnabas',\n        id: '235s4'\n    }\n]","import React from 'react';\nimport { JobList } from \"../components/JobList\";\nimport { NotificationList } from '../components/notification';\nimport { PaymentList } from '../components/payment';\nimport { UserList } from '../components/user';\nimport { CardFragment } from \"../components/util\";\nimport { Link } from 'react-router-dom';\nimport links from '../lib/links';\n\nexport function Dashboard() {\n    return (\n        <div className='columns is-1 is-variable px-3 py-3 is-atleast-fullheight'>\n            <NotificationList className='column is-3 is-size-6 is-2-widescreen' />\n            <div className='column is-6 is-8-widescreen is-flex' style={{ flexDirection: 'column', justifyContent: 'space-between' }}>\n                <CardFragment header='Active Jobs' optionsElement={<Link to={links.activeJobs}>View All</Link>} style={{ marginBottom: '0.8em' }}>\n                    <JobList className={'columns is-centered is-vcentered is-multiline is-1 is-variable'} />\n                </CardFragment>\n            </div>\n            <PaymentList className='column is-3 is-size-6 is-2-widescreen' />\n        </div>\n    )\n}","// Check geolocation exists\nexport function isGeoLocationSupported() {\n    return 'geolocation' in navigator\n}\n\nexport function getCurrentLocation(): Promise<Position> {\n    return new Promise((res, rej) => {\n        if (!isGeoLocationSupported()) {\n            throw new Error('Geolocation is not supported! Cannot find current location!')\n        }\n\n        navigator.geolocation.getCurrentPosition(res, rej, {\n            enableHighAccuracy: true,\n            maximumAge: 1000\n        })\n    })\n}","import Tags from \"@yaireo/tagify/dist/react.tagify\";\nimport React, { useState, useCallback, useMemo, useContext, useEffect, useLayoutEffect, createRef, Ref, useRef } from 'react';\nimport { FaChevronLeft, FaMapMarkerAlt, FaSearch, FaUpload, FaDollarSign } from 'react-icons/fa';\nimport { useToasts } from 'react-toast-notifications';\nimport { debounce } from \"./util\";\nimport { Job, IJob } from \"../lib/job\";\nimport firebase from 'firebase'\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport validator from \"validator\";\nimport { getCurrentLocation } from \"../lib/location\";\nimport { v4 } from \"uuid\";\n\n/**\n * Component for creating a form field.\n * \n * @param param Object containing parameters to build the input field\n */\nexport function FormField({ label, value, onChange, className, type, placeholder, icon, tagifyRef = null as any, required = false, whitelist = [] as any[], mode = 'select', disabled = false, loading = false, tags = false, showBorder = true, containerClassName = '', isTextArea = false, maxLength = Number.MAX_SAFE_INTEGER, helpTextTop = \"\", helpTextLeft = \"\", helpTextRight = \"\", hasAddons = false, addon = <></> }) {\n    return (\n        <div className={`${containerClassName} ${showBorder ? 'job-form-field' : ''} field has-text-left`}>\n            <label className='label is-flex' style={{ justifyContent: 'space-between', alignItems: 'center' }}><span>{label}</span> <span className='has-text-right has-text-weight-normal is-size-7'>{helpTextTop}</span></label>\n            {!hasAddons ?\n                <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\n                    {isTextArea ?\n                        tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode: null,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                inputMode='textarea'\n                                className={`${className}`}\n                                loading={loading}\n                                maxLength={maxLength}\n                                required={required}\n                                disabled={disabled}\n                                onChange={e => (onChange(e.target.value))}\n                            />\n                            :\n                            <textarea required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} className={`${className} textarea`} maxLength={maxLength} placeholder={placeholder} />\n                        :\n                        tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                required={required}\n                                className={`${className} input`}\n                                loading={loading}\n                                disabled={disabled}\n                                onChange={e => (e.persist(), onChange(e.target.value))}\n                            />\n                            :\n                            <input required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} />\n                    }\n                    {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\n                </div>\n                :\n                <div className={`${hasAddons ? 'has-addons' : ''} field`}>\n                    <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\n                        {tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                required={required}\n                                className={`${className} input`}\n                                disabled={disabled}\n                                loading={loading}\n                                onChange={e => (e.persist(), onChange(e.target.value))}\n                            />\n                            :\n                            <input required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} style={{ borderRight: 0 }} />\n                        }\n                        {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\n                    </div>\n                    {addon}\n                </div>\n            }\n            <div className='help'>\n                <div className='container'>\n                    <div className='columns'>\n                        {helpTextLeft ? <p className='column has-text-left has-text-centered-touch'>{helpTextLeft} </p> : null}\n                        {helpTextRight ? <p className='column has-text-right has-text-centered-touch'>{helpTextRight} </p> : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function FileInput({ disabled, value, onChange, onRemovePhoto }) {\n    const ref = useRef<HTMLInputElement>(null)\n\n    return (\n        <div className='field job-form-field has-text-left my-4'>\n            <label className='label is-flex' style={{ justifyContent: 'space-between', alignItems: 'center' }}><span>Job Photos</span> <span className='has-text-right has-text-weight-normal is-size-7'>Add photos to help describe this job</span></label>\n            <div className='control is-expanded'>\n                <div className='file is-flex is-centered is-normal'>\n                    <label className='file-label is-flex-grow-1'>\n                        <input onChange={(el) => {\n                            if (el.target.files) {\n                                const files: File[] = []\n                                for (let i = 0; i < el.target.files?.length; i++) {\n                                    files.push(el.target.files[i])\n                                }\n                                if (files.length > 0) {\n                                    onChange(files)\n                                }\n                            }\n                        }} className='file-input' multiple ref={ref} disabled={disabled} type='file' accept='image/*' />\n                        <span className='file-cta is-flex is-flex-centered' style={{ width: '100%' }}>\n                            <span className='file-icon'>\n                                <FaUpload />\n                            </span>\n                            <span className='file-label'>\n                                SELECT PHOTOS\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                {value && value.length > 0 ?\n                    <div className='field is-grouped is-grouped-multiline'>\n                        {value.map((file: File, index) =>\n                            <div key={`${index}-${file.name}`} className='control mr-2 my-2 '>\n                                <div className='tags has-addons'>\n                                    <span key={`${file.name}-${file.size}-${index}`} className='tag is-dark'>{file.name}</span>\n                                    <button onClick={() => { onRemovePhoto(index) }} className='tag is-delete'></button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    : null}\n            </div>\n        </div>\n    )\n}\n\nexport function CreateJob({ onClose, show, onComplete }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        loading: false,\n        tasks: '',\n        type: '',\n        title: '',\n        description: '',\n        address: '',\n        requiredPersons: '',\n        price: '',\n        loadingTypes: true,\n        fetchingLocation: false,\n        manualAddress: false,\n        location: null as any,\n    })\n    const [photos, setPhotos] = useState([] as File[])\n    const { addToast } = useToasts()\n    const types = useMemo(() => {\n        return {\n            jobTypes: new Array<string>(),\n            location: [],\n        }\n    }, [])\n    const tagifyRef = createRef(), tagifyRef2 = createRef()\n\n\n    // const _search = debounce(async (ctx, cb) => {\n    //     try {\n    //         const jobTypes = types.allJobTypes.filter(type=>type)\n    //         return cb(null, jobTypes)\n    //     } catch (e) {\n    //         cb(e, null)\n    //     }\n    // }, 500)\n\n    useEffect(() => {\n        new Promise(async () => {\n            try {\n                types.jobTypes = await Job.getJobTypes(ctx)\n                const tagify: any = tagifyRef.current\n                console.log(tagifyRef)\n                if (tagify) {\n                    tagify.settings.whitelist.length = 0; // reset current whitelist\n                    tagify.loading(true).dropdown.hide.call(tagify)\n                    tagify.settings.whitelist.push(...types.jobTypes, ...tagify.value)\n                    tagify.loading(false).dropdown.hide.call(tagify, tagify.value);\n\n                    (tagifyRef.current as any).settings.whitelist = types.jobTypes\n                }\n                console.log(types.jobTypes, 'job types fetched')\n            } catch (e) {\n                console.log(e)\n                addToast('Failed to load job types!', { appearance: 'error' })\n            }\n        })\n    }, [])\n\n\n    return (\n        <form className={`modal ${show ? 'is-active' : ''}`} onSubmit={async (e) => {\n            e.stopPropagation()\n            e.preventDefault()\n            // TODO: handle processing before complete\n            setState({ ...state, loading: true })\n            try {\n                const newJob = {\n                    date_created: firebase.firestore.FieldValue.serverTimestamp(),\n                    job_title: state.title,\n                    job_type: JSON.parse(state.type)[0].value.toLowerCase(),\n                    posted_by: ctx.user?.id,\n                    salary: parseInt(state.price, 10),\n                    required_count: parseInt(state.requiredPersons, 10),\n                    wage: 'deployment',\n                    status: 'available',\n                    tasks: JSON.parse(state.tasks).map(v => ({ id: v4(), text: v.value })),\n                    location_address: state.address,\n                    location: state.location ? {\n                        coords: {\n                            latitude: state.location.coords.latitude,\n                            longitude: state.location.coords.longitude,\n                            accuracy: state.location.coords.accuracy,\n                            altitude: state.location.coords.altitude,\n                            heading: state.location.coords.heading,\n                            altitudeAccuracy: state.location.coords.altitudeAccuracy,\n                            speed: state.location.coords.speed,\n                        }, timestamp: state.location.timestamp\n                    } : undefined,\n                    job_description: state.description\n                }\n                if (newJob.job_type && !validator.isEmpty(newJob.job_type) && !types.jobTypes.find(type => type === newJob.job_type)) {\n                    // Job type is new. \n                    // Add to the list of job types.\n                    await Job.addJobType(ctx, newJob.job_type)\n                }\n\n                await Job.addNewJob(ctx, newJob, photos)\n                setState({ ...state, loading: false })\n                addToast(\"Successfully added job!\", { appearance: 'success' })\n                onComplete()\n            } catch (e) {\n                console.log(e);\n                setState({ ...state, loading: false })\n                addToast(e.message || \"Failed to add job!\", { appearance: 'error' })\n            }\n        }}>\n            <div className='modal-background'></div>\n            <div className='modal-card'>\n                <header className='modal-card-head'>\n                    <div className='modal-card-title is-mobile is-vcentered columns'>\n                        <div className='column has-text-left'>\n                            <button className='button' onClick={onClose}><span className='icon'><FaChevronLeft /></span><span className='is-hidden-mobile'> View Current Jobs</span></button>\n                        </div>\n                        <div className='column has-text-left-mobile is-10-mobile'>\n                            <span>New Job Listing</span>\n                        </div>\n                        <a className='column is-hidden-mobile'></a>\n                    </div>\n                </header>\n                <div className='modal-card-body px-0'>\n                    <div className='container'>\n                        <div className='level px-4 pb-4' style={{ borderBottom: 'solid 1px #1112' }}>\n                            <p className='level-item has-text-left is-block is-size-4 has-text-centered-touch'>Job Details</p>\n                            <p className='level-item has-text-right is-block has-text-grey-light has-text-centered-touch'>All fields are required to be filled out</p>\n                        </div>\n                        <div className='container is-fluid pb-4 px-0'>\n                            <div className='columns mx-0 px-4'>\n                                <div className='column is-6'>\n                                    <FormField required disabled={state.loading} value={state.type} tagifyRef={tagifyRef} tags whitelist={types.jobTypes} onChange={(type) => setState((state) => ({ ...state, type }))} className='' containerClassName='mb-4' label=\"Job Type\" placeholder='Begin typing a job type' type='text' icon={<FaSearch />} helpTextLeft='Search and select a job type to improve search results when finding a contractor' />\n                                    <FormField required disabled={state.loading} value={state.title} onChange={(title) => setState({ ...state, title })} className='' containerClassName='my-4' label=\"Title\" placeholder='Provide a title for the job' type='text' icon={null} helpTextLeft='Will be seen by contractors in search result and as an active status' helpTextRight='Maximum 30 characters' maxLength={30} />\n                                    <FormField required disabled={state.loading} value={state.description} onChange={(description) => setState({ ...state, description })} className='' containerClassName='my-4' label=\"Description\" isTextArea placeholder='Provide a description of the job' type='text' icon={null} helpTextLeft='Give a short description to improve finding a contractor that fits the job' helpTextRight='Maximum 80 characters' maxLength={80} />\n                                    <FormField required={!state.manualAddress} disabled={state.loading || state.fetchingLocation} value={state.address} tagifyRef={tagifyRef2} tags={!state.manualAddress} whitelist={types.location} onChange={(address) => setState((state) => ({ ...state, address }))} className='' containerClassName='my-4' label=\"Location Address\" placeholder='Begin typing the first line of the address' type='text' icon={<FaMapMarkerAlt />}\n                                        hasAddons addon={(\n                                            <div className='control'>\n                                                <button disabled={state.loading || state.fetchingLocation} className={`button ${state.fetchingLocation ? 'is-loading' : ''} ${state.manualAddress ? 'is-info has-text-white' : ''}`} onClick={async () => {\n                                                    const manualAddress = !state.manualAddress\n                                                    if (manualAddress) {\n                                                        // If manual address is true, fetch the current location\n                                                        setState({ ...state, fetchingLocation: true })\n                                                        try {\n                                                            setState({ ...state, location: await getCurrentLocation() })\n                                                            addToast(\"Using your current location!\", { appearance: 'success' })\n                                                            setState((state) => ({ ...state, address: '', manualAddress, fetchingLocation: false }))\n                                                        } catch (e) {\n                                                            console.log(e);\n                                                            setState((state) => ({ ...state, fetchingLocation: false }))\n                                                            addToast(e.message || \"Failed to set location manually!\", { appearance: 'error' })\n                                                        }\n                                                    } else {\n                                                        setState((state) => ({ ...state, location: null, manualAddress }))\n                                                    }\n                                                }} type='button' style={{ color: state.manualAddress ? 'unset' : 'black', borderLeft: 0, zIndex: 4 }}><span className='is-size-7'>{state.manualAddress ? 'using current location' : 'or use current location'}</span></button>\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n                                <div className='column is-6'>\n                                    <FormField required disabled={state.loading} value={state.requiredPersons} onChange={(requiredPersons) => setState({ ...state, requiredPersons })} hasAddons className='' containerClassName='mb-4' label=\"How many persons are needed for the job\"\n                                        placeholder='How many persons are needed for the job'\n                                        type='number' helpTextRight='e.g. 10 persons maximum per job'\n                                        icon={null}\n                                        addon={(\n                                            <div className='control'>\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Persons</button>\n                                            </div>\n                                        )}\n                                    />\n                                    <FormField required disabled={state.loading} value={state.price} onChange={(price) => setState({ ...state, price })} hasAddons className='' containerClassName='my-4' label=\"Pay\"\n                                        placeholder='Provide an amount'\n                                        type='number' helpTextLeft='Will be seen in search results. Cannot be adjusted once the listing is pending or active'\n                                        icon={<FaDollarSign />}\n                                        addon={(\n                                            <div className='control'>\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Per Deployment</button>\n                                            </div>\n                                        )}\n                                    />\n                                    <FormField required disabled={state.loading} value={state.tasks} tags onChange={(tasks) => setState((state) => ({ ...state, tasks }))} isTextArea className='' containerClassName='my-4' label=\"Tasks\" placeholder='Add a task' type='text' icon={null} helpTextTop='Provide each task required to be completed for this listing' helpTextRight='Separate each task with a comma (,)' />\n\n                                    <FileInput disabled={state.loading} value={photos} onRemovePhoto={(i) => { setPhotos(photos.filter((_, index) => index !== i)) }} onChange={(photos) => setPhotos(photos)} />\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <footer className='modal-card-foot is-flex-centered'>\n                    <button disabled={state.loading} className='button' onClick={onClose}>Cancel</button>\n                    <button disabled={state.loading} className={`button is-info ${state.loading ? 'is-loading' : ''}`} type='submit'>Confirm</button>\n                </footer>\n            </div>\n        </form>\n    )\n}","import React from 'react';\nimport { BsPencilSquare } from \"react-icons/bs\";\nimport { FaSearch } from 'react-icons/fa';\nimport { GoSettings } from \"react-icons/go\";\nimport { NavLink, Route } from 'react-router-dom';\nimport links from '../lib/links';\nimport { JobItem } from './job';\n\nexport function JobSideList({ className, activeJobs, inactiveJobs, onCreateNew }) {\n    return (\n        <div className={`${className} panel job-panel has-background-white-ter is-flex`}>\n            <div className='panel-heading is-flex is-vcentered'>\n                <p className='has-text-left'>Job Listings</p>\n                <a className='button is-small is-rounded' onClick={onCreateNew}><BsPencilSquare /></a>\n            </div>\n            <div className='panel-block'>\n                <div className='field has-addons' style={{ flex: 1 }}>\n                    <div className='control is-expanded has-icons-left'>\n                        <input style={{ borderRight: 0 }} className='input is-rounded' type='search' placeholder='Search Jobs...' />\n                        <span className='icon is-left'><FaSearch /></span>\n                    </div>\n                    <div className='control'>\n                        <button style={{ borderLeft: 0 }} className='button is-rounded' onClick={() => window.alert(\"not ready yet!\")} >\n                            <span className='icon is-right'><GoSettings /></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className='panel-tabs'>\n                <NavLink to={`${links.activeJobs}`} activeClassName='is-active'>Active</NavLink>\n                <NavLink to={`${links.inactiveJobs}`} activeClassName='is-active'>Inactive</NavLink>\n            </div>\n            <div className='has-background-white-ter' style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n                <Route path={`${links.activeJobs}`} render={() => activeJobs.map(j => <JobItem key={j.id} job={j} to={`${links.activeJobs}/${j.id}`} />)} />\n                <Route path={`${links.inactiveJobs}`} render={() => inactiveJobs.map(j => <JobItem key={j.id} job={j} to={`${links.inactiveJobs}/${j.id}`} />)} />\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { JobDetail } from '../components/job';\nimport { CreateJob } from '../components/jobcreation';\nimport { JobSideList } from \"../components/JobSideList\";\nimport { useEscapeHandler } from \"../components/util\";\nimport { IJob, Job } from '../lib/job';\nimport links from '../lib/links';\nimport { DUMMY_USER, User } from '../lib/user';\nimport { APPLICATION_CONTEXT } from '../lib';\n\nexport function Jobs() {\n    const ctx = useContext(APPLICATION_CONTEXT);\n    const [state, setState] = useState({ loading: false, showModal: false, selected: null as null | IJob })\n    const [active, setActive] = useState([] as IJob[])\n    const [inactive, setInactive] = useState([] as IJob[])\n    const { addToast } = useToasts()\n    const location = useLocation()\n\n    const removeEscapeHandler = useEscapeHandler(() => setState({ ...state, showModal: false }))\n\n    useEffect(() => {\n        return removeEscapeHandler()\n    }, [])\n\n    useEffect(() => {\n        setState({ ...state, loading: true });\n        const unsubscribe = Job.listenForActiveAndPendingJobs(async (err, docs: IJob[]) => {\n            if (err) {\n                setState({ ...state, loading: false });\n                return addToast(err.message || 'Failed to get jobs!');\n            }\n            docs = await Promise.all(\n                docs.map(async (v) => {\n                    if (v.status !== 'available' && v.executed_by) {\n                        v.user = await User.getExternalUser(ctx, v.executed_by);\n                    }\n                    return v;\n                })\n            );\n            setState({ ...state, loading: false });\n            setActive(docs)\n        })\n\n        Job.getInactiveJobs().then(async (jobs) => await jobs.map(async (v: IJob) => {\n            v.user = await User.getExternalUser(ctx, v.executed_by);\n            return v;\n        })).then(jobs => {\n            setInactive(jobs)\n        }).catch(e => {\n            console.log(e)\n            addToast(e.message || \"Failed to get inactive jobs\", {\n                appearance: 'error'\n            })\n        })\n\n        return unsubscribe;\n    }, []);\n\n    const { id } = useParams()\n    const activeMatch = useRouteMatch({\n        path: links._jobItem.active,\n        strict: true,\n        exact: true\n    })\n    const inactiveMatch = useRouteMatch({\n        path: links._jobItem.inactive\n    })\n\n    useEffect(() => {\n        if (id) {\n            if (activeMatch) {\n                const selected = active.find(v => v.id === id)\n                console.log(id, 'active: ', activeMatch, inactiveMatch, 'selected: ', selected)\n                setState({ ...state, selected: selected || null })\n            } else if (inactiveMatch) {\n                const selected = inactive.find(v => v.id === id)\n                setState({ ...state, selected: selected || null })\n            }\n        }\n    }, [location, active, inactive])\n\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <JobSideList activeJobs={active} inactiveJobs={inactive} onCreateNew={() => setState({ ...state, showModal: true })} className='column is-3 is-12-mobile is-12-touch is-clipped is-fullheight' />\n            <JobDetail onCancel={(job: IJob) => {\n                if (job.status === 'complete') {\n                    setInactive(inactive.filter(v => v.id !== job.id))\n                } else {\n                    setActive(active.filter(v => v.id !== job.id))\n                }\n                setState({ ...state, selected: null })\n            }}\n                job={id ? state.selected : null} className='column is-9 is-12-touch is-12-mobile is-flex' />\n            {state.showModal ?\n                <CreateJob show={state.showModal} onClose={() => setState({ ...state, showModal: false })} onComplete={() => {\n                    setState({ ...state, showModal: false })\n                }} />\n                : null}\n        </div>\n    )\n}","import React, { useCallback, useContext, useState } from 'react';\nimport { FaAngleDoubleRight, FaChevronLeft, FaEnvelope, FaEye, FaEyeSlash, FaKey, FaPhoneAlt, FaSignInAlt, FaSms, FaUser, FaUserPlus } from 'react-icons/fa';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\nimport links from '../lib/links';\nimport logo from \"../logo.svg\";\n\nexport interface IRegister {\n    first_name: string,\n    last_name: string,\n    password: string,\n    password_verify: string,\n    email: string,\n    phone_number: string,\n}\n\nexport interface ILogin {\n    code: string,\n    phone_number: string,\n    password: string,\n    showPassword: boolean,\n    loading?: boolean\n}\n\nexport function RegisterView() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        showModal: false,\n        showCodeRequest: true,\n        showPassword: false,\n        showPasswordVerify: false,\n        loading: false,\n    })\n    const [formState, setFormState] = useState<IRegister>({\n        email: '',\n        first_name: '',\n        last_name: '',\n        password: '',\n        password_verify: '',\n        phone_number: ''\n    })\n\n    const { addToast } = useToasts()\n    const history = useHistory()\n    const location = useLocation()\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        setState({ ...state, loading: true })\n\n        try {\n            const response = await ctx.addAdmin(formState)\n\n            if (!response || !response.success) {\n                throw new Error('Failed to register user!')\n            }\n            addToast('User registered successfully!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false })\n            history.push(links.login, location.state)\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Failed to add new user!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n        }\n    }, [state, formState])\n\n\n    return (\n        <div className='section'>\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\n                <img src={logo} className='is-rounded' />\n            </figure>\n\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\n\n            <form className='my-2' onSubmit={onSubmit}>\n                <div className='field is-horizontal'>\n                    <div className='field-body'>\n                        <div className='field'>\n                            <div className='control has-icons-left '>\n                                <input autoComplete=\"given-name\" disabled={state.loading} required value={formState.first_name} onChange={(e) => setFormState({ ...formState, first_name: e.target.value })} placeholder='enter firstname' className='input' type='text' />\n                                <span className='icon is-left is-small'><FaUser /></span>\n                            </div>\n                        </div>\n                        <div className='field'>\n                            <div className='control has-icons-left '>\n                                <input autoComplete=\"family-name\" disabled={state.loading} required value={formState.last_name} onChange={(e) => setFormState({ ...formState, last_name: e.target.value })} placeholder='enter lastname' className='input' type='text' />\n                                <span className='icon is-left is-small'><FaUser /></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='field'>\n                    <div className='control has-icons-left '>\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.email} onChange={(e) => setFormState({ ...formState, email: e.target.value })} placeholder='enter your email address' className='input' type='email' />\n                        <span className='icon is-left is-small'><FaEnvelope /></span>\n                    </div>\n                </div>\n\n                <div className='field'>\n                    <div className='control has-icons-left '>\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.phone_number} onChange={(e) => setFormState({ ...formState, phone_number: e.target.value })} placeholder='enter your phone number include the \"+\" sign' className='input' type='tel' />\n                        <span className='icon is-left is-small'><FaPhoneAlt /></span>\n                    </div>\n                </div>\n\n                <div className='field is-horizontal'>\n                    <div className='field-body'>\n                        <div className='field has-addons'>\n                            <div className='control has-icons-left is-expanded'>\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password} onChange={(e) => setFormState({ ...formState, password: e.target.value })} placeholder='enter your password' className='input' type={state.showPassword ? 'text' : 'password'} />\n                                <span className='icon is-left is-small'><FaKey /></span>\n                            </div>\n                            <div className='control'>\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\n                                </button>\n                            </div>\n                        </div>\n\n                        <div className='field has-addons'>\n                            <div className='control has-icons-left is-expanded'>\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password_verify} onChange={(e) => setFormState({ ...formState, password_verify: e.target.value })} placeholder='re-enter your password' className='input' type={state.showPasswordVerify ? 'text' : 'password'} />\n                                <span className='icon is-left is-small'><FaKey /></span>\n                            </div>\n                            <div className='control'>\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPasswordVerify: !state.showPasswordVerify })}>{state.showPasswordVerify ? <FaEyeSlash /> : <FaEye />}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className='field mt-6'>\n                    <div className='control'>\n                        <button disabled={state.loading} className={`button is-rounded is-fullwidth is-uppercase is-success ${state.loading ? 'is-loading' : ''}`} type='submit'>\n                            <FaUserPlus />&nbsp; Register\n                    </button>\n                    </div>\n                </div>\n            </form>\n\n            <div className='section mt-6 is-size-7'>\n                <p>Already have an account?</p>\n                <Link to={links.login}>Click here to login</Link>\n            </div>\n        </div>\n    )\n\n}\n\n\nexport function LoginView() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({\n        showCodeRequest: true,\n        loading: false,\n        phone: ''\n    })\n\n    const { addToast } = useToasts()\n\n\n    /**\n     * Called to verify the user's number and send OTP through specified channel.\n     */\n    const onSubmitCodeRequest = useCallback(async (form: { phone: string, channel: 'sms' | 'call' }) => {\n        setState({ ...state, loading: true })\n\n        try {\n            // Check if number exists in database\n            await ctx.validateNumber(form.phone)\n            // Generate OTP code for provided number\n            const done = await ctx.triggerVerification(form.phone, form?.channel)\n\n            if (!done) {\n                throw new Error('Failed to verify phone number!')\n            }\n\n            addToast('Verification code sent to your phone!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false, phone: form.phone })\n            return true\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Verification failed!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n            return false\n        }\n    }, [state])\n\n    /**\n     * Called to login to application after the OTP has been received and inputted in the form.\n     */\n    const onSubmitVerified = useCallback(async (form: ILogin) => {\n        setState({ ...state, loading: true })\n\n        try {\n            const user = await ctx.login(form.phone_number, form.code, form.password)\n\n            if (!user) {\n                throw new Error('Failed to login!')\n            }\n\n            addToast('Login successful!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false, })\n            return true\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Login failed!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n            return false\n        }\n    }, [state])\n\n\n    return (\n        <div className='section'>\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\n                <img src={logo} className='is-rounded' />\n            </figure>\n\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\n\n            {state.showCodeRequest ? (\n                <CodeRequestForm onComplete={() => setState({ ...state, showCodeRequest: false })} loading={state.loading} onSubmit={onSubmitCodeRequest} />\n            ) : (\n                    <LoginForm onCancel={() => setState({ ...state, showCodeRequest: true })} loading={state.loading} phone={state.phone} onSubmit={onSubmitVerified} />\n                )}\n\n            <div className='section mt-6 is-size-7'>\n                <p>Are you a new user?</p>\n                <Link to={links.register}>Request access</Link>\n            </div>\n        </div>\n    )\n}\n\n\nfunction CodeRequestForm({ onSubmit, loading, onComplete }) {\n    const [state, setState] = useState({\n        phone: '',\n        channel: 'sms'\n    })\n    const [viewState, setView] = useState({\n        showOptions: false,\n        hold: false,\n        holdTimer: 0,\n    })\n\n    let intervalID\n\n    const onSubmitForm = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        // Trigger code to be sent. `success` decides if the code was successfully triggered.\n        const success = await onSubmit(state)\n        if (success) {\n            let counter = 59\n\n            clearInterval(intervalID)\n            intervalID = setInterval(() => {\n                if (counter === 0) {\n                    clearInterval(intervalID)\n                    setView({ ...viewState, hold: false, showOptions: true, holdTimer: counter })\n                    return\n                }\n                setView({ ...viewState, hold: true, holdTimer: counter, showOptions: true, })\n                counter--\n            }, 1000)\n        }\n    }, [state, viewState])\n\n    return (\n        <form onSubmit={onSubmitForm}>\n            <div className='field'>\n                <div className='control has-icons-left '>\n                    <input autoComplete=\"off\" disabled={loading || viewState.hold} required value={state.phone} onChange={(e) => setState({ ...state, phone: e.target.value })} placeholder='enter your phone number' className='input is-rounded' type='tel' />\n                    <span className='icon is-left is-small'><FaPhoneAlt /></span>\n                </div>\n\n            </div>\n            <div className='field mt-4'>\n                <div className='control'>\n                    {viewState.showOptions ?\n                        (\n                            <button onClick={onComplete} disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='button'>\n                                <FaAngleDoubleRight />&nbsp; Proceed\n                            </button>\n                        ) : (\n                            <button disabled={loading || viewState.hold} className={`button is-rounded is-uppercase is-info ${loading ? 'is-loading' : ''}`} type='submit'>\n                                {state.channel === 'sms' ? <><FaSms />&nbsp; Send Code</> : <><FaPhoneAlt />&nbsp; Call Me</>}\n                            </button>\n                        )\n                    }\n                </div>\n            </div>\n\n            <div className='field is-size-7'>\n\n                {viewState.showOptions ? (\n                    <>\n                        <p className='help mt-4 mb-2'>Didn't get code? {viewState.hold ? <span className='has-text-danger'>Try again in: {viewState.holdTimer}s</span> : null}</p>\n                        <div className='control buttons has-addons is-centered'>\n                            <button onClick={() => {\n                                setView({ ...viewState, showOptions: false })\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\n                                <span className='is-size-7'>Try Again</span>\n                            </button>\n                            <button onClick={() => {\n                                setState({ ...state, channel: state.channel === 'sms' ? 'call' : 'sms' })\n                                setView({ ...viewState, showOptions: false })\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\n                                <span className='is-size-7'> {state.channel === 'sms' ? \"Use voice\" : \"Use SMS\"}</span>\n                            </button>\n                        </div>\n                    </>\n                ) : null}\n            </div>\n\n        </form>\n    )\n}\n\n\nfunction LoginForm({ phone, loading, onSubmit, onCancel }) {\n    const [state, setState] = useState<ILogin>({\n        code: '',\n        phone_number: phone,\n        password: '',\n        showPassword: false,\n    })\n\n    const onSubmitForm = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        await onSubmit(state)\n    }, [state])\n\n    return (\n        <form onSubmit={onSubmitForm} >\n            <div className='field'>\n                <div className='control has-icons-left'>\n                    <input autoComplete=\"off\" disabled required value={state.phone_number} placeholder='enter your phone number' className='input' type='tel' />\n                    <span className='icon is-left is-small'><FaUser /></span>\n                </div>\n            </div>\n            <div className='field'>\n                <div className='control has-icons-left'>\n                    <input autoComplete=\"off\" pattern={'/.{4}/'} max={9999} maxLength={4} minLength={4} disabled={state.loading} required value={state.code} onChange={(e) => setState({ ...state, code: e.target.value })} placeholder='enter 4 digits code' className='input' type='number' />\n                    <span className='icon is-left is-small'><RiLockPasswordLine /></span>\n                </div>\n            </div>\n            <div className='field has-addons'>\n                <div className='control has-icons-left is-expanded'>\n                    <input autoComplete=\"off\" disabled={state.loading} required value={state.password} onChange={(e) => setState({ ...state, password: e.target.value })} placeholder='enter your password' className='input' type={state.showPassword ? 'text' : 'password'} />\n                    <span className='icon is-left is-small'><FaKey /></span>\n                </div>\n                <div className='control'>\n                    <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\n                    </button>\n                </div>\n            </div>\n            <div className='field mt-6'>\n                <div className='control buttons is-centered'>\n                    <button onClick={onCancel} disabled={loading} className={`button is-rounded is-uppercase is-dark is-outlined`} type='button'>\n                        <FaChevronLeft />&nbsp; Back\n                    </button>\n                    <button disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='submit'>\n                        <FaSignInAlt />&nbsp; Login\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { LoginView } from '../components/auth';\nimport { AuthHandler } from '../components/guard';\nimport { VIEW_CONTEXT } from '../lib';\n\nexport function Login() {\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({ showModal: false })\n\n    useEffect(() => {\n        viewCTX.showToolbar(false)\n        viewCTX.showFooter(false)\n\n        return () => {\n            viewCTX.showToolbar(true)\n            viewCTX.showFooter(true)\n        }\n    })\n\n    return (\n        <AuthHandler>\n            <div className='columns is-gapless is-fullheight is-multiline'>\n                <div className='column is-flex-centered is-atleast-fullheight'>\n                    <LoginView />\n                </div>\n                <div className='column is-6 is-hidden-touch is-flex has-background-info' />\n            </div>\n        </AuthHandler>\n    )\n}","import React, { useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\n\nexport function Logout() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n\n    useEffect(() => {\n        viewCTX.setAppReady(false)\n        viewCTX.showToolbar(false)\n        ctx.logout()\n\n        return () => {\n            viewCTX.showToolbar(true)\n            viewCTX.setAppReady(true)\n        }\n    }, [])\n\n    if (!viewCTX.signedIn) {\n        return <Redirect to={{ pathname: '/' }} />\n    }\n\n\n\n    return (\n        viewCTX.signedIn ? <></> : <Redirect to={{ pathname: '/' }} />\n    )\n}","import moment from \"moment\";\nimport React from 'react';\nimport { BsPencilSquare } from 'react-icons/bs';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport { FaSearch, FaComments } from 'react-icons/fa';\nimport { GoSettings } from 'react-icons/go';\nimport { User, DUMMY_USER } from '../lib/user';\nimport { NavLink } from \"react-router-dom\";\n\n\nexport function MessageListItem({ message }: { message: IMessage }) {\n    const time = moment.unix(message.timestamp / 1000)\n    return (\n        <NavLink activeClassName=\"is-active\" to={'./'} className={`message-item mb-8 is-block card is-shadowless has-background-white-ter`}>\n            <div className='card-content'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                            <figure className='image is-flex is-48x48'>\n                                <img className='is-rounded' src={message.author.profileImageURL} />\n                            </figure>\n                        </div>\n                        <div className='column'>\n                            <div className='columns mb-0 is-mobile name-bar'>\n                                <div className='has-text-left column is-narrow is-size-5 has-text-weight-medium'>\n                                    <p>{`${message.author.firstName} ${message.author.lastName}`}</p>\n                                </div>\n                                <div className='has-text-right column'>\n                                    <p>{time.calendar()}</p>\n                                </div>\n                            </div>\n                            <div className='content has-text-left'>\n                                <p>{message.content}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function MessageList({ onCreateNew = () => { }, className = '' }) {\n    return (\n        <div className={`${className} panel job-panel has-background-white-ter is-flex`}>\n            <div className='panel-heading is-flex is-vcentered'>\n                <p className='has-text-left'>Recent Messages</p>\n                <div className='field is-grouped is-grouped-right'>\n                    <button className='button is-rounded' onClick={onCreateNew}><BsPencilSquare /></button>\n                    <button className='button is-rounded' onClick={onCreateNew}><CgMoreAlt /></button>\n                </div>\n            </div>\n            <div className='panel-block'>\n                <div className='field has-addons' style={{ flex: 1 }}>\n                    <div className='control is-expanded has-icons-left'>\n                        <input style={{ borderRight: 0 }} className='input is-rounded' type='search' placeholder='Search Messages...' />\n                        <span className='icon is-left'><FaSearch /></span>\n                    </div>\n                    <div className='control'>\n                        <button style={{ borderLeft: 0 }} className='button is-rounded' onClick={() => window.alert(\"not ready yet\")}>\n                            <span className='icon is-right'><GoSettings /></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className='has-background-white-ter' style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n                {\n                    DUMMY_MESSAGES.map(m => <MessageListItem message={m} />)\n                }\n            </div>\n        </div>\n    )\n}\n\nexport function MessageDetail({ message, className, contact }: { contact?: User, className?: string, message: IMessage[] }) {\n    if (!message || !contact) {\n        return (\n            <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n                <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\n                    <span className='my-4' ><FaComments fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                    <p className='is-uppercase is-size-6 has-text-weight-bold'>Select a contact to start a chat</p>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n            <div className='card-content is-paddingless'>\n                <div className='level py-4 mb-0'>\n                    <div className='level-item is-size-6'></div>\n                    <div className='level-item is-size-4 has-text-weight-bold'>{`${contact.firstName} ${contact.lastName}`}</div>\n                    <div className='level-item is-size-6 pr-4' style={{ justifyContent: 'flex-end' }}>\n                        <button className='button is-rounded'><CgMoreAlt /></button>\n                    </div>\n                </div>\n                <div className='container is-fluid px-0'>\n                    <div className='columns is-fullheight mx-0 is-multiline'>\n                        <div className='column is-8-fullhd is-7-desktop is-12 px-0'>\n\n                        </div>\n                        <div className='column is-4-fullhd is-5-desktop is-12 is-flex'>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport interface IMessage {\n    content\n    author: User\n    timestamp\n    type: 'text' | 'image' | 'attachment'\n    id\n}\n\nexport const DUMMY_MESSAGES: IMessage[] = [\n    {\n        content: 'hello',\n        author: DUMMY_USER,\n        timestamp: Date.now(),\n        type: 'text',\n        id: 'abcdefgh'\n    }\n]","import React from 'react';\nimport { DUMMY_MESSAGES, MessageDetail, MessageList } from '../components/messages';\nimport { DUMMY_USER } from '../lib/user';\n\nexport function Messages() {\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <MessageList onCreateNew={() => { }} className='column is-3 is-12-touch is-clipped is-fullheight' />\n            <MessageDetail message={DUMMY_MESSAGES} contact={DUMMY_USER} className='column is-9 is-12-touch is-flex' />\n        </div>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { RegisterView } from '../components/auth';\nimport { AuthHandler } from '../components/guard';\nimport { VIEW_CONTEXT } from '../lib';\n\n\nexport function Register() {\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({ showModal: false })\n    const [formState, setFormState] = useState({\n        first_name: '',\n        last_name: '',\n        password: '',\n        password_verify: '',\n        email: '',\n        phone_number: '',\n        showPassword: false,\n        showPasswordVerify: false\n    })\n\n    useEffect(() => {\n        viewCTX.showToolbar(false)\n        viewCTX.showFooter(false)\n\n        return () => {\n            viewCTX.showFooter(true)\n            viewCTX.showToolbar(true)\n        }\n    })\n\n    return (\n        <AuthHandler>\n            <div className='columns is-gapless is-fullheight is-multiline'>\n                <div className='column is-flex-centered is-atleast-fullheight'>\n                    <RegisterView />\n                </div>\n                <div className='column is-6 is-hidden-touch is-flex has-background-success' />\n            </div>\n        </AuthHandler>\n    )\n}","import { unix } from 'moment';\nimport React, { useContext, useState } from 'react';\nimport { FaApple, FaChevronRight, FaCogs, FaPaypal } from 'react-icons/fa';\nimport { Link, NavLink, Route, Switch } from 'react-router-dom';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport links from '../lib/links';\n\nexport function SettingsDetail({ title, children = <></> }) {\n    return (\n        <div className=\"container is-fluid settings-detail\">\n            <div className='content mb-0 py-4'>\n                <p className='has-text-weight-bold is-size-4 has-text-left has-text-centered-mobile'>{title}</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport function Settings() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <div className={`box px-0 py-0`} style={{ flexDirection: 'column', flex: 1 }}>\n                <div className='card-content is-paddingless is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\n                    <div className='level py-4 mb-0' style={{ boxShadow: '0 0.125em 0.25em rgba(10, 10, 10, .1)' }}>\n                        <div className='level-left-item is-size-6'>\n                            <p className=\"title is-size-6 has-text-weight-bold pl-4\">Settings</p>\n                        </div>\n                    </div>\n                    <div className='container is-flex is-fluid px-0'>\n                        <div className='columns mx-0 is-multiline' style={{ flexGrow: 1 }}>\n                            <div className='column is-2-fullhd is-3-desktop is-12 px-0'>\n                                <div className='container'>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.loginAndSecurity} exact>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Login and Security</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.paymentMethods}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Payment Methods</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.additionalFeatures}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Additional Features</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.legalDocuments}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Legal Documents</p>\n                                        </div>\n                                    </NavLink>\n                                </div>\n                            </div>\n                            <div className='column is-10-fullhd is-9-desktop is-12 is-flex px-0'>\n                                <Switch >\n                                    <Route path={links.loginAndSecurity} exact render={() => (\n                                        <LoginAndSecurity />\n                                    )} />\n                                    <Route path={links.paymentMethods} exact render={() => (\n                                        <PaymentMethods />\n                                    )} />\n                                    <Route path={links.legalDocuments} exact render={() => (\n                                        <LegalDocuments />\n                                    )} />\n                                    <Route render={() => (\n                                        <div className=\"container is-fluid is-flex-centered settings-detail py-6\">\n                                            <div className='content has-text-grey'>\n                                                <span className='my-4' ><FaCogs fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                                                <p className='is-uppercase is-size-6 has-text-weight-bold'>Manage your account</p>\n                                            </div>\n                                        </div>\n                                    )} />\n                                </Switch>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport function LoginAndSecurity() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Login and Security\"} children={(\n            <>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Email Address</p>\n                        <p className='subtitle has-text-grey'>Email address connected to your account</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control`}>\n                            <input className={`input ${state.editEmail ? '' : 'is-static'} has-text-black is-size-5 has-text-right has-text-centered-mobile`} value={state.email} contentEditable={false} disabled={!state.editEmail} onChange={e => setState({ ...state, email: e.target.value })} />\n                        </div>\n                        <div className='field is-grouped is-grouped-right'>\n                            <div className='control'>\n                                <button className='button' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\n                            </div>\n                            {state.editEmail ? (\n                                <div className='control'>\n                                    <button className={`button is-info ${state.isLoadingEmail ? 'is-loading' : ''}`} onClick={() => {\n                                        setState({ ...state, isLoadingEmail: true })\n                                    }}>Change</button>\n                                </div>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Phone Number</p>\n                        <p className='subtitle has-text-grey'>Your phone number provided upon signing-up</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control`}>\n                            <input className={`input is-static has-text-right has-text-black is-size-5 has-text-centered-mobile`} disabled value={ctx.user?.phoneNumber} />\n                        </div>\n                        <p className='subtitle has-text-grey'>Due to restrictions, contact support to modify your phone number</p>\n\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Password</p>\n                        <p className='subtitle has-text-grey'>Maintain a strong, unique password to protect your account</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control title`}>\n                            <button className='button is-link' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\n                        </div>\n                        <p className='subtitle has-text-grey'>{state.lastPasswordChanged ? `Last modified ${state.lastPasswordChanged.calendar()}` : \"Never Changed\"}</p>\n\n                    </div>\n                </div>\n            </>\n        )} />\n    )\n}\n\n\nexport function PaymentMethods() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Payment Methods\"} children={(\n            <>\n                <div className='columns is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Preferred Method</p>\n                        <p className='subtitle has-text-grey'>Selected method of payment for jobs</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>{'VI 534***1234 12/22'}</p>\n                        <Link to={`${links.paymentMethods}/change`} >Change</Link>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Other Methods</p>\n                    </div>\n                </div>\n                <div className='columns' style={{ borderTop: 0 }}>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className='button is-white is-large'>\n                            <span className='icon'>\n                                <FaApple size={80} />\n                            </span>\n                            <span>Apple Pay</span>\n                            <span className='icon'>\n                                <FaChevronRight size={20} />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className='button is-white is-large'>\n                            <span className='icon'>\n                                <FaPaypal size={80} />\n                            </span>\n                            <span>PayPal</span>\n                            <span className='icon'>\n                                <FaChevronRight size={20} />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='columns' style={{ borderBottom: 0 }}>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <Link to={`${links.paymentMethods}/add`}>+ Add a Payment Method</Link>\n                    </div>\n                </div>\n            </>\n        )} />\n    )\n}\n\n\nexport function LegalDocuments() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Legal Documents\"} children={(\n            <>\n                <Link to={`${links.legalDocuments}/useragreement`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >User Agreement</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/privacy`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Privacy Policy</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/terms`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Terms of Service</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/cookie`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Cookie Policy</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n            </>\n        )} />\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Footer } from './components/footer';\nimport { AuthGuard } from './components/guard';\nimport Toolbar from './components/toolbar';\nimport { Loading } from './components/util';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from './lib';\nimport './lib/firebase';\nimport links from './lib/links';\nimport { User } from './lib/user';\nimport { Dashboard } from './pages/dashboard';\nimport { Jobs } from './pages/jobs';\nimport { Login } from './pages/login';\nimport { Logout } from './pages/logout';\nimport { Messages } from './pages/messages';\nimport { Register } from './pages/register';\nimport { Settings } from './pages/settings';\n\nfunction App() {\n  const ctx = useContext(APPLICATION_CONTEXT)\n  const [state, setState] = useState({ ready: false, })\n  const [showFooter, setShowFooter] = useState(true)\n  const [_showToolbar, showToolbar] = useState(true)\n  const [signedIn, setSignedIn] = useState<null | User>(null)\n\n  const viewContext = {\n    signedIn,\n    setSignedIn,\n    setAppReady: (ready) => setState({ ...state, ready }),\n    showToolbar,\n    showFooter: (showFooter) => setShowFooter(showFooter)\n  }\n\n  useEffect(() => {\n    ctx.loginListener = () => {\n      if (ctx.signedIn()) {\n        viewContext.setSignedIn(ctx.user as User)\n      }\n    }\n\n    ctx.logoutListener = () => viewContext.setSignedIn(null)\n\n    ctx.ready.then((ready) => {\n      if (!ready) {\n        return console.log('Failed to start application due to an internal error.', 'Please contact application admin')\n      }\n      setState({ ...state, ready: true })\n    })\n      .catch(e => {\n        console.log(e)\n      })\n  }, [])\n\n  return (\n    <VIEW_CONTEXT.Provider value={viewContext}>\n      {state.ready ?\n        <>\n          {_showToolbar ? <Toolbar /> : null}\n          <div className='App-Body'>\n            <div className='is-fullheight'>\n              <Switch>\n                <Route component={Login} path={links.login} exact />\n                <Route component={Register} path={links.register} exact />\n                <Route component={Logout} path={links.logout} exact />\n\n                <AuthGuard component={Settings} path={links.settings} />\n                <AuthGuard render={(props) => {\n                  return <Redirect to={{ pathname: links.activeJobs, state: props.location.state }} />\n                }} path={links.jobs} exact />\n                <Route component={Jobs} path={links._jobItem.active} />\n                <AuthGuard component={Jobs} path={links._jobItem.inactive} />\n                <AuthGuard component={Messages} path={links._messages} />\n                <Route component={Dashboard} path={links.dashboard} exact />\n\n                <Route path={links.home} strict={false} exact={true}>\n                  {ctx.signedIn() && viewContext.signedIn ? <Redirect to={links.dashboard} /> : <Redirect to={links.login} />}\n                </Route>\n                <AuthGuard />\n              </Switch>\n            </div>\n          </div>\n          {showFooter ? <Footer /> : null}\n        </> :\n        <Loading />\n      }\n    </VIEW_CONTEXT.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@yaireo/tagify/dist/tagify.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ToastProvider } from 'react-toast-notifications';\nimport { BrowserRouter } from 'react-router-dom';\nimport { APPLICATION_CONTEXT, DEFAULT_APPLICATION } from \"./lib\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider autoDismiss={5000} placement='top-center'>\n      <BrowserRouter basename='/contractoradmin'>\n        <APPLICATION_CONTEXT.Provider value={DEFAULT_APPLICATION}>\n          <App />\n        </APPLICATION_CONTEXT.Provider>\n      </BrowserRouter>\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}