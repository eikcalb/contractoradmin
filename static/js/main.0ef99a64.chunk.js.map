{"version":3,"sources":["logo.svg","lib/config.ts","lib/storage.ts","lib/firebase.ts","lib/user.ts","lib/message.ts","lib/index.tsx","lib/links.ts","components/footer.tsx","components/guard.tsx","lib/theme.ts","components/toolbar.tsx","components/util.tsx","lib/job.ts","components/map.tsx","components/job.tsx","components/JobList.tsx","components/notification.tsx","lib/payment.ts","components/payment.tsx","pages/dashboard.tsx","lib/location.ts","components/jobcreation.tsx","components/JobSideList.tsx","pages/jobs.tsx","components/auth.tsx","pages/login.tsx","pages/logout.tsx","components/messages.tsx","pages/messages.tsx","pages/profile.tsx","pages/register.tsx","pages/settings.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","CONFIG","name","description","version","hostname","Google","mapKey","KEYS","initializeStorage","app","a","lf","config","driver","INDEXEDDB","LOCALSTORAGE","WEBSQL","storeName","ready","localforage","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","geoFirestore","GeoFirestore","enablePersistence","synchronizeTabs","User","data","raw","token","jobType","activeTask","lastPasswordChanged","this","profilePhoto","id","initiateNetworkRequest","method","referrerPolicy","headers","Authorization","response","ok","Error","json","message","jsonResponse","user","console","log","collection","doc","get","snap","docs","forEach","text","first_name","last_name","push","ctx","callback","err","noop","limit","query","unsubscribe","native","orderBy","onSnapshot","notifications","item","location","address","location_address","role","firstName","lastName","occupation","city","state","starRate","email","password","phoneNumber","profileBio","dateCreated","accountStatus","workHistory","educationalBackground","skills","licenses","star_rate","date_created","account_status","educational_background","phone_number","profile_photo","DUMMY_USER","Date","now","Message","content","sender","DEFAULT_SETTINGS","lastUserName","DEFAULT_APPLICATION","settings","logoutListener","loginListener","Promise","res","rej","init","getItem","appData","info","inflateUser","options","JSON","stringify","setItem","path","request","authenticated","isJson","Accept","reqObj","mode","fetch","resp","status","reauthenticate","logout","session","phone","trim","validator","isMobilePhone","startsWith","encodeURIComponent","valid","channel","body","username","code","validateLogin","success","getUser","userName","persistUser","matches","validateRegister","password_verify","isEmail","undefined","removeItem","APPLICATION_CONTEXT","createContext","VIEW_CONTEXT","setSignedIn","signedIn","setAppReady","showToolbar","show","showFooter","footer","active","inactive","Footer","useContext","className","getFullYear","to","links","AuthGuard","children","rest","viewCTX","useLocation","pathname","from","AuthHandler","timer","STYLES","toolbar","boxShadow","appLogoIcon","fontSize","marginRight","color","appLogoText","fontWeight","jobProgressBar","height","Toolbar","useState","showMenu","setState","style","aria-label","aria-expanded","data-target","onClick","clearTimeout","setTimeout","aria-hidden","exact","activeClassName","type","placeholder","Empty","icon","onDismiss","props","Loading","alignItems","padding","max","CardFragment","header","optionsElement","optionsText","onOptionsTextClick","useLoadGoogleMaps","loading","setLoading","useEffect","Loader","libraries","load","then","JOB_TYPES","Job","job","photos","posted_by","job_title","salary","wage","tasks","length","job_description","required_count","coordinates","GeoPoint","coords","latitude","longitude","newDoc","db","photo_files","FormData","map","photo","append","apiResponse","set","jobID","delete","where","jobs","resolve","added","modified","removed","docChanges","change","MapView","memo","title","vertical","zoom","zoomControl","mapEl","useRef","setMap","marker","setMarker","current","_mapInstance","google","maps","Map","center","lat","lng","gestureHandling","mapTypeControl","fullscreenControl","Marker","position","animation","Animation","DROP","setCenter","setPosition","width","backgroundColor","minHeight","ref","JobListItem","time","moment","toDate","whiteSpace","textOverflow","overflow","job_type","flexDirection","flex","justifyContent","src","getPhotoURL","calendar","sameElse","value","JobItem","PendingJobItem","key","endTime","toMillis","date_completed","overflowX","progress","lineHeight","JobDetail","onCancel","fill","JobDetailTask","onJobCancel","borderLeft","JobDetailUser","startTime","totalTime","loadingCancel","addToast","useToasts","unix","diff","useCallback","window","confirm","cancelJob","appearance","JobReview","task","toFixed","alignSelf","disabled","borderBottom","JobList","Array","listenForActiveJobs","all","v","executed_by","getExternalUser","j","NotificationContext","addNotification","notif","NotificationProvider","setNotifications","notification","listenForNotifications","Provider","NotificationItem","borderRadius","getNotificationIcon","maxLines","fromNow","NotificationList","expanded","setExpanded","notifCtx","size","transition","n","index","TRANSACTION_STATUS","CurrencyFormatter","Intl","NumberFormat","currency","maximumFractionDigits","Payment","page","timestamp","cost","amount","payee","payment","format","PaymentItem","getPaymentDescription","PaymentList","payments","setPayments","fetchPayment","pageToFetch","Math","floor","getTransactions","paymentData","p","Dashboard","marginBottom","getCurrentLocation","navigator","geolocation","getCurrentPosition","enableHighAccuracy","maximumAge","FormField","listener","autocomplete","label","onChange","readOnly","locationAutocomplete","tagifyRef","required","whitelist","tags","showBorder","containerClassName","isTextArea","maxLength","Number","MAX_SAFE_INTEGER","helpTextTop","helpTextLeft","helpTextRight","hasAddons","addon","inputRef","loadingGoogleMaps","places","Autocomplete","fields","addListener","place","getPlace","formatted_address","geometry","place_id","remove","unbindAll","event","clearInstanceListeners","autoComplete","enabled","rightKey","e","persist","target","borderRight","inputMode","FileInput","onRemovePhoto","el","files","i","multiple","accept","file","CreateJob","onClose","onComplete","requiredPersons","price","loadingTypes","fetchingLocation","manualAddress","setPhotos","types","useMemo","jobTypes","createRef","getJobTypes","tagify","dropdown","hide","call","onSubmit","stopPropagation","preventDefault","parse","newJob","FieldValue","serverTimestamp","parseInt","v4","accuracy","altitude","heading","altitudeAccuracy","speed","isEmpty","find","addNewJob","zIndex","filter","_","JobSideList","activeJobs","isActive","inactiveJobs","onCreateNew","activeSearchData","setActiveSearchData","inactiveSearchData","setInactiveSearchData","searchText","setSearchText","isLoading","setIsLoading","searchAlg","regexp","RegExp","search","triggerSearch","result","useDebouncedCallback","overflowY","render","Jobs","showModal","selected","setActive","setInactive","dismissModal","containers","document","getElementsByClassName","removeEscapeHandler","handler","ev","addEventListener","removeEventListener","useEscapeHandler","listenForActiveAndPendingJobs","getInactiveJobs","catch","useParams","activeMatch","useRouteMatch","strict","inactiveMatch","RegisterView","showCodeRequest","showPassword","showPasswordVerify","formState","setFormState","history","useHistory","addAdmin","margin","logo","LoginView","onSubmitCodeRequest","form","validateNumber","triggerVerification","onSubmitVerified","login","CodeRequestForm","LoginForm","intervalID","showOptions","hold","holdTimer","viewState","setView","onSubmitForm","counter","clearInterval","setInterval","pattern","minLength","Login","Logout","MessageListItem","author","profileImageURL","MessageList","alert","DUMMY_MESSAGES","m","MessageDetail","contact","Messages","Profile","setUser","comments","setComments","loadingComments","setLoadingComments","getComments","commentsData","border","borderTop","top","onError","img","currentTarget","background","flexGrow","comment","skill","license","license_number","expiration_date","Register","SettingsDetail","Settings","LoginAndSecurity","PaymentMethods","LegalDocuments","editEmail","isLoadingEmail","contentEditable","App","setShowFooter","_showToolbar","viewContext","component","Boolean","match","ReactDOM","StrictMode","autoDismiss","placement","basename","getElementById","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.0ef99a64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { Config } from \".\";\n\nconst CONFIG: Config = {\n    name: 'Gigchasers Admin',\n    description: 'Gigchasers admin dashboard',\n    version: '1.0',\n    hostname: 'https://contractor-app-test-api.herokuapp.com/v1',\n    // hostname: 'http://localhost:3001/v1',\n    Google: {\n        mapKey: 'AIzaSyDJYsVNmPa73T-okzgJTs3UKiUReJ8iHsU'\n    }\n}\n\nexport default CONFIG","import lf from \"localforage\";\nimport { Application } from \".\";\n\nexport const KEYS = {\n    USER_SESSION: 'app.user.session',\n    REFRESH_TOKEN: 'app.user.refreshtoken',\n    APP_DATA: 'app.data'\n}\n\nexport async function initializeStorage(app: Application) {\n    lf.config({\n        driver: [\n            lf.INDEXEDDB,\n            lf.LOCALSTORAGE,\n            lf.WEBSQL\n        ],\n        name: `${app.config.name} v${app.config.version}`,\n        version: 1,\n        storeName: 'adminstore',\n        description: 'Storage for Contractor application administrative interface'\n    })\n\n    await lf.ready()\n}\n\nexport const localforage = lf\n","import firebase from \"firebase/app\";\n// Required for side-effects\nimport \"firebase/firestore\";\nimport { GeoFirestore } from \"geofirestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDjXx1AqIQnkyKkCPh8HZKZYyiKGfiLcbc\",\n  authDomain: \"contracting-app.firebaseapp.com\",\n  databaseURL: \"https://contracting-app.firebaseio.com\",\n  projectId: \"contracting-app\",\n  storageBucket: \"contracting-app.appspot.com\",\n  messagingSenderId: \"557426956160\",\n  appId: \"1:557426956160:web:c1393a9710ed0e40151365\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore(),\n  geoFirestore = new GeoFirestore(firestore)\n\n  firestore.enablePersistence({\n    synchronizeTabs:true\n  })","import { IJobHistory } from \"./job\";\nimport { IEducationHistory, ILicense } from \"./education\";\nimport { Application } from \".\";\nimport { geoFirestore } from \"./firebase\";\nimport { INotification } from \"../components/notification\";\n\nexport const DUMMY_TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdlMDFmOTBiMjRmNzAwMTcyZmRkOTQiLCJlbWFpbCI6Inp6QGdtYWlsLmNvbSIsInBob25lX251bWJlciI6IisyMzQ4MDgzODIxNzgyIiwiaWF0IjoxNjE1NjYzNDQ4fQ.nHEwobqCa4yT1z27ydwpSHPg_6s4CEp1QarlJGU1HUo\"\nexport const DUMMY_TOKEN_SECRET = \"secret\"\n\nclass AppUser {\n    id\n    role: string\n    firstName: string\n    lastName: string\n    occupation: string\n    city: string\n    state: string\n    starRate: number = 5.0\n    email: string\n    password?: string\n    phoneNumber: string\n    profilePhoto: string\n    profileBio?: string\n    dateCreated?: Date\n    accountStatus: string = \"Pending\"\n    workHistory: IJobHistory[] = []\n    educationalBackground: IEducationHistory[] = []\n    skills: string[] = []\n    licenses: ILicense[] = []\n\n    constructor(data, raw?: boolean) {\n        if (raw) {\n            this.role = data.role\n            this.firstName = data.first_name\n            this.lastName = data.last_name\n            this.occupation = data.occupation\n            this.starRate = data.star_rate\n            this.dateCreated = data.date_created\n            this.city = data.city\n            this.email = data.email\n            this.accountStatus = data.account_status\n            this.educationalBackground = data.educational_background\n            this.phoneNumber = data.phone_number\n            this.profilePhoto = data.profile_photo\n            this.state = data.state\n            this.skills = data.skills\n        } else {\n            this.role = data.role\n            this.firstName = data.firstName\n            this.lastName = data.lastName\n            this.occupation = data.occupation\n            this.starRate = data.starRate\n            this.dateCreated = data.dateCreated\n            this.city = data.city\n            this.email = data.email\n            this.accountStatus = data.accountStatus\n            this.educationalBackground = data.educationalBackground\n            this.phoneNumber = data.phoneNumber\n            this.profilePhoto = data.profilePhoto\n            this.state = data.state\n            this.skills = data.skills\n        }\n\n        this.id = data.id\n    }\n}\n\nexport class User extends AppUser {\n    get profileImageURL() {\n        return this.profilePhoto\n    }\n    token\n    jobType?: \"onsite\" | \"remote\"\n    activeTask\n    lastPasswordChanged?: number\n\n    constructor(data, raw?: boolean) {\n        super(data, raw)\n        this.token = data.token\n        this.jobType = data.jobType\n        this.activeTask = data.activeTask\n        this.lastPasswordChanged = data.lastPasswordChanged\n    }\n\n    /**\n     * \n     * @param app Application object\n     * @param id Identity of user whose detail will be fetched\n     * @param token Secret token obtained from logging into the application.\n     */\n    static async getUser(app: Application, id: string, token: string) {\n        try {\n            const response = await app.initiateNetworkRequest(`/users/${id}`, {\n                method: 'GET',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    Authorization: `Bearer ${token}`\n                },\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Failed to fetch user data!\")\n            }\n\n            const jsonResponse = await response.json()\n            const user = new User(jsonResponse, true)\n            user.id = id\n            user.token = token\n\n            return user\n\n        } catch (e) {\n            throw e\n        }\n    }\n\n    /**\n       * \n       * @param app Application object\n       * @param id Identity of user whose detail will be fetched\n       */\n    static async getExternalUser(app: Application, id: string): Promise<User> {\n        try {\n            const response = await app.initiateNetworkRequest(`/users/${id}`, {\n                method: 'GET',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }, true)\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Failed to fetch user data!\")\n            }\n\n            const jsonResponse = await response.json()\n            const user = new User(jsonResponse, true)\n            user.id = id\n\n            return user\n        } catch (e) {\n            console.log('failed to fetch user data', e)\n            return new User({})\n        }\n    }\n\n    static async getComments(id: string): Promise<{ text: string, first_name: string, last_name: string }[]> {\n        if (!id) {\n            return []\n        }\n        const snap = await geoFirestore.collection('comments').doc(id).collection('messages').get()\n        const docs: { text: string, first_name: string, last_name: string }[] = []\n        snap.forEach(({ text, first_name, last_name }: any) => docs.push({ text, first_name, last_name }))\n        return docs\n    }\n\n\n    static listenForNotifications(ctx: Application, callback = (err: Error | null, noop?: INotification[] | null) => { }, limit = 100) {\n        let query = geoFirestore.collection('notifications')\n\n        // TODO: limit notifications displayed to non-admin\n        const unsubscribe = query.native.orderBy('dateCreated', 'desc').limit(limit).onSnapshot(async snap => {\n            const notifications: INotification[] = [];\n            (snap).forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                notifications.push(item)\n            })\n            callback(null, notifications)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n}\n\nexport const DUMMY_USER: User = new User({})\n\nDUMMY_USER.firstName = \"Johnathan\"\nDUMMY_USER.lastName = \"Doe\"\nDUMMY_USER.id = 'unique'\nDUMMY_USER.email = 'a@example.com'\nDUMMY_USER.profileBio = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ullam vero iure, ducimus, explicabo vel nesciunt eveniet, enim quis quos ex autem!\"\nDUMMY_USER.jobType = 'onsite'\nDUMMY_USER.phoneNumber = '080838111111'\nDUMMY_USER.starRate = 4.2\nDUMMY_USER.lastPasswordChanged = Date.now()\nDUMMY_USER.dateCreated = new Date(\"20/07/2020\")\nDUMMY_USER.skills = ['Farming', 'Poultry']\n// DUMMY_USER.profileImageURL = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTv3f3Zf2onEOPtpRtWPoRX6SWQUSpV_GBB6Q&usqp=CAU\"\n","import React from \"react\";\n\nexport class Message {\n    content\n    sender\n\n    isSameUser(message: Message) {\n        return message.sender === this.sender\n    }\n\n\n    isSameDay(){\n        \n    }\n}\n","import { createContext } from \"react\"\nimport validator from \"validator\"\nimport { IRegister } from \"../components/auth\"\nimport CONFIG from \"./config\"\nimport { initializeStorage, KEYS, localforage } from \"./storage\"\nimport { DUMMY_USER, User } from \"./user\"\nimport { Message } from \"./message\";\n\ninterface ISettings {\n    lastUserName: string\n}\n\nconst DEFAULT_SETTINGS = {\n    lastUserName: ''\n}\n\nexport class Application {\n    config: Config\n    user?: User\n    ready: Promise<boolean>\n\n    protected settings: ISettings = DEFAULT_SETTINGS\n\n    logoutListener?: () => any\n    loginListener?: () => any\n\n    constructor(config: Config) {\n        this.config = config\n        this.ready = new Promise(async (res, rej) => {\n            try {\n                await this.init()\n                res(true)\n            } catch (e) {\n                // if an error occurred during initialization, throw the error and handle within the application\n                console.log(e)\n                return rej(e)\n            }\n        })\n    }\n\n    /**\n     * Initialize application dependencies.\n     * \n     * Dependencies that fail to load should fail silently at this stage, unless required for application to function.\n     */\n    async init() {\n        await initializeStorage(this)\n\n        try {\n            const appData: ISettings | null = await localforage.getItem(KEYS.APP_DATA)\n            if (appData) {\n                this.settings = appData\n            }\n        } catch (e) {\n            console.info(e, 'No app data persisted!')\n        }\n\n        // check for existing user session\n        try {\n            await this.inflateUser()\n            // If user session exists, trigger login listener\n            if (this.loginListener) {\n                this.loginListener()\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n        return true\n    }\n\n\n    signedIn(): boolean {\n        return this.user && this.user?.token\n    }\n\n\n    async updateSettings(options: Partial<ISettings>) {\n        if (!options) {\n            throw new Error('Empty options provided!')\n        }\n        if (JSON.stringify(options) === JSON.stringify(this.settings)) {\n            return\n        }\n\n        this.settings = {\n            ...this.settings,\n            ...options\n        }\n\n        return await localforage.setItem(KEYS.APP_DATA, this.settings)\n    }\n\n    async initiateNetworkRequest(path: string, request?: RequestInit, authenticated = false, isJson = true): Promise<Response> {\n        const headers = {\n            ...request?.headers,\n            Accept: 'application/json',\n            Authorization: authenticated ? `Bearer ${this.user?.token}` : request?.headers?.['Authorization'],\n        }\n\n        if (isJson) {\n            headers['Content-Type'] = 'application/json'\n        }\n        \n        const reqObj: RequestInit = {\n            ...request,\n            referrerPolicy: 'no-referrer',\n            mode: 'cors',\n            headers\n        }\n\n        const resp = await fetch(`${this.config.hostname}${path}`, reqObj)\n        if (resp.status === 401) {\n            if (!this.user) {\n                throw new Error(\"Unauthenticated access not allowed!\")\n            }\n            // Authorization failed. This usually means the token has expired and refresh token could not be used to regenerate token\n            //\n            // Try to reauthenticate the user\n            try {\n                const { token } = await this.reauthenticate()\n                this.user.token = token\n                // since token is generated already, retry the request\n                if (reqObj && reqObj.headers && reqObj.headers['Authorization']) {\n                    reqObj.headers['Authorization'] = `Bearer ${token}`\n                }\n                return await this.initiateNetworkRequest(path, reqObj)\n            } catch (e) {\n                await this.logout()\n                throw e || new Error(\"App session expired. Login to continue!\")\n            }\n        }\n        return resp\n    }\n\n    protected async reauthenticate(): Promise<{ token: string }> {\n        // No logic to reauthenticate. Throw error, forcing user to logout.\n        throw new Error(\"Failed to authenticate user!\")\n    }\n\n    protected async inflateUser() {\n        // inflate user session\n        let session: User | null = await localforage.getItem(KEYS.USER_SESSION)\n        if (!session) throw new Error(\"No session available for user!\")\n\n        this.user = new User(session)\n        return this.user\n    }\n\n    protected async persistUser() {\n        if (!this.user) {\n            throw new Error('No user created!')\n        }\n\n        await localforage.setItem(KEYS.USER_SESSION, this.user)\n    }\n\n    async validateNumber(phone: string) {\n        if (!phone) {\n            throw new Error(\"Phone number must be provided!\")\n        }\n        phone = phone.trim()\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n\n        const response = await this.initiateNetworkRequest(`/users/phone/${encodeURIComponent(phone)}`, {\n            method: 'GET',\n        })\n\n        if (!response.ok) {\n            throw new Error((await response.json())?.message || \"Verification failed!\")\n        }\n\n        const jsonResponse = await response.json()\n        if (!jsonResponse.valid) {\n            throw new Error('Invalid phone number (ensure phone number is associated with a user)!')\n        }\n\n        return true\n    }\n\n    async triggerVerification(phone: string, channel: string = 'sms') {\n        if (!phone) {\n            throw new Error(\"Phone number must be provided!\")\n        }\n        phone = phone.trim()\n\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n\n        const response = await this.initiateNetworkRequest('/users/sms_registration', {\n            method: 'POST',\n            body: JSON.stringify({ phone_number: phone, channel })\n        })\n        if (!response.ok) {\n            throw new Error((await response.json())?.message || \"Verification failed!\")\n        }\n\n        return true\n    }\n\n    async login(username, code, password) {\n        try {\n            await this.validateLogin(username, code, password)\n\n            const response = await this.initiateNetworkRequest('/users/login', {\n                method: 'POST',\n                referrerPolicy: \"no-referrer\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({ phone_number: username, code, password })\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message || \"Login failed!\")\n            }\n\n            const jsonResponse = await response.json()\n            if (!jsonResponse.success) {\n                throw new Error(\"Login failed!\")\n            }\n            this.user = await User.getUser(this, jsonResponse.userName, jsonResponse.token)\n            if (this.user.role !== 'admin') {\n                // TODO: Decide the kind of users that can access this webapp\n                // throw new Error(\"Authenticated access only allowed for administrators!\")\n            }\n\n            await this.persistUser()\n            if (this.loginListener) {\n                this.loginListener()\n            }\n\n            return this.user\n\n        } catch (e) {\n            throw e\n        }\n    }\n\n    protected async validateLogin(phone: string, code: string, password: string) {\n        if (!phone || !password || !code) {\n            throw new Error(\"Credentials not provided!\")\n        }\n        phone = phone.trim()\n\n        if (!phone || !validator.isMobilePhone(phone)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n        if (!validator.matches(password, /.{6,}/i)) {\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\n        }\n        if (!validator.matches(code, /[0-9]{4}/)) {\n            throw new Error(\"Invalid code provided (provided code must have 4 digits)!\")\n        }\n    }\n\n    // TODO\n    async addAdmin(data: IRegister) {\n        try {\n            await this.validateRegister(data)\n\n            const response = await this.initiateNetworkRequest('/users/new', {\n                method: 'POST',\n                body: JSON.stringify({\n                    ...data,\n                    role: 'admin',\n                    account_status: 'pending'\n                })\n            })\n            if (!response.ok) {\n                throw new Error((await response.json())?.message)\n            }\n\n            const jsonResponse = await response.json()\n\n            return jsonResponse\n        } catch (e) {\n            throw e\n        }\n    }\n\n    protected async validateRegister(data: IRegister) {\n        let { email, password, first_name, last_name, password_verify, phone_number } = data\n        if (!email || !password) {\n            throw new Error(\"Credentials not provided!\")\n        }\n        if (password !== password_verify) {\n            throw new Error('Passwords do not match!')\n        }\n        email = email.trim()\n        first_name = first_name.trim()\n        last_name = last_name.trim()\n        if (!first_name || !last_name) {\n            throw new Error('Firstname and lastname must be provided!')\n        }\n        if (!email || !validator.isEmail(email)) {\n            throw new Error(\"Invalid username provided!\")\n        }\n        if (!phone_number || !validator.isMobilePhone(phone_number)) {\n            throw new Error(\"Invalid phone number provided!\")\n        }\n        if (!phone_number.startsWith('+')) {\n            throw new Error(\"Phone number must begin with '+' and contain country code!\")\n        }\n        if (!validator.matches(password, /.{6,}/i)) {\n            throw new Error(\"Invalid password provided (Password must be more than 6 characters)!\")\n        }\n    }\n\n\n    async logout() {\n        new Message()\n        this.user = undefined\n        await localforage.removeItem(KEYS.USER_SESSION)\n        //await localforage.removeItem(KEYS.REFRESH_TOKEN)\n        if (this.logoutListener) {\n            this.logoutListener()\n        }\n    }\n}\n\nexport const DEFAULT_APPLICATION = new Application(CONFIG)\nDEFAULT_APPLICATION.user = DUMMY_USER\n/**\n * This is the application context used within the web application.\n * \n * This context provided the application engine and is not tied to any view rendering.\n * \n * The underlying aplication object exposes the required functions and do not modify the view.\n * This underlying object is made available to all React components via the application context.\n * \n * All view rendering is managed in React.\n * \n * **VIEW RENDERING SHOULD NOT DEPEND ON ANY PROPERTY OF THIS CONTEXT**\n */\nexport const APPLICATION_CONTEXT = createContext<Application>(DEFAULT_APPLICATION)\n\n/**\n * This context is used for managing the views within the web app.\n * Activities such as loading and splashscreen are implemented using this context.\n */\nexport const VIEW_CONTEXT = createContext<{\n    setSignedIn: any,\n    signedIn: null | User,\n    setAppReady: any,\n    showToolbar: any,\n    showFooter: any\n}>({\n    setSignedIn: (signedIn) => { },\n    signedIn: null,\n    setAppReady: (ready: boolean) => { },\n    showToolbar: (show: boolean) => { },\n    showFooter: (footer) => { }\n})\n\nexport interface Config {\n    name: string\n    version: string\n    description: string\n    hostname: string\n    Google: {\n        mapKey: string\n    }\n}\n","export default {\n    register: '/register',\n    login: '/login',\n    messages: '/messages',\n    _messages: '/messages/:id?',\n    home: '/',\n    dashboard: '/dashboard',\n    invoices: '/invoices',\n    jobs: '/jobs',\n    activeJobs: '/jobs/active',\n    inactiveJobs: '/jobs/inactive',\n    _jobItem: {\n        active: '/jobs/active/:id?',\n        inactive: '/jobs/inactive/:id?'\n    },\n    privacyPolicy: '/privacyPolicy',\n    termsOfService: '/terms',\n    profile: '/profile',\n    _profile: '/profile/:id',\n    helpCenter: '/help',\n    logout: '/logout',\n    settings: '/settings',\n    loginAndSecurity: '/settings',\n    paymentMethods: '/settings/payment',\n    additionalFeatures: '/settings/features',\n    legalDocuments: '/settings/legal'\n}","import React, { useContext } from \"react\";\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport links from '../lib/links'\nimport { Link } from \"react-router-dom\";\n\nexport function Footer() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    return (\n        <footer className='footer is-unselectable' >\n            <div className=\"content has-text-centered is-size-7-touch\">\n                <p>&copy; {ctx.config.name} {new Date().getFullYear()}. All Rights Reserved | <Link to={links.privacyPolicy}>Privacy Policy</Link> | <Link to={links.termsOfService}>Terms of Service</Link> </p>\n            </div>\n        </footer>\n    )\n}","import React, { useContext } from \"react\"\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from \"../lib\"\nimport { Redirect, Route, useLocation, useHistory, RouteProps } from \"react-router-dom\"\nimport links from \"../lib/links\"\n\n/**\n * HOC (high order component) for rendering private views only if the user is authenticated.\n * \n * @param children View to render if authenticated\n */\nexport function AuthGuard({ children, ...rest }: RouteProps) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const location = useLocation()\n\n    return (\n        <Route {...rest}>\n            {ctx.signedIn() && viewCTX.signedIn ? (\n                children\n            ) : (\n                    <Redirect to={{\n                        pathname: links.login,\n                        state: {\n                            from: location\n                        }\n                    }} />\n                )\n            }\n        </Route>\n    )\n}\n\n/**\n * HOC for rendering components based on the authenticated state of the application.\n * This HOC is used for conditionally rendering authentication views (like login pages) or redirect if the user is already authenticated.\n * \n * @param children View to render\n */\nexport function AuthHandler({ children }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const location = useLocation()\n\n    if (ctx.signedIn() && viewCTX.signedIn) {\n        const { from } = (location.state as any) || { from: { pathname: '/' } }\n        return <Redirect to={from} />\n    } else {\n        return children\n    }\n}","import React from 'react'\n\nexport const STYLES: { [key: string]: React.CSSProperties } = {\n    toolbar: {\n        boxShadow: \"-2px 2px 3px 0px #8888\",\n        // background: \"#282c34\",\n    },\n    appLogoIcon: {\n        fontSize: '2em',\n        marginRight: '.5em',\n        color: 'blue'\n    },\n    appLogoText: {\n        fontSize: '1.2em',\n        fontWeight: 'bold'\n    },\n    jobProgressBar:{\n        height:'.4em'\n    }\n}","import React, { useState, useContext, useCallback } from 'react'\nimport { STYLES } from '../lib/theme'\nimport { FaJoint, FaUser, FaContao, FaCog, FaSearch } from \"react-icons/fa\";\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\nimport { Link, NavLink } from 'react-router-dom';\nimport links from '../lib/links';\n\n\nconst AUTOHIDE_TIMEOUT = 20000\nlet timer: any\n// TODO: build your own toolbar styling.\n\nexport default function Toolbar() {\n    const [state, setState] = useState({ showMenu: false })\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const vctx = useContext(VIEW_CONTEXT)\n    const toggleMenu = () => {\n        // Clear the existing timer for closing menu and then hide/show the menu\n        clearTimeout(timer)\n        if (state.showMenu) {\n            setState({ ...state, showMenu: false })\n        } else {\n            setState({ ...state, showMenu: true })\n            timer = setTimeout(() => {\n                setState({ ...state, showMenu: false })\n            }, AUTOHIDE_TIMEOUT)\n        }\n    }\n\n    return (\n        <nav className='navbar' role='navigation' style={STYLES.toolbar} aria-label='main navigation'>\n            <div className='navbar-brand'>\n                <Link className='navbar-item' to={links.home}>\n                    <FaContao style={STYLES.appLogoIcon} />\n                    <span style={STYLES.appLogoText}>{ctx.config.name}</span>\n                </Link>\n                <a role=\"button\" className={`navbar-burger burger ${state.showMenu ? 'is-active' : ''}`} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbar\" onClick={toggleMenu}>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n            <div className={`navbar-menu ${state.showMenu ? 'is-active' : ''}`} >\n                <div className='navbar-start'>\n                    <NavLink to={links.dashboard} exact activeClassName='is-active' className='navbar-item is-tab'>Dashboard</NavLink>\n                    <NavLink to={links.messages} activeClassName='is-active' className='navbar-item is-tab'>Messages</NavLink>\n                    <NavLink to={links.invoices} activeClassName='is-active' className='navbar-item is-tab'>Invoices</NavLink>\n                    <NavLink to={links.jobs} activeClassName='is-active' className='navbar-item is-tab'>Jobs</NavLink>\n                </div>\n                <div className='navbar-end'>\n                    <div className='navbar-item'>\n                        <div className='field'>\n                            <p className='control has-icons-left'>\n                                <input className='input is-rounded' type='search' placeholder='Type to search...' />\n                                <span className='icon is-small is-left'><FaSearch className='is-size-5' /></span>\n                            </p>\n                        </div>\n                    </div>\n                    <div className='navbar-item has-dropdown is-hoverable'>\n                        <span className='navbar-link'>\n                            {`${ctx.user?.firstName} ${ctx.user?.lastName}`}\n                        </span>\n                        <div className='navbar-dropdown'>\n                            <Link to={{pathname:`${links.profile}/${ctx.user?.id}`}} className='navbar-item'>Profile</Link>\n                            <Link to={links.helpCenter} className='navbar-item'>Help Center</Link>\n                            <Link to={links.logout} className='navbar-item'>Sign Out</Link>\n                        </div>\n                    </div>\n                    <div className='navbar-item'>\n                        <Link to={links.settings} className='button is-rounded is-light is-fullwidth'><FaCog /></Link>\n                    </div>\n                </div>\n            </div>\n        </nav >\n    )\n}","import React, { ReactChild, useEffect, useState, useContext, HTMLAttributes } from 'react'\nimport { FaExclamationCircle } from 'react-icons/fa';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { APPLICATION_CONTEXT } from '../lib';\n\nexport function Empty({ content, icon, onDismiss, children, text, ...props }: { text?: string, content?: ReactChild, icon?: ReactChild, onDismiss?: any, children?: ReactChild } & HTMLAttributes<HTMLDivElement>) {\n    return (\n        <div {...props} className={`notification px-4 is-light is-uppercase is-warning has-text-centered ${props.className}`}>\n            {!!onDismiss && <button onClick={onDismiss} className='delete'></button>}\n            {icon ? icon :\n                <FaExclamationCircle className='has-text-warning-dark is-size-4 mb-2' />\n            }\n            {children ?\n                children :\n                content ? content :\n                    <p className='block has-text-grey is-size-7'>{text || 'No data'}</p>\n            }\n        </div>\n    )\n}\n\nexport function Loading() {\n    return (\n        <section className='hero is-fullheight is-bold is-flex-centered' style={{ alignItems: 'stretch', padding: '2em' }}>\n            <div className='hero-body is-flex-centered has-text-centered'>\n                <div className='column is-4 is-12-mobile'>\n                    <div className='section px-6'>\n                        <progress className=\"progress is-small is-danger\" max=\"100\">loading</progress>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport function CardFragment({ header, optionsElement, optionsText, onOptionsTextClick, children, style }: { header: string, optionsElement?: React.ReactChild, optionsText?: any, onOptionsTextClick?: any, children?: any, style?: React.CSSProperties }) {\n    return (\n        <div className=\"card\" style={style}>\n            <header className='card-header'>\n                <p className='card-header-title'>{header}</p>\n                <p className='card-header-icon'>\n                    {optionsElement ?\n                        optionsElement :\n                        <span className='has-text-link' onClick={onOptionsTextClick}>\n                            {optionsText}\n                        </span>\n                    }\n                </p>\n            </header>\n            <div className='card-content'>\n                <div className='container is-fluid px-0'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nlet mapsLoaded = false\nexport function useLoadGoogleMaps() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [loading, setLoading] = useState(!mapsLoaded)\n\n    useEffect(() => {\n        if (loading) {\n            new Loader({\n                apiKey: ctx.config.Google.mapKey,\n                version: \"weekly\",\n                libraries: ['places']\n            }).load()\n                .then(() => setLoading(false))\n        }\n    }, [])\n\n    return loading\n}\n\n/**\n * \n * @param func Function to debounce\n * @param wait Miliseconds delay for debounce\n * @param immediate Set to true to trigger immediately and kill other attempts\n */\nexport function debounce(func, wait: number, immediate: boolean = false) {\n    var timeout;\n    return async (...args) => {\n        var later = async () => {\n            timeout = null;\n            if (!immediate) return func(...args)\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) return func(...args)\n    };\n};\n\nexport async function wait(duration = 5000) {\n    await new Promise((res) => {\n        setTimeout(res, duration)\n    })\n}\n\nexport const useEscapeHandler = (callback: any) => {\n    const handler = (ev: KeyboardEvent) => {\n        if (ev.key === 'Escape') {\n            callback()\n        }\n    }\n    window.document.addEventListener('keydown', handler)\n    return () => window.document.removeEventListener('keydown', handler)\n}","import { geoFirestore } from \"./firebase\";\nimport firebase from 'firebase'\nimport { useCallback } from \"react\";\nimport { User } from \"./user\";\nimport { Application } from \".\";\n\n\nexport const JOB_MILE_RADIUS = 10\n\nconst JOB_TYPES = [\"Alarm Systems/Cameras\", \"Animal Grooming\", \"Auto Mechanic\", \"Baby Sitters/Nanny\", \"Beautician\", \"Cable/Satellite Installation\", \"Car Detailing\", \"Carpenter\", \"Carpet Cleaning\", \"Caterers\", \"Computer Repair\", \"Debris Removal\", \"Demolition\", \"Dump Truck Services\", \"Electrician\", \"Engineering\", \"Event Planner\", \"Flooring\", \"Garage Door Installation/Repair\", \"HVAC (Heating & Air Conditioning)\", \"Healthcare professionals\", \"Hot Shot Delivery & Courier Services\", \"IT Tech Support\", \"Janitorial/Maid/Cleaning Services\", \"Lawn care\", \"Masonry (Brick, Concrete)\", \"Modeling/Acting\", \"Networking Installation\", \"Painter/Finish\", \"Plumber\", \"Roof Repair\", \"Seamstress/Tailor\", \"Shipping Pallets, Containers and Custom Crate Builders\", \"Snow and Ice Removal\", \"Tow Truck and Roadside Assistance\", \"Tree Services\", \"Veterinarian Services\", \"Web Designer\", \"Window Blinds, Shades, Drapes, Curtains and Shutters\"]\n\nexport interface IJob {\n    id\n    coordinates: firebase.firestore.GeoPoint\n    date_completed: firebase.firestore.Timestamp | null\n    date_created: firebase.firestore.Timestamp\n    g: any\n    executed_by: string\n    job_title: string\n    job_description: string\n    job_type: string\n    location: {\n        coords: {\n            accuracy: number\n            altitude: number\n            altitudeAccuracy: number\n            heading: number\n            latitude: number\n            longitude: number\n            speed: number\n        }\n        timestamp\n        address\n        place_id\n        id\n    }\n    location_address: any\n    posted_by: string\n    salary: number\n    star_rate: number | null\n    status: \"available\" | \"in review\" | \"accepted\" | \"in progress\" | \"complete\"\n    tasks: { id: string, text: string }[]\n    wage: \"hr\"\n    required_count: number\n    progress?: number\n    user?: User\n}\n\nexport interface IJobHistory {\n    employer_name: string\n    employer_phone_number: string\n    employer_address: string\n    supervisor_name?: string\n    supervisor_title?: string\n    user_position_title?: string\n    date_started: Date\n    date_ended: Date\n    actual_job?: boolean\n    salary?: string\n    wage?: string\n    description?: string\n}\n\nexport class Job {\n    private static db = geoFirestore.collection('jobs')\n\n    static async getJobTypes(app: Application) {\n        return JOB_TYPES\n    }\n\n    static async addNewJob(app: Application, job, photos: File[] = []) {\n        if (!job.posted_by || !job.job_title || !job.salary || !job.wage || (!job.location && !job.location_address)) {\n            throw new Error('Complete all required fields to continue!')\n        }\n        if (job.tasks.length < 1) {\n            throw new Error('You must add at least 1 task for this job!')\n        }\n        if (job.job_title.length < 8 || job.job_description.length < 20) {\n            throw new Error(\"Kindly enter a more meaningful title and description!\")\n        }\n        if (job.required_count < 1) {\n            throw new Error(\"Provide the number of people you require for this job!\")\n        }\n        if (job.salary < 0) {\n            throw new Error(\"Salary must be more than $0!\")\n        }\n\n        job.coordinates = new firebase.firestore.GeoPoint(job.location.coords.latitude, job.location.coords.longitude)\n\n        const newDoc = Job.db.doc()\n        let photo_files = null\n\n        if (photos && photos.length > 0) {\n            // If photo is selected, add the photo\n            const body = new FormData()\n            photos.map((photo) => {\n                body.append(\"photo\", photo);\n            })\n            const apiResponse = await app.initiateNetworkRequest(`/job/upload`, {\n                method: \"POST\",\n                headers: {\n                    \"x-job-id\": newDoc.id,\n                },\n                body,\n            }, true, false)\n\n            if (!apiResponse.ok) {\n                throw new Error((await apiResponse.json()).message || \"Failed to upload job\");\n            }\n\n            photo_files = (await apiResponse.json()).data;\n        }\n\n        job.id = newDoc.id\n        return newDoc.set({ ...job, photo_files })\n    }\n\n    static async cancelJob(ctx: Application, job: IJob) {\n        if (job.status === 'complete') {\n            throw new Error('You cannot cancel a completed job!')\n        }\n\n        if (job.status === 'accepted') {\n            await ctx.initiateNetworkRequest(`users/cancelJob`, {\n                method: 'DELETE',\n                body: JSON.stringify({ jobID: job.id, role: ctx.user?.role })\n            }, true)\n        } else {\n            await Job.db.doc(job.id).delete()\n        }\n        return true\n    }\n\n    static async getInactiveJobs(ctx: Application, limit = 20) {\n        let query = Job.db.where('status', '==', 'complete')\n        // if (ctx.user?.role !== 'admin') {\n        //    query =  query.where('posted_by', '==', ctx.user?.id)\n        // }\n        return query.native.orderBy('date_created', 'desc').limit(limit).get().then(async snap => {\n            const jobs: IJob[] = []\n            snap.forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            return Promise.resolve(jobs)\n        })\n    }\n\n    static async getActiveJobs(ctx: Application, limit = 20) {\n        let query = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"])\n        // if (ctx.user?.role !== 'admin') {\n        //    query =  query.where('posted_by', '==', ctx.user?.id)\n        // }\n        return query.native.orderBy('date_created', 'desc').limit(limit).get().then(async snap => {\n            const jobs: IJob[] = []\n            snap.forEach(async doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            return Promise.resolve(jobs)\n        })\n    }\n\n    static listenForActiveAndPendingJobs(ctx: Application, callback, limit = 100) {\n        let query = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"])\n        // if (ctx.user?.role !== 'admin') {\n        //     query.where('posted_by', '==', ctx.user?.id)\n        // }\n        const unsubscribe = query.native.orderBy('date_created', 'desc').limit(limit).onSnapshot(async snap => {\n            const jobs: IJob[] = [];\n            (snap as firebase.firestore.QuerySnapshot).forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            callback(null, jobs)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n\n    static listenForActiveJobs(ctx: Application, callback, limit = 9) {\n        let query = Job.db.where('status', 'in', [\"in review\", \"accepted\", \"in progress\"])\n        // if (ctx.user?.role !== 'admin') {\n        //     query = query.where('posted_by', '==', ctx.user?.id)\n        // }\n        const unsubscribe = query.native.orderBy('date_created', 'desc').limit(limit).onSnapshot(async snap => {\n            const jobs: IJob[] = [];\n            (snap as firebase.firestore.QuerySnapshot).forEach(doc => {\n                const item: any = doc.data()\n                item.id = doc.id\n                if (item.location?.address) {\n                    item.location_address = item.location.address\n                }\n                jobs.push(item)\n            })\n            callback(null, jobs)\n        }, err => callback(err, null))\n\n        return unsubscribe\n    }\n\n    static listenForActiveJobsWithChangeHandler(ctx: Application, { added, modified, removed }: {\n        added: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any,\n        modified: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any,\n        removed: (data: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>) => any\n    }) {\n        let query = Job.db.where('status', 'in', [\"available\", \"in review\", \"accepted\", \"in progress\"])\n        // if (ctx.user?.role !== 'admin') {\n        //     query = query.where('posted_by', '==', ctx.user?.id)\n        // }\n        const unsubscribe = query.limit(6).onSnapshot(async snap => {\n            (snap.native as firebase.firestore.QuerySnapshot).docChanges().forEach(change => {\n                switch (change.type) {\n                    case 'added':\n                        added(change.doc)\n                        break\n                    case 'modified':\n                        modified(change.doc)\n                        break\n                    case 'removed':\n                        removed(change.doc)\n                        break\n                }\n            })\n        })\n\n        return unsubscribe\n    }\n\n    static getPhotoURL(app: Application, id) {\n        return `${app.config.hostname}/images/${id}.jpg`\n    }\n}","import React, { DetailedHTMLProps, useRef, useEffect, useContext, useState, memo, ReactNode, ReactElement, CSSProperties, useMemo } from 'react'\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport L from \"leaflet\";\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { ImSpinner } from 'react-icons/im';\nimport { useLoadGoogleMaps } from './util';\nimport { IJob } from '../lib/job';\nimport { FaMapPin } from 'react-icons/fa';\n\nexport const MapView = memo<{ job: IJob, vertical: boolean } & any>((props) => {\n    const { job: { coordinates, job_title: title }, vertical = true, zoom = 18, zoomControl = true } = props\n    const loading = useLoadGoogleMaps()\n    const mapEl = useRef<HTMLDivElement>()\n\n    const [map, setMap] = useState<google.maps.Map | null>(null)\n    const [marker, setMarker] = useState<google.maps.Marker>()\n\n    useEffect(() => {\n        if (mapEl.current && !loading) {\n            const _mapInstance = new google.maps.Map(mapEl.current, {\n                center: { lat: coordinates.latitude, lng: coordinates.longitude },\n                gestureHandling: 'none',\n                zoomControl: zoomControl,\n                zoom,\n                mapTypeControl: false,\n                fullscreenControl: true,\n            })\n            setMap(_mapInstance)\n            setMarker(new google.maps.Marker({\n                map: _mapInstance,\n                position: { lat: coordinates.latitude, lng: coordinates.longitude },\n                animation: google.maps.Animation.DROP,\n                title,\n            }))\n        }\n    }, [loading, mapEl])\n\n\n    useEffect(() => {\n        if (coordinates) {\n            map?.setCenter({ lat: coordinates.latitude, lng: coordinates.longitude })\n            marker?.setPosition({ lat: coordinates.latitude, lng: coordinates.longitude })\n        }\n    }, [coordinates])\n\n    return (\n        loading ?\n            <div {...props} className={`${props.className} is-flex is-flex-centered px-6`} style={{ width: '100%', height: '100%', backgroundColor: '#dadada', ...props?.style, }}>\n                <progress style={{ height: '0.2rem' }} className=\"progress is-small my-6 mx-6\" max=\"100\">loading</progress>\n            </div>\n            :\n            <div id='mapview' {...props} style={{ ...props?.style, width: '100%', height: '100%', backgroundColor: '#dadada', minHeight: vertical ? '50vh' : '12em', ...props?.style, }} ref={mapEl} />\n    )\n})","import moment, { unix } from 'moment'\nimport React, { useCallback, useState, useContext } from 'react'\nimport { FaExpandAlt, FaStar, FaMapMarkerAlt, FaGlobeAfrica, FaClipboardList, FaHardHat, FaCaretRight, FaArrowRight, FaChevronRight } from 'react-icons/fa'\nimport { ImSpinner } from \"react-icons/im\";\nimport { NavLink, Link } from 'react-router-dom'\nimport { STYLES } from '../lib/theme'\nimport { DUMMY_USER, User } from '../lib/user'\nimport { IJob, Job, JOB_MILE_RADIUS } from '../lib/job'\nimport firebase from \"firebase\";\nimport { useToasts } from 'react-toast-notifications';\nimport { wait } from './util';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { MapView } from './map';\nimport links from '../lib/links';\n\nexport function JobListItem({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    const time = moment(job.date_created.toDate())\n    return (\n        <div className='card'>\n            <div className='card-content'>\n                <div className='columns mb-0'>\n                    <div className='column is-6 has-text-centered-touch has-text-left'>\n                        <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_title}</p>\n                    </div>\n                    <div className='column has-text-centered-touch has-text-right'>\n                        <p>{job.location_address}</p>\n                    </div>\n\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left'>\n                        <p>{job.job_type}</p>\n                    </div>\n                </div>\n            </div>\n            <div className='card-footer'>\n                <div className='card-footer-item'>\n                    <div className='columns px-4 is-vcentered is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\n                        <div className='column is-12'>\n                            <div className='columns is-vcentered is-mobile'>\n                                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                                    <figure className='image is-flex is-32x32'>\n                                        <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                                    </figure>\n                                </div>\n                                <div className='column is-narrow'>\n                                    <div className='title is-6'>{`${job.user?.firstName} ${job.user?.lastName}`}</div>\n                                </div>\n                                <div className='column has-text-right'>\n                                    {time.calendar({ sameElse: 'DD/MMM/YYYY' })}\n                                </div>\n                            </div>\n                        </div>\n                        <div className='column is-12'>\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={0} max=\"100\">{0}</progress>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport function JobItem({ job, to }: { job: IJob, to: any }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    if (job.status === 'available') {\n        return <PendingJobItem job={job} to={to} key={`pending-${job.id}`} />\n    }\n\n    const time = moment(job.date_created.toMillis())\n    let endTime\n    if (job.date_completed) endTime = moment(job.date_completed.toMillis())\n\n    return (\n        <NavLink activeClassName=\"is-active\" to={to} style={{ overflowX: 'auto' }} className={`job-item is-size-7 px-1 py-1 is-block card is-shadowless is-radiusless has-background-white`}>\n            <div className='card-content py-2 px-2'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-6 has-text-centered-touch has-text-left'>\n                            <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_type}</p>\n                        </div>\n                        <div className='column has-text-centered-touch has-text-right has-text-grey'>\n                            <p>{job.location_address}</p>\n                        </div>\n                    </div>\n                    <div className='columns is-vcentered is-mobile'>\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                            <figure className='image is-flex is-48x48'>\n                                <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                            </figure>\n                        </div>\n                        <div className='column px-0 has-text-left'>\n                            <div className='title is-7 mb-1'>{`${job.user?.firstName || 'John'} ${job.user?.lastName || \"Doe\"}`}</div>\n                            <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate}</p>\n                        </div>\n                        <div className='column has-text-grey has-text-right'>\n                            {time.calendar({ sameElse: 'DD/MMM/YYYY' })}\n                        </div>\n                    </div>\n\n                </div>\n                <div className='columns mb-0 is-vcentered has-text-grey is-mobile' style={{ flexDirection: 'column', flex: 1 }}>\n                    <div className='column is-12'>\n                        {job.progress && job.progress >= 100 ? (\n                            <p>Completed {endTime.calendar({ sameElse: 'DD/MMM/YYYY' })}</p>\n                        ) :\n                            <progress className=\"progress is-info\" style={STYLES.jobProgressBar} value={job.progress || 0} max=\"100\">{job.progress}</progress>\n                        }\n                    </div>\n                </div>\n                <div className='content has-text-left has-text-grey is-flex is-flex-align-items-center'>\n                    <span className='icon has-text-info is-size-6'><FaChevronRight /></span>\n                    <span style={{ lineHeight: '2em' }}>{job.job_title}</span>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function PendingJobItem({ job, to }: { job: IJob, to: any }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n    return (\n        <NavLink activeClassName=\"is-active\" to={to} style={{ overflowX: 'auto' }} className={`job-item is-size-7 px-1 py-1 is-block card is-shadowless is-radiusless has-background-white`}>\n            <div className='card-content py-2 px-2'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-6 has-text-centered-touch has-text-left'>\n                            <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{job.job_type}</p>\n                        </div>\n                        <div className='column has-text-centered-touch has-text-right has-text-grey'>\n                            <p>{job.location_address}</p>\n                        </div>\n                    </div>\n                    <div className='columns is-vcentered is-mobile'>\n                        <div className='column has-text-left'>\n                            <p className='is-size-7 is-flex is-vcentered'>\n                                <span className='icon is-size-6 has-text-info spinner'><ImSpinner /></span>\n                                <span style={{ lineHeight: '2em' }}>Pending</span>\n                            </p>\n                        </div>\n                        <div className='column has-text-right'>\n                            <p>Searching for deployee</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function JobDetail({ job, className, onCancel }: { onCancel: (job: IJob) => any, job: IJob | null, className?: string }) {\n    if (!job) {\n        return (\n            <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n                <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\n                    <span className='my-4' ><FaHardHat fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                    <p className='is-uppercase is-size-6 has-text-weight-bold'>View and manage job listings</p>\n                </div>\n            </div>\n        )\n    }\n    const time = moment(job.date_created.toMillis())\n\n    return (\n        <div className={`${className} card job-detail is-size-6`} style={{ flexDirection: 'column' }}>\n            <div className='card-content is-paddingless'>\n                <div className='level py-4 mb-0'>\n                    <div className='level-item is-size-7'>POSTED {time.calendar({sameElse:'DD/MMM/YYYY'})}</div>\n                    <div className='level-item is-size-6 has-text-weight-bold'>{job.job_title}</div>\n                    <div className='level-item is-size-7 has-text-grey'>{job.id}</div>\n                </div>\n                <div className='container is-fluid px-0'>\n                    <div className='columns is-fullheight mx-0 my-0 is-multiline animate__animated animate__fadeIn'>\n                        <div className='column is-8-fullhd is-7-desktop is-12 px-0 pt-0'>\n                            <JobDetailTask onJobCancel={onCancel} job={job} />\n                        </div>\n\n                        {job.status === \"available\" || job.status === 'in review' ?\n                            <div style={{ borderLeft: 'solid 1px #8881' }} className='column is-4-fullhd is-5-desktop is-12 is-flex is-paddingless'>\n                                <MapView job={job} className='container pt-4 pb-0 is-flex' />\n                            </div>\n                            :\n                            <div style={{ borderLeft: 'solid 1px #8881' }} className='column is-4-fullhd is-5-desktop is-12 is-flex'>\n                                <JobDetailUser job={job} />\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function JobDetailTask({ job, onJobCancel }: { job: IJob, onJobCancel }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({ loadingCancel: false })\n    const { addToast } = useToasts()\n\n    let endTime, startTime, totalTime\n    if (job.date_completed) endTime = unix(job.date_completed.toMillis() / 1000)\n    if (job.date_created) startTime = unix(job.date_created.toMillis() / 1000)\n    if (endTime && startTime) totalTime = endTime.diff(startTime, 'h', true)\n\n    const onCancel = useCallback(async () => {\n        try {\n            const confirmed = window.confirm(\"Are you sure you want to cancel this job? If Job is accepted, it will return to the job pool. Otherwise, the job will be deleted\")\n            if (!confirmed) {\n                return\n            }\n            setState({ ...state, loadingCancel: true })\n            await Job.cancelJob(ctx, job)\n            addToast('Cancelled job successfully!', { appearance: 'success' })\n            onJobCancel(job)\n        } catch (e) {\n            addToast(e.message || 'Failed to cancel job!', { appearance: 'error' })\n        } finally {\n            setState({ ...state, loadingCancel: false })\n        }\n    }, [job, state])\n\n    return (\n        <div className='is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\n            {job.status === 'available' ?\n                <div className='section has-text-centered is-size-6'>\n                    <span className='px-4 py-4 is-flex is-flex-centered'>Searching for deployees within {JOB_MILE_RADIUS} mile radius from you</span>\n                </div>\n                :\n                job.status === 'in review' ?\n                    <JobReview job={job} />\n                    :\n                    <MapView zoom={15} zoomControl={false} vertical={false} job={job} className='container pb-0 is-flex' />\n            }\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\n                <div className='section py-2 pb-3'>\n                    <table className='table is-hoverable is-fullwidth'>\n                        <tbody className='is-flex is-flex-direction-column is-size-7'>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>TYPE</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.job_type}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>LOCATION</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.location_address}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>DESCRIPTION</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{job.job_description}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>PAY</td>\n                                <td style={{ flex: 2 }} className='is-flex-align-items-center is-flex has-text-left'><span>${job.salary}</span>&nbsp;<span className='has-text-grey-light'>/{job.wage}</span></td>\n                            </tr>\n                            {job.tasks && job.tasks.length > 0 ?\n                                <tr className='is-flex has-text-left'>\n                                    <td style={{ flex: 1 }} className='has-text-grey'>TASKS</td>\n                                    <td style={{ flex: 2 }} className=' has-text-left'>\n                                        {job.tasks?.map(task => <p key={task.text}>- {task.text}</p>)}\n                                    </td>\n                                </tr>\n                                : null}\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'> START</td>\n                                <td style={{ flex: 2 }} className='has-text-left'>{startTime.calendar({sameElse:'DD/MMM/YYYY'}) || `-`}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>END</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{endTime?.calendar({sameElse:'DD/MMM/YYYY'}) || `-`}</td>\n                            </tr>\n                            <tr className='is-flex has-text-left'>\n                                <td style={{ flex: 1 }} className='has-text-grey'>TOTAL TIME</td>\n                                <td style={{ flex: 2 }} className=' has-text-left'>{totalTime?.toFixed(2) || `-`}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                {job.progress && job.progress >= 100 ? (\n                    <button className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-end' }}>View Invoice</button>\n                ) :\n                    <button disabled={state.loadingCancel} onClick={onCancel} className={`button is-white is-uppercase is-inverted mx-4 ${state.loadingCancel ? 'is-loading' : ''}`} style={{ alignSelf: 'flex-start', color: 'white' }}>Cancel Job</button>\n                }\n            </div>\n        </div >\n    )\n}\n\nexport function JobDetailUser({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    let startTime\n    if (job.date_created) startTime = moment(job.date_created.toMillis())\n\n    return (\n        <div className='container pt-4 pb-0 is-flex' style={{ flexDirection: 'column' }} >\n            <div style={{ borderBottom: 'solid #aaa4 0.2px' }} className='columns is-vcentered'>\n                <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                    <figure className='image is-80x80 is-flex'>\n                        <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                    </figure>\n                </div>\n                <div className='column'>\n                    <div className='container'>\n                        <div className='columns is-marginless is-vcentered is-mobile'>\n                            <div className='column pb-0 pl-0'>\n                                <p className='is-size-6 has-text-left has-text-weight-bold'>{`${job.user?.firstName} ${job.user?.lastName}`}</p>\n                            </div>\n                            <Link to={{ pathname: `${links.profile}/${job.user!.id}`, state: { user: job.user } }} className=\"column is-narrow has-text-right has-text-link pr-0 pb-0 is-size-7\">View Profile</Link>\n                        </div>\n                        <div className='content has-text-left'>\n                            <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate}\n                                {/* TODO: should option of remote or onsite be present?\n                             &nbsp;{generateUserJobType(DUMMY_USER)} \n                             */}\n                            </p>\n                            <p className='is-size-7'>{job.user?.profileBio}</p>\n                            <p className='has-text-left has-text-grey-light is-size-8'><span className='is-uppercase'>member since</span>&nbsp; {moment(job.user?.dateCreated).calendar({sameElse:'DD/MMM/YYYY'})}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='is-flex py-4' style={{ flexDirection: 'column', justifyContent: 'space-between', flex: 1 }}>\n                <table className='table is-hoverable is-fullwidth'>\n                    <tbody className='is-size-7'>\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>CONTACT</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>{job.user?.phoneNumber}</td>\n                        </tr>\n                        {/* <tr>\n                            <td className='has-text-right'>ACTIVE TASK</td>\n                            <td className='has-text-left'>{job.user?.activeTask}</td>\n                        </tr> */}\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>START TIME</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>{startTime.calendar({sameElse:'DD/MMM/YYYY'})}</td>\n                        </tr>\n                        <tr className='is-flex has-text-left'>\n                            <td style={{ flex: 1 }} className='has-text-grey'>HIGHLIGHTED SKILLS AND LICENSES</td>\n                            <td style={{ flex: 2 }} className='has-text-left'>\n                                {job.user?.skills && job.user.skills.length > 0 ? job.user.skills?.map(task => <p>- {task}</p>) : `-`}\n                            </td>\n\n                        </tr>\n                    </tbody>\n                </table>\n                <Link to={`${links.messages}/${job.user!.id}`} className='button is-info is-uppercase mx-4' style={{ alignSelf: 'flex-start' }}>Message</Link>\n            </div>\n        </div>\n    )\n}\n\n\nexport function JobReview({ job }: { job: IJob }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    let startTime\n    if (job.date_created) startTime = moment(job.date_created.toMillis())\n\n    return (\n        <div className='section pt-5 is-flex is-clipped' style={{ flexDirection: 'column' }} >\n            <div className='columns is-paddingless'>\n                <div className='content column is-narrow is-size-6 has-text-centered px-4'>\n                    <span className='is-flex is-flex-centered'>Deployee Found</span>\n                </div>\n                <div className='columns column is-vcentered'>\n                    <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                        <figure className='image is-80x80 is-flex'>\n                            <img className='is-rounded' src={Job.getPhotoURL(ctx, job.user?.id)} />\n                        </figure>\n                    </div>\n                    <div className='column'>\n                        <div className='container'>\n                            <div className='columns is-marginless is-vcentered is-mobile'>\n                                <div className='column pb-0 pl-0'>\n                                    <p className='is-size-6 has-text-left has-text-weight-bold'>{`${job.user?.firstName || \"John\"} ${job.user?.lastName || 'Doe'}`}</p>\n                                </div>\n                                <div className=\"column is-narrow has-text-right has-text-info pr-0 pb-0 is-size-7\">View Profile</div>\n                            </div>\n                            <div className='content has-text-left'>\n                                <p className='is-size-6'><span className='icon has-text-info'><FaStar /></span>{job.user?.starRate}\n                                    {/* TODO: should option of remote or onsite be present?\n                             &nbsp;{generateUserJobType(DUMMY_USER)} \n                             */}\n                                </p>\n                                <p className='is-size-7'>{job.user?.profileBio}</p>\n                                <p className='has-text-left has-text-grey-light is-size-7'><span className='is-uppercase'>member since</span>&nbsp; {moment(job.user?.dateCreated).calendar({sameElse:'DD/MMM/YYYY'})}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function generateUserJobType(user: User) {\n    switch (user.jobType) {\n        case 'onsite':\n            return <><span className='icon has-text-info'><FaMapMarkerAlt /></span> On Site</>\n        case 'remote':\n            return <><span className='icon has-text-info'><FaGlobeAfrica /></span> Remote</>\n    }\n}\n\nexport interface IJobSample {\n    user: User\n    timestamp: number\n    title: string\n    description: string\n    location: string\n    progress?: number\n    startTime?: number\n    endTime?: number\n    tasks?: string[]\n    fullLocation?: string\n    id\n}\n\nexport const DUMMY_JOBS: IJobSample[] = [\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        progress: 80,\n        tasks: [],\n        id: 'papdsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdefvzsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 99,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 20,\n        id: 'padpp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 90,\n        id: 'papdvp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        id: 'papdfp'\n    }\n]\n\nexport const DUMMY_COMPLETED: IJobSample[] = [\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n    {\n        description: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam, nihil ipsam. Accusamus officiis aut velit voluptatum quis eligendi veniam nam.\",\n        title: \"Lorem ipsum dolor sit.\",\n        location: \"Vancouver, Canada\",\n        timestamp: Date.now(),\n        user: DUMMY_USER,\n        progress: 100,\n        startTime: Date.now() - 12300000,\n        endTime: Date.now(),\n        tasks: [\"Clear porch\", \"Clear backyard\"],\n        id: 'papdw3dsdp'\n    },\n]","import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DUMMY_USER, User } from '../lib/user';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { Job, IJob } from '../lib/job';\nimport { useToasts } from 'react-toast-notifications';\nimport { JobListItem } from './job';\nimport links from '../lib/links';\n\nexport function JobList({ className }: { className?: string; }) {\n    const ctx = useContext(APPLICATION_CONTEXT);\n    const [state, setState] = useState({ jobs: new Array<IJob>(), loading: false });\n\n    const { addToast } = useToasts();\n\n    useEffect(() => {\n        setState({ ...state, loading: true });\n        const unsubscribe = Job.listenForActiveJobs(ctx, async (err, docs: IJob[]) => {\n            if (err) {\n                setState({ ...state, loading: false });\n                return addToast(err.message || 'Failed to get jobs!');\n            }\n            docs = await Promise.all(\n                docs.map(async (v) => {\n                    if (v.status !== 'available' && v.executed_by) {\n                        v.user = await User.getExternalUser(ctx, v.executed_by);\n                    }\n                    return v;\n                })\n            );\n            setState({ ...state, jobs: docs, loading: false });\n        });\n\n        return unsubscribe;\n    }, []);\n\n    return (\n        <div className={className}>\n            {state.loading ?\n                <progress className=\"progress is-small is-info my-6\" max=\"100\">loading</progress>\n                : state.jobs.map(j => (\n                    <Link key={j.id} to={`${links.activeJobs}/${j.id}`} className={`column ${state.jobs.length == 1 ? 'is-12' : 'is-4-fullhd is-6-desktop is-12-touch'} list-item`}>\n                        <JobListItem job={j} />\n                    </Link>\n                ))}\n        </div>\n    );\n}\n","import moment from \"moment\";\nimport React, { useState, createContext, useCallback, useEffect, useContext } from 'react';\nimport { FaCaretDown, FaCaretUp, FaCheck, FaMapMarkerAlt, FaSearch } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { Empty } from './util';\nimport { geoFirestore } from \"../lib/firebase\";\nimport { User } from \"../lib/user\";\nimport { APPLICATION_CONTEXT } from \"../lib\";\n\nconst NotificationContext = createContext<{ notifications: INotification[], addNotification: (notif: INotification) => any }>({ notifications: [], addNotification: (notif) => { } })\n\nexport function NotificationProvider(props) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [notifications, setNotifications] = useState<INotification[]>([])\n    const addNotification = useCallback((notification: INotification) => {\n        setNotifications([notification, ...notifications])\n    }, [notifications])\n\n    useEffect(() => {\n        const unsubscribe = User.listenForNotifications(ctx, (err, notifications) => {\n            if (err) {\n                console.log(err)\n            } else {\n                setNotifications(notifications || [])\n            }\n        })\n\n        return () => { unsubscribe() }\n    }, [])\n\n    return (\n        <NotificationContext.Provider value={{ notifications, addNotification }}>\n            {props.children}\n        </NotificationContext.Provider>\n    )\n}\n\nexport function NotificationItem({ notification }: { notification: INotification }) {\n    const time = moment.unix(notification.dateCreated.toMillis() / 1000)\n    return (\n        <div className='container is-fluid is-paddingless list-item py-2' title={notification.title}>\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\n                <div className='column is-paddingless is-6 has-text-left has-text-centered-mobile  list-item-title'>\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{getNotificationIcon(notification)} {notification.title}</p>\n                </div>\n                <div className='column is-paddingless has-text-right has-text-centered-mobile list-item-subtitle'>\n                    <p style={{ maxLines: 2 }}>{time.fromNow()}</p>\n                </div>\n            </div>\n            <div className='content'>\n                <p>\n                    {notification.content}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport function getNotificationIcon(notif: INotification) {\n    switch (notif.type) {\n        case 'discovery':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaSearch /> </span>\n        case 'location':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaMapMarkerAlt /> </span>\n        case 'progress':\n            return <span className='icon has-text-white has-background-info is-small' style={{ borderRadius: '50%', fontSize: '0.6em' }}> <FaCheck /> </span>\n    }\n}\n\nexport function NotificationList({ className }) {\n    const [expanded, setExpanded] = useState(true)\n    const notifCtx = useContext(NotificationContext)\n    console.log()\n    return (\n        <nav className={className}>\n            <div className='panel is-clipped' >\n                <div onClick={() => setExpanded(!expanded)} className='panel-heading is-size-6 has-text-left has-background-white-bis is-align-items-center is-flex is-flex-direction-row is-justify-content-space-between'>\n                    <p>Notifications</p>\n                    <button className='button is-static has-background-white is-rounded is-size-8 is-small'>\n                        {!expanded ?\n                            <FaCaretUp size={16} className={`icon has-text-black is-small`} />\n                            :\n                            <FaCaretDown size={16} className={`icon has-text-black is-small`} />}\n                    </button>\n                </div>\n                <div style={{ transition: \"all 0.500s linear\" }} className={`${!expanded ? 'is-height-0' : ''}`}>\n                    {notifCtx.notifications.length > 0 ?\n                        notifCtx.notifications.map((n, index) => (\n                            <Link key={`${n.id}-${index}`} to={`/f`} className='panel-block'>\n                                <NotificationItem notification={n} />\n                            </Link>\n                        ))\n                        :\n                        <Empty text='No Notification available' />\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport interface INotification {\n    content: string\n    dateCreated\n    type: 'discovery' | 'location' | 'progress'\n    title: string\n    id: string\n}\n\nconst DUMMY_NOTIFICATIONS: INotification[] = [\n    {\n        content: 'testing 123',\n        dateCreated: Date.now(),\n        type: 'discovery',\n        title: 'testing notification',\n        id: '23xe'\n    },\n    {\n        content: 'testing 12',\n        dateCreated: Date.now(),\n        type: 'location',\n        title: 'testing notification',\n        id: '23xe'\n    },\n    {\n        title: 'testing 1',\n        dateCreated: Date.now(),\n        type: 'progress',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    },\n    {\n        title: 'testing 1',\n        dateCreated: Date.now(),\n        type: 'location',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    },\n    {\n        title: 'testing 1',\n        dateCreated: Date.now(),\n        type: 'discovery',\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.?\",\n        id: '23se'\n    }\n]","import { Application } from \".\";\n\nexport const TRANSACTION_STATUS = {\n    PENDING: 0,\n    SUCCESS: 1,\n    FAILED: 2,\n    DECLINED: 3,\n    UNCAPTURED: 4\n}\n\nexport interface ICard {\n    mask: string\n    year: number\n    month: number\n    brand: string\n    name: string\n}\n\nexport interface IPayment {\n    status: 'pending' | 'paid'\n    timestamp\n    cost: number\n    title\n    payee\n    id: string\n}\n\nexport interface ITransaction extends ICard {\n    id: string\n    amount: number\n    description: string\n}\n\nconst CurrencyFormatter = Intl.NumberFormat('en-US', { currency: 'USD', style: 'currency', maximumFractionDigits: 2 })\nexport const PAYMENT_PAGE_LIMIT = 30\n\nexport class Payment {\n    static async getTransactions(app: Application, page = 1, limit = PAYMENT_PAGE_LIMIT): Promise<IPayment[]> {\n        const resp = await app.initiateNetworkRequest(`/payments/transactions?page=${page}&limit=${limit}`, undefined, true)\n        if (!resp.ok) {\n            if (resp.status === 418) {\n                throw new Error((await resp.json()).message || 'Failed to fetch transactions')\n            } else {\n                throw new Error('Failed to fetch transactions')\n            }\n        }\n\n        return (await resp.json()).map(({ id, dateCreated: timestamp, amount: cost, user: payee, title, status }): IPayment => ({\n            id,\n            timestamp,\n            cost,\n            title,\n            payee,\n            status: status === TRANSACTION_STATUS.SUCCESS ? 'paid' : 'pending'\n        }))\n    }\n\n    static getPaymentDescription(payment: IPayment): string {\n        switch (payment.status) {\n            case 'pending':\n                return `Pending charge of ${CurrencyFormatter.format(payment.cost)} for the completion of this job by ${payment.payee}`\n            case 'paid':\n                return `A payment of ${CurrencyFormatter.format(payment.cost)} has been submitted to ${payment.payee}`\n        }\n    }\n}","import moment from 'moment';\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { FaCaretDown, FaCaretUp } from \"react-icons/fa\";\nimport { Link } from 'react-router-dom';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { IPayment, Payment, PAYMENT_PAGE_LIMIT } from \"../lib/payment\";\nimport { Empty } from './util';\n\nexport function PaymentItem({ payment }: { payment: IPayment }) {\n    const time = moment.unix(payment.timestamp / 1000)\n\n    return (\n        <div className='container is-fluid is-paddingless list-item py-2' title={payment.title}>\n            <div className='columns is-variable is-1 py-1 px-1 is-vcentered'>\n                <div className='column is-paddingless is-6 has-text-left has-text-centered-mobile list-item-title'>\n                    <p style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: \"hidden\" }}>{payment.title}</p>\n                </div>\n                <div className='column is-paddingless has-text-right has-text-centered-mobile list-item-subtitle'>\n                    <p>{time.fromNow()}</p>\n                </div>\n            </div>\n            <div className='content'>\n                <p>\n                    {Payment.getPaymentDescription(payment)}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport function PaymentList({ className }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [expanded, setExpanded] = useState(true)\n    const [payments, setPayments] = useState<IPayment[]>([])\n    const fetchPayment = useCallback(async () => {\n        try {\n            const pageToFetch = Math.max(0, Math.floor(payments.length / PAYMENT_PAGE_LIMIT)) + 1\n            // This loads the specified page limit and includes count of imcomplete previous page\n            const limit = PAYMENT_PAGE_LIMIT + (PAYMENT_PAGE_LIMIT - (payments.length % PAYMENT_PAGE_LIMIT))\n            const paymentData = await Payment.getTransactions(ctx, pageToFetch, limit)\n            setPayments([...payments, ...paymentData])\n        } catch (e) {\n            console.log(e, 'failed to fetch payment data')\n        }\n    }, [payments])\n\n    useEffect(() => {\n        fetchPayment()\n    }, [ctx.user, ctx.user?.id])\n\n    return (\n        <nav className={className} >\n            <div className='panel is-clipped'>\n                <div onClick={() => setExpanded(!expanded)} className='panel-heading is-size-6 has-text-left has-background-white-bis is-align-items-center is-flex is-flex-direction-row is-justify-content-space-between'>\n                    <p>Payments</p>\n                    <button className='button is-static has-background-white is-rounded is-size-8 is-small'>\n                        {!expanded ?\n                            <FaCaretUp size={16} className={`icon has-text-black is-small`} />\n                            :\n                            <FaCaretDown size={16} className={`icon has-text-black is-small`} />}\n                    </button>\n                </div>\n                <div style={{ transition: \"all 0.500s linear\" }} className={`${!expanded ? 'is-height-0' : ''}`}>\n                    {payments.length > 0 ?\n                        payments.map(p => (\n                            <Link to={`/ f`} key={p.id} className='panel-block'>\n                                <PaymentItem payment={p} />\n                            </Link>\n                        ))\n                        :\n                        <Empty text='No Payment data available' />\n                    }\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport const DUMMY_PAYMENTS: IPayment[] = [\n    {\n        status: 'pending',\n        timestamp: Date.now(),\n        cost: 20.405,\n        title: 'Clear lawn',\n        payee: 'Philip Barnabas',\n        id: '2ss354'\n    },\n    {\n        status: 'paid',\n        timestamp: Date.now(),\n        cost: 200.405,\n        title: 'Clear lawn and take out firewood',\n        payee: 'Philip Barnabas',\n        id: '23sss54'\n    },\n    {\n        status: 'pending',\n        timestamp: Date.now(),\n        cost: 3000.405,\n        title: 'Clear lawn',\n        payee: 'Philip Barnabas',\n        id: '235s4'\n    }\n]","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { JobList } from \"../components/JobList\";\nimport { NotificationList } from '../components/notification';\nimport { PaymentList } from '../components/payment';\nimport { CardFragment } from \"../components/util\";\nimport links from '../lib/links';\n\nexport function Dashboard() {\n    return (\n        <div className='columns is-1 is-variable px-3 py-3 is-atleast-fullheight'>\n            <NotificationList className='column is-3 is-2-widescreen' />\n            <div className='column is-6 is-8-widescreen is-flex' style={{ flexDirection: 'column', justifyContent: 'space-between' }}>\n                <CardFragment header='Active Jobs' optionsElement={<Link to={links.activeJobs}>View All</Link>} style={{ marginBottom: '0.8em' }}>\n                    <JobList className={'columns is-centered is-vcentered is-multiline is-1 is-variable'} />\n                </CardFragment>\n            </div>\n            <PaymentList className='column is-3 is-2-widescreen' />\n        </div>\n    )\n}","// Check geolocation exists\nexport function isGeoLocationSupported() {\n    return 'geolocation' in navigator\n}\n\nexport function getCurrentLocation(): Promise<Position> {\n    return new Promise((res, rej) => {\n        if (!isGeoLocationSupported()) {\n            throw new Error('Geolocation is not supported! Cannot find current location!')\n        }\n\n        navigator.geolocation.getCurrentPosition(res, rej, {\n            enableHighAccuracy: true,\n            maximumAge: 1000\n        })\n    })\n}","import Tags from \"@yaireo/tagify/dist/react.tagify\";\nimport React, { useState, useCallback, useMemo, useContext, useEffect, useLayoutEffect, createRef, Ref, useRef } from 'react';\nimport { FaChevronLeft, FaMapMarkerAlt, FaSearch, FaUpload, FaDollarSign } from 'react-icons/fa';\nimport { useToasts } from 'react-toast-notifications';\nimport { debounce, useLoadGoogleMaps } from \"./util\";\nimport { Job, IJob } from \"../lib/job\";\nimport firebase from 'firebase'\nimport { APPLICATION_CONTEXT } from \"../lib\";\nimport validator from \"validator\";\nimport { getCurrentLocation } from \"../lib/location\";\nimport { v4 } from \"uuid\";\n\n/**\n * Component for creating a form field.\n * \n * @param param Object containing parameters to build the input field\n */\nexport function FormField({ label, value, onChange, className, type, placeholder, icon, readOnly = false, locationAutocomplete = false, tagifyRef = null as any, required = false, whitelist = [] as any[], mode = 'select', disabled = false, loading = false, tags = false, showBorder = true, containerClassName = '', isTextArea = false, maxLength = Number.MAX_SAFE_INTEGER, helpTextTop = \"\", helpTextLeft = \"\", helpTextRight = \"\", hasAddons = false, addon = <></> }) {\n    const inputRef = useRef<HTMLInputElement>(null)\n    const loadingGoogleMaps = useLoadGoogleMaps()\n    let listener: google.maps.MapsEventListener\n    let autocomplete: google.maps.places.Autocomplete\n\n    useEffect(() => {\n\n        if (inputRef.current && locationAutocomplete && !loadingGoogleMaps) {\n            autocomplete = new google.maps.places.Autocomplete(inputRef.current, {\n                fields: ['formatted_address', 'geometry', 'place_id']\n            })\n\n            listener = autocomplete.addListener('place_changed', () => {\n                const place = autocomplete.getPlace()\n                const data = {\n                    address: place.formatted_address,\n                    coords: {\n                        longitude: place.geometry?.location?.lng(),\n                        latitude: place.geometry?.location?.lat(),\n                    },\n                    id: place.place_id,\n                    place_id: place.place_id\n                }\n                onChange(data)\n            })\n        }\n\n        return () => {\n            listener?.remove()\n            autocomplete?.unbindAll()\n        }\n    }, [loadingGoogleMaps, locationAutocomplete])\n\n    useEffect(() => {\n        if (!locationAutocomplete && inputRef.current && google) {\n            listener?.remove()\n            google.maps?.event?.clearInstanceListeners(inputRef.current)\n        }\n    }, [locationAutocomplete])\n\n    return (\n        <div className={`${containerClassName} ${showBorder ? 'job-form-field' : ''} field has-text-left`}>\n            <label className='label is-flex' style={{ justifyContent: 'space-between', alignItems: 'center' }}><span>{label}</span> <span className='has-text-right has-text-weight-normal is-size-7'>{helpTextTop}</span></label>\n            {!hasAddons ?\n                <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\n                    {isTextArea ?\n                        tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode: null,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                inputMode='textarea'\n                                className={`${className}`}\n                                loading={loading}\n                                maxLength={maxLength}\n                                required={required}\n                                disabled={disabled}\n                                onChange={e => (onChange(e.target.value))}\n                            />\n                            :\n                            <textarea required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} className={`${className} textarea`} maxLength={maxLength} placeholder={placeholder} />\n                        :\n                        tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    },\n                                    maxLength\n                                }}\n                                readOnly={readOnly}\n                                required={required}\n                                className={`${className} input`}\n                                loading={loading}\n                                maxLength={maxLength}\n                                disabled={disabled}\n                                onChange={e => (e.persist(), onChange(e.target.value))}\n                            />\n                            :\n                            locationAutocomplete ?\n                                <input ref={inputRef} key={'autocomplete'} required={required} disabled={disabled} value={undefined} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} />\n                                :\n                                <input ref={inputRef} key={'nonutocomplete'} required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} />\n                    }\n                    {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\n                </div>\n                :\n                <div className={`${hasAddons ? 'has-addons' : ''} field`}>\n                    <div className={`control ${icon ? 'has-icons-left' : ''} is-expanded`}>\n                        {tags ?\n                            <Tags\n                                tagifyRef={tagifyRef}\n                                value={value}\n                                settings={{\n                                    placeholder,\n                                    whitelist,\n                                    mode,\n                                    trim: true,\n                                    autoComplete: {\n                                        enabled: true,\n                                        rightKey: true\n                                    }\n                                }}\n                                readOnly={readOnly}\n                                required={required}\n                                className={`${className} input`}\n                                disabled={disabled}\n                                loading={loading}\n                                maxLength={maxLength}\n                                onChange={e => (e.persist(), onChange(e.target.value))}\n                            />\n                            :\n                            locationAutocomplete ?\n                                <input ref={inputRef} key='autocomplete-2' required={required} disabled={disabled} value={undefined} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} style={{ borderRight: 0 }} />\n                                :\n                                <input ref={inputRef} key='non-autocomplete-2' required={required} disabled={disabled} value={value} onChange={(e) => onChange(e.target.value)} maxLength={maxLength} className={`${className} input`} type={type} placeholder={placeholder} style={{ borderRight: 0 }} />\n                        }\n                        {icon ? <span className='icon is-small is-left'>{icon}</span> : null}\n                    </div>\n                    {addon}\n                </div>\n            }\n            <div className='help'>\n                <div className='container'>\n                    <div className='columns'>\n                        {helpTextLeft ? <p className='column has-text-left has-text-centered-touch'>{helpTextLeft} </p> : null}\n                        {helpTextRight ? <p className='column has-text-right has-text-centered-touch'>{helpTextRight} </p> : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport function FileInput({ disabled, value, onChange, onRemovePhoto }) {\n    const ref = useRef<HTMLInputElement>(null)\n\n    return (\n        <div className='field job-form-field has-text-left my-4'>\n            <label className='label is-flex' style={{ justifyContent: 'space-between', alignItems: 'center' }}><span>Job Photos</span> <span className='has-text-right has-text-weight-normal is-size-7'>Add photos to help describe this job</span></label>\n            <div className='control is-expanded'>\n                <div className='file is-flex is-centered is-normal'>\n                    <label className='file-label is-flex-grow-1'>\n                        <input onChange={(el) => {\n                            if (el.target.files) {\n                                const files: File[] = []\n                                for (let i = 0; i < el.target.files?.length; i++) {\n                                    files.push(el.target.files[i])\n                                }\n                                if (files.length > 0) {\n                                    onChange(files)\n                                }\n                            }\n                        }} className='file-input' multiple ref={ref} disabled={disabled} type='file' accept='image/*' />\n                        <span className='file-cta is-flex is-flex-centered' style={{ width: '100%' }}>\n                            <span className='file-icon'>\n                                <FaUpload />\n                            </span>\n                            <span className='file-label'>\n                                SELECT PHOTOS\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                {value && value.length > 0 ?\n                    <div className='field is-grouped is-grouped-multiline'>\n                        {value.map((file: File, index) =>\n                            <div key={`${index}-${file.name}`} className='control mr-2 my-2 '>\n                                <div className='tags has-addons'>\n                                    <span key={`${file.name}-${file.size}-${index}`} className='tag is-dark'>{file.name}</span>\n                                    <button onClick={() => { onRemovePhoto(index) }} className='tag is-delete'></button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    : null}\n            </div>\n        </div>\n    )\n}\n\nexport function CreateJob({ onClose, show, onComplete }) {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        loading: false,\n        tasks: '',\n        type: '',\n        title: '',\n        description: '',\n        address: '',\n        requiredPersons: '',\n        price: '',\n        loadingTypes: true,\n        fetchingLocation: false,\n        manualAddress: false,\n        location: null as any,\n    })\n    const [photos, setPhotos] = useState([] as File[])\n    const { addToast } = useToasts()\n    const types = useMemo(() => {\n        return {\n            jobTypes: new Array<string>(),\n            location: [],\n        }\n    }, [])\n    const tagifyRef = createRef(), tagifyRef2 = createRef()\n\n\n    // const _search = debounce(async (ctx, cb) => {\n    //     try {\n    //         const jobTypes = types.allJobTypes.filter(type=>type)\n    //         return cb(null, jobTypes)\n    //     } catch (e) {\n    //         cb(e, null)\n    //     }\n    // }, 500)\n\n    useEffect(() => {\n        new Promise(async () => {\n            try {\n                types.jobTypes = await Job.getJobTypes(ctx)\n                const tagify: any = tagifyRef.current\n                console.log(tagifyRef)\n                if (tagify) {\n                    tagify.settings.whitelist.length = 0; // reset current whitelist\n                    tagify.loading(true).dropdown.hide.call(tagify)\n                    tagify.settings.whitelist.push(...types.jobTypes, ...tagify.value)\n                    tagify.loading(false).dropdown.hide.call(tagify, tagify.value);\n\n                    (tagifyRef.current as any).settings.whitelist = types.jobTypes\n                }\n            } catch (e) {\n                console.log(e)\n                addToast('Failed to load job types!', { appearance: 'error' })\n            }\n        })\n    }, [])\n\n    return (\n        <form className={`modal ${show ? 'is-active' : ''}`} onSubmit={async (e) => {\n            e.stopPropagation()\n            e.preventDefault()\n            setState({ ...state, loading: true })\n            try {\n                const job_type = JSON.parse(state.type)[0]?.value\n                console.log(job_type, state.type)\n                const newJob: any = {\n                    date_created: firebase.firestore.FieldValue.serverTimestamp(),\n                    job_title: state.title,\n                    job_type,\n                    posted_by: ctx.user?.id,\n                    salary: parseInt(state.price, 10),\n                    required_count: parseInt(state.requiredPersons, 10),\n                    wage: 'deployment',\n                    status: 'available',\n                    tasks: JSON.parse(state.tasks).map(v => ({ id: v4(), text: v.value })),\n                    location: state.location ? {\n                        id: state.location.place_id,\n                        place_id: state.location.place_id,\n                        address: state.location.address,\n                        coords: {\n                            latitude: state.location.coords.latitude || null,\n                            longitude: state.location.coords.longitude || null,\n                            accuracy: state.location.coords.accuracy || null,\n                            altitude: state.location.coords.altitude || null,\n                            heading: state.location.coords.heading || null,\n                            altitudeAccuracy: state.location.coords.altitudeAccuracy || null,\n                            speed: state.location.coords.speed || null,\n                        }, timestamp: state.location.timestamp || Date.now()\n                    } : undefined,\n                    job_description: state.description\n                }\n                if (state.manualAddress && !state.address) {\n                    throw new Error('You must provide your address manually!')\n                } else if (state.manualAddress) {\n                    newJob.location.address = state.address\n                }\n\n                console.log(newJob)\n\n                if (newJob.job_type && !validator.isEmpty(newJob.job_type) && !types.jobTypes.find(type => type === newJob.job_type)) {\n                    // Job type is new. \n                    throw new Error('Invalid job type!')\n                }\n\n                await Job.addNewJob(ctx, newJob, photos)\n                setState({ ...state, loading: false })\n                addToast(\"Successfully added job!\", { appearance: 'success' })\n                onComplete()\n            } catch (e) {\n                console.log(e);\n                setState({ ...state, loading: false })\n                addToast(e.message || \"Failed to add job!\", { appearance: 'error' })\n            }\n        }}>\n            <div className='modal-background'></div>\n            <div className='modal-card'>\n                <header className='modal-card-head'>\n                    <div className='modal-card-title is-mobile is-vcentered columns'>\n                        <div className='column has-text-left'>\n                            <button className='button' onClick={onClose}><span className='icon'><FaChevronLeft /></span><span className='is-hidden-mobile'> View Current Jobs</span></button>\n                        </div>\n                        <div className='column has-text-left-mobile is-10-mobile'>\n                            <span>New Job Listing</span>\n                        </div>\n                        <a className='column is-hidden-mobile'></a>\n                    </div>\n                </header>\n                <div className='modal-card-body px-0'>\n                    <div className='container'>\n                        <div className='level px-4 pb-4' style={{ borderBottom: 'solid 1px #1112' }}>\n                            <p className='level-item has-text-left is-block is-size-4 has-text-centered-touch'>Job Details</p>\n                            <p className='level-item has-text-right is-block has-text-grey-light has-text-centered-touch'>All fields are required to be filled out</p>\n                        </div>\n                        <div className='container is-fluid pb-4 px-0'>\n                            <div className='columns mx-0 px-4'>\n                                <div className='column is-6'>\n                                    <FormField required disabled={state.loading} maxLength={types.jobTypes.length} value={state.type} tagifyRef={tagifyRef} tags whitelist={types.jobTypes} onChange={(type) => { setState((state) => ({ ...state, type })) }} className='' containerClassName='mb-4' label=\"Job Type\" placeholder='Begin typing a job type' type='text' icon={<FaSearch />} helpTextLeft='Search and select a job type to improve search results when finding a contractor' />\n                                    <FormField required disabled={state.loading} value={state.title} onChange={(title) => setState({ ...state, title })} className='' containerClassName='my-4' label=\"Title\" placeholder='Provide a title for the job' type='text' icon={null} helpTextLeft='Will be seen by contractors in search result and as an active status' helpTextRight='Maximum 30 characters' maxLength={30} />\n                                    <FormField required disabled={state.loading} value={state.description} onChange={(description) => setState({ ...state, description })} className='' containerClassName='my-4' label=\"Description\" isTextArea placeholder='Provide a description of the job' type='text' icon={null} helpTextLeft='Give a short description to improve finding a contractor that fits the job' helpTextRight='Maximum 80 characters' maxLength={80} />\n                                    <FormField locationAutocomplete={!state.manualAddress} required={!state.manualAddress} disabled={state.loading || state.fetchingLocation} value={state.address} onChange={(e) => {\n                                        if (state.manualAddress) {\n                                            return setState({ ...state, address: e })\n                                        }\n                                        const { address, coords, place_id } = e\n                                        setState((state) => ({\n                                            ...state,\n                                            location: {\n                                                address,\n                                                place_id,\n                                                id: place_id,\n                                                coords\n                                            },\n                                        }))\n                                    }} className='' containerClassName='my-4' label=\"Location Address\" placeholder='Begin typing the first line of the address' type='text' icon={<FaMapMarkerAlt />}\n                                        hasAddons addon={(\n                                            <div className='control'>\n                                                <button disabled={state.loading || state.fetchingLocation} className={`button ${state.fetchingLocation ? 'is-loading' : ''} ${state.manualAddress ? 'is-info has-text-white' : ''}`} onClick={async () => {\n                                                    const manualAddress = !state.manualAddress\n                                                    if (manualAddress) {\n                                                        // If manual address is true, fetch the current location\n                                                        setState({ ...state, fetchingLocation: true })\n                                                        try {\n                                                            setState({ ...state, location: await getCurrentLocation() })\n                                                            addToast(\"Using your current location!\", { appearance: 'success' })\n                                                            setState((state) => ({ ...state, address: '', manualAddress, fetchingLocation: false }))\n                                                        } catch (e) {\n                                                            console.log(e);\n                                                            setState((state) => ({ ...state, fetchingLocation: false }))\n                                                            addToast(e.message || \"Failed to set location manually!\", { appearance: 'error' })\n                                                        }\n                                                    } else {\n                                                        setState((state) => ({ ...state, location: null, manualAddress }))\n                                                    }\n                                                }} type='button' style={{ color: state.manualAddress ? 'unset' : 'black', borderLeft: 0, zIndex: 4 }}><span className='is-size-7'>{state.manualAddress ? 'using current location' : 'or use current location'}</span></button>\n                                            </div>\n                                        )}\n                                    />\n                                </div>\n                                <div className='column is-6'>\n                                    <FormField required disabled={state.loading} value={state.requiredPersons} onChange={(requiredPersons) => setState({ ...state, requiredPersons })} hasAddons className='' containerClassName='mb-4' label=\"How many persons are needed for the job\"\n                                        placeholder='How many persons are needed for the job'\n                                        type='number' helpTextRight='e.g. 10 persons maximum per job'\n                                        icon={null}\n                                        addon={(\n                                            <div className='control'>\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Persons</button>\n                                            </div>\n                                        )}\n                                    />\n                                    <FormField required disabled={state.loading} value={state.price} onChange={(price) => setState({ ...state, price })} hasAddons className='' containerClassName='my-4' label=\"Pay\"\n                                        placeholder='Provide an amount'\n                                        type='number' helpTextLeft='Will be seen in search results. Cannot be adjusted once the listing is pending or active'\n                                        icon={<FaDollarSign />}\n                                        addon={(\n                                            <div className='control'>\n                                                <button className='button' disabled style={{ color: 'black', borderLeft: 0 }}>Per Deployment</button>\n                                            </div>\n                                        )}\n                                    />\n                                    <FormField required disabled={state.loading} value={state.tasks} tags onChange={(tasks) => setState((state) => ({ ...state, tasks }))} isTextArea className='' containerClassName='my-4' label=\"Tasks\" placeholder='Add a task' type='text' icon={null} helpTextTop='Provide each task required to be completed for this listing' helpTextRight='Separate each task with a comma (,)' />\n\n                                    <FileInput disabled={state.loading} value={photos} onRemovePhoto={(i) => { setPhotos(photos.filter((_, index) => index !== i)) }} onChange={(photos) => setPhotos(photos)} />\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <footer className='modal-card-foot is-flex-centered'>\n                    <button disabled={state.loading} className='button' onClick={onClose}>Cancel</button>\n                    <button disabled={state.loading} className={`button is-info ${state.loading ? 'is-loading' : ''}`} type='submit'>Confirm</button>\n                </footer>\n            </div>\n        </form>\n    )\n}","import React, { useCallback, useState, useEffect, memo } from 'react';\nimport { BsPencilSquare } from \"react-icons/bs\";\nimport { FaSearch } from 'react-icons/fa';\nimport { NavLink, Route } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { IJob } from '../lib/job';\nimport links from '../lib/links';\nimport { JobItem } from './job';\nimport { Empty, Loading } from './util';\nimport { useDebouncedCallback } from \"use-debounce\";\n\nexport interface IJobListProps {\n    className\n    activeJobs: IJob[]\n    inactiveJobs: IJob[]\n    onCreateNew: any\n    isActive: boolean\n}\n\nexport const JobSideList = ({ className, activeJobs, isActive, inactiveJobs, onCreateNew }) => {\n    const [activeSearchData, setActiveSearchData] = useState<IJob[] | null>(null)\n    const [inactiveSearchData, setInactiveSearchData] = useState<IJob[] | null>(null)\n    const [searchText, setSearchText] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n\n    const searchAlg = useCallback((query: string, jobs: IJob[], callback: (err?: Error, job?: IJob[]) => void) => {\n        if (!query || jobs?.length <= 0) {\n            return jobs\n        }\n        const regexp = new RegExp(query, 'i')\n\n        const result = jobs.filter(job => {\n            return job.job_description?.search(regexp) >= 0 || job.job_title?.search(regexp) >= 0 || job.location_address?.search(regexp) >= 0 || job.job_type?.search(regexp) >= 0\n        })\n        callback(undefined, result)\n    }, [activeJobs, inactiveJobs, searchText])\n\n    const triggerSearch = useCallback(async (search) => {\n        setIsLoading(true)\n        try {\n            if (isActive) {\n                if (activeJobs.length < 1) {\n                    throw new Error('There is no active job to search')\n                }\n                setActiveSearchData(await new Promise<IJob[]>((res, rej) => {\n                    searchAlg(search, activeJobs, ((err, result) => {\n                        if (err) {\n                            rej(err)\n                        } else {\n                            if (!result || result.length < 1) {\n                                rej(new Error('No data'))\n                            } else {\n                                setIsLoading(false)\n                                res(result)\n                            }\n                        }\n                    }))\n                }))\n            } else {\n                if (inactiveJobs.length < 1) {\n                    throw new Error('There is no inactive job to search')\n                }\n                setInactiveSearchData(await (new Promise<IJob[]>((res, rej) => {\n                    searchAlg(search, inactiveJobs, ((err, result) => {\n                        if (err) {\n                            rej(err)\n                        } else {\n                            if (!result || result.length < 1) {\n                                rej(new Error('No data'))\n                            } else {\n                                setIsLoading(false)\n                                res(result)\n                            }\n                        }\n\n                    }))\n                })))\n            }\n        } catch (e) {\n            console.log(e)\n            setActiveSearchData([])\n            setInactiveSearchData([])\n            setIsLoading(false)\n        }\n    }, [activeJobs, inactiveJobs])\n\n    const search = useDebouncedCallback((() => {\n        // e.stopPropagation()\n        // e.preventDefault()\n\n        const search = searchText.trim()\n        if (!search) {\n            setActiveSearchData(null)\n            setInactiveSearchData(null)\n        }\n        if (search) {\n            triggerSearch(search)\n        }\n    }), 800)\n\n    useEffect(() => {\n        search()\n    }, [searchText])\n\n    return (\n        <div className={`${className} panel job-panel has-background-white-ter is-flex is-size-7`}>\n            <div className='panel-heading is-flex is-vcentered pb-4'>\n                <p className='has-text-left is-size-6'>Job Listings</p>\n                <a className='button is-small is-rounded is-size-7' onClick={onCreateNew}><BsPencilSquare /></a>\n            </div>\n            <div className='panel-block'>\n                <form onSubmit={search} className='field has-addons' style={{ flex: 1 }}>\n                    <div className={`control is-expanded has-icons-left`}>\n                        <input style={{ borderRight: 0 }} className='input is-rounded' value={searchText} onChange={(e => setSearchText(e.target.value))} type='search' placeholder='Search Jobs...' />\n                        <span className='icon is-left'><FaSearch /></span>\n                    </div>\n                    {/* <div className='control'>\n                        <button style={{ borderLeft: 0 }} className='button is-rounded' onClick={() => window.alert(\"not ready yet!\")} >\n                            <span className='icon is-right'><GoSettings /></span>\n                        </button>\n                    </div> */}\n                </form>\n            </div>\n            <div className='panel-tabs'>\n                <NavLink to={`${links.activeJobs}`} activeClassName='is-active'>Active</NavLink>\n                <NavLink to={`${links.inactiveJobs}`} activeClassName='is-active'>Inactive</NavLink>\n            </div>\n            <div className='has-background-white-ter' style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n\n                <Route path={`${links.activeJobs}`} render={() => {\n                    if (isLoading) {\n                        return <div key='active-loader' className='px-6 my-6 is-flex'><progress style={{ height: '0.4rem' }} className=\"progress is-small my-6\" max=\"100\">loading</progress></div>\n                    } else if (searchText && activeSearchData && activeSearchData.length < 1) {\n                        return <Empty key='active-empty' className='my-6' style={{ backgroundColor: 'transparent' }} text={'Search did not return any job'} />\n                    } else {\n                        return (searchText && activeSearchData ? activeSearchData : activeJobs).map(j => <JobItem key={j.id} job={j} to={`${links.activeJobs}/${j.id}`} />)\n                    }\n                }} />\n                <Route path={`${links.inactiveJobs}`}\n                    render={() => {\n                        if (isLoading) {\n                            return <div className='px-6 my-6 is-flex'><progress style={{ height: '0.4rem' }} className=\"progress is-small my-6\" max=\"100\">loading</progress></div>\n                        } else if (searchText && inactiveSearchData && inactiveSearchData.length < 1) {\n                            return <Empty className='my-6' style={{ backgroundColor: 'transparent' }} text={'Search did not match any job'} />\n                        } else {\n                            return (searchText && inactiveSearchData ? inactiveSearchData : inactiveJobs).map(j => <JobItem key={j.id} job={j} to={`${links.inactiveJobs}/${j.id}`} />)\n                        }\n                    }} />\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState, useContext } from 'react';\nimport { useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { JobDetail } from '../components/job';\nimport { CreateJob } from '../components/jobcreation';\nimport { JobSideList } from \"../components/JobSideList\";\nimport { useEscapeHandler } from \"../components/util\";\nimport { IJob, Job } from '../lib/job';\nimport links from '../lib/links';\nimport { DUMMY_USER, User } from '../lib/user';\nimport { APPLICATION_CONTEXT } from '../lib';\n\nexport function Jobs() {\n    const ctx = useContext(APPLICATION_CONTEXT);\n    const [state, setState] = useState({ loading: false, showModal: false, selected: null as null | IJob })\n    const [active, setActive] = useState([] as IJob[])\n    const [inactive, setInactive] = useState([] as IJob[])\n    const { addToast } = useToasts()\n    const location = useLocation()\n\n    const dismissModal = () => {\n        setState({ ...state, showModal: false })\n        const containers = window.document.getElementsByClassName('pac-container')\n        for (let i; i < containers.length; i++) {\n            containers.item(i)?.remove()\n        }\n    }\n\n    const removeEscapeHandler = useEscapeHandler(dismissModal)\n\n    useEffect(() => {\n        return removeEscapeHandler()\n    }, [])\n\n    useEffect(() => {\n        setState({ ...state, loading: true });\n        const unsubscribe = Job.listenForActiveAndPendingJobs(ctx, async (err, docs: IJob[]) => {\n            if (err) {\n                setState({ ...state, loading: false });\n                return addToast(err.message || 'Failed to get jobs!');\n            }\n            docs = await Promise.all(\n                docs.map(async (v) => {\n                    if (v.status !== 'available' && v.executed_by) {\n                        v.user = await User.getExternalUser(ctx, v.executed_by);\n                    }\n                    return v;\n                })\n            );\n            setState({ ...state, loading: false });\n            setActive(docs)\n        })\n\n        Job.getInactiveJobs(ctx).then(async (jobs) => await jobs.map(async (v: IJob) => {\n            v.user = await User.getExternalUser(ctx, v.executed_by);\n            return v;\n        })).then(jobs => {\n            setInactive(jobs)\n        }).catch(e => {\n            console.log(e)\n            addToast(e.message || \"Failed to get inactive jobs\", {\n                appearance: 'error'\n            })\n        })\n\n        return unsubscribe;\n    }, []);\n\n    const { id } = useParams()\n    const activeMatch = useRouteMatch({\n        path: links._jobItem.active,\n        strict: true,\n        exact: true\n    })\n    const inactiveMatch = useRouteMatch({\n        path: links._jobItem.inactive\n    })\n\n    useEffect(() => {\n        if (id) {\n            if (activeMatch) {\n                const selected = active.find(v => v.id === id)\n                setState({ ...state, selected: selected || null })\n            } else if (inactiveMatch) {\n                const selected = inactive.find(v => v.id === id)\n                setState({ ...state, selected: selected || null })\n            }\n        }\n    }, [location, active, inactive])\n\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <JobSideList isActive={!!activeMatch} activeJobs={active} inactiveJobs={inactive} onCreateNew={() => setState({ ...state, showModal: true })} className='column is-3 is-12-mobile is-12-touch is-clipped is-fullheight' />\n            <JobDetail onCancel={(job: IJob) => {\n                if (job.status === 'complete') {\n                    setInactive(inactive.filter(v => v.id !== job.id))\n                } else {\n                    setActive(active.filter(v => v.id !== job.id))\n                }\n                setState({ ...state, selected: null })\n            }}\n                job={id ? state.selected : null} className='column is-9 is-12-touch is-12-mobile is-flex' />\n            {state.showModal ?\n                <CreateJob show={state.showModal} onClose={dismissModal} onComplete={() => {\n                    dismissModal()\n                }} />\n                : null}\n        </div>\n    )\n}","import React, { useCallback, useContext, useState } from 'react';\nimport { FaAngleDoubleRight, FaChevronLeft, FaEnvelope, FaEye, FaEyeSlash, FaKey, FaPhoneAlt, FaSignInAlt, FaSms, FaUser, FaUserPlus } from 'react-icons/fa';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\nimport links from '../lib/links';\nimport logo from \"../logo.svg\";\n\nexport interface IRegister {\n    first_name: string,\n    last_name: string,\n    password: string,\n    password_verify: string,\n    email: string,\n    phone_number: string,\n}\n\nexport interface ILogin {\n    code: string,\n    phone_number: string,\n    password: string,\n    showPassword: boolean,\n    loading?: boolean\n}\n\nexport function RegisterView() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        showModal: false,\n        showCodeRequest: true,\n        showPassword: false,\n        showPasswordVerify: false,\n        loading: false,\n    })\n    const [formState, setFormState] = useState<IRegister>({\n        email: '',\n        first_name: '',\n        last_name: '',\n        password: '',\n        password_verify: '',\n        phone_number: ''\n    })\n\n    const { addToast } = useToasts()\n    const history = useHistory()\n    const location = useLocation()\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        setState({ ...state, loading: true })\n\n        try {\n            const response = await ctx.addAdmin(formState)\n\n            if (!response || !response.success) {\n                throw new Error('Failed to register user!')\n            }\n            addToast('User registered successfully!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false })\n            history.push(links.login, location.state)\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Failed to add new user!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n        }\n    }, [state, formState])\n\n\n    return (\n        <div className='section'>\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\n                <img src={logo} className='is-rounded' />\n            </figure>\n\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\n\n            <form className='my-2' onSubmit={onSubmit}>\n                <div className='field is-horizontal'>\n                    <div className='field-body'>\n                        <div className='field'>\n                            <div className='control has-icons-left '>\n                                <input autoComplete=\"given-name\" disabled={state.loading} required value={formState.first_name} onChange={(e) => setFormState({ ...formState, first_name: e.target.value })} placeholder='enter firstname' className='input' type='text' />\n                                <span className='icon is-left is-small'><FaUser /></span>\n                            </div>\n                        </div>\n                        <div className='field'>\n                            <div className='control has-icons-left '>\n                                <input autoComplete=\"family-name\" disabled={state.loading} required value={formState.last_name} onChange={(e) => setFormState({ ...formState, last_name: e.target.value })} placeholder='enter lastname' className='input' type='text' />\n                                <span className='icon is-left is-small'><FaUser /></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='field'>\n                    <div className='control has-icons-left '>\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.email} onChange={(e) => setFormState({ ...formState, email: e.target.value })} placeholder='enter your email address' className='input' type='email' />\n                        <span className='icon is-left is-small'><FaEnvelope /></span>\n                    </div>\n                </div>\n\n                <div className='field'>\n                    <div className='control has-icons-left '>\n                        <input autoComplete=\"off\" disabled={state.loading} required value={formState.phone_number} onChange={(e) => setFormState({ ...formState, phone_number: e.target.value })} placeholder='enter your phone number include the \"+\" sign' className='input' type='tel' />\n                        <span className='icon is-left is-small'><FaPhoneAlt /></span>\n                    </div>\n                </div>\n\n                <div className='field is-horizontal'>\n                    <div className='field-body'>\n                        <div className='field has-addons'>\n                            <div className='control has-icons-left is-expanded'>\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password} onChange={(e) => setFormState({ ...formState, password: e.target.value })} placeholder='enter your password' className='input' type={state.showPassword ? 'text' : 'password'} />\n                                <span className='icon is-left is-small'><FaKey /></span>\n                            </div>\n                            <div className='control'>\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\n                                </button>\n                            </div>\n                        </div>\n\n                        <div className='field has-addons'>\n                            <div className='control has-icons-left is-expanded'>\n                                <input autoComplete=\"off\" disabled={state.loading} required value={formState.password_verify} onChange={(e) => setFormState({ ...formState, password_verify: e.target.value })} placeholder='re-enter your password' className='input' type={state.showPasswordVerify ? 'text' : 'password'} />\n                                <span className='icon is-left is-small'><FaKey /></span>\n                            </div>\n                            <div className='control'>\n                                <button className='button' type='button' onClick={(e) => setState({ ...state, showPasswordVerify: !state.showPasswordVerify })}>{state.showPasswordVerify ? <FaEyeSlash /> : <FaEye />}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className='field mt-6'>\n                    <div className='control'>\n                        <button disabled={state.loading} className={`button is-rounded is-fullwidth is-uppercase is-success ${state.loading ? 'is-loading' : ''}`} type='submit'>\n                            <FaUserPlus />&nbsp; Register\n                    </button>\n                    </div>\n                </div>\n            </form>\n\n            <div className='section mt-6 is-size-7'>\n                <p>Already have an account?</p>\n                <Link to={links.login}>Click here to login</Link>\n            </div>\n        </div>\n    )\n\n}\n\n\nexport function LoginView() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({\n        showCodeRequest: true,\n        loading: false,\n        phone: ''\n    })\n\n    const { addToast } = useToasts()\n\n\n    /**\n     * Called to verify the user's number and send OTP through specified channel.\n     */\n    const onSubmitCodeRequest = useCallback(async (form: { phone: string, channel: 'sms' | 'call' }) => {\n        setState({ ...state, loading: true })\n\n        try {\n            // Check if number exists in database\n            await ctx.validateNumber(form.phone)\n            // Generate OTP code for provided number\n            const done = await ctx.triggerVerification(form.phone, form?.channel)\n\n            if (!done) {\n                throw new Error('Failed to verify phone number!')\n            }\n\n            addToast('Verification code sent to your phone!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false, phone: form.phone })\n            return true\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Verification failed!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n            return false\n        }\n    }, [state])\n\n    /**\n     * Called to login to application after the OTP has been received and inputted in the form.\n     */\n    const onSubmitVerified = useCallback(async (form: ILogin) => {\n        setState({ ...state, loading: true })\n\n        try {\n            const user = await ctx.login(form.phone_number, form.code, form.password)\n\n            if (!user) {\n                throw new Error('Failed to login!')\n            }\n\n            addToast('Login successful!', {\n                appearance: 'success'\n            })\n            setState({ ...state, loading: false, })\n            return true\n        } catch (e) {\n            console.log(e)\n            addToast(e.message || 'Login failed!', {\n                appearance: 'error'\n            })\n            setState({ ...state, loading: false })\n            return false\n        }\n    }, [state])\n\n\n    return (\n        <div className='section'>\n            <figure className='image is-96x96 is-flex' style={{ margin: 'auto' }}>\n                <img src={logo} className='is-rounded' />\n            </figure>\n\n            <p className='help mb-4 has-text-weight-bold'>Improving the experience of managing temporary services</p>\n\n            {state.showCodeRequest ? (\n                <CodeRequestForm onComplete={() => setState({ ...state, showCodeRequest: false })} loading={state.loading} onSubmit={onSubmitCodeRequest} />\n            ) : (\n                    <LoginForm onCancel={() => setState({ ...state, showCodeRequest: true })} loading={state.loading} phone={state.phone} onSubmit={onSubmitVerified} />\n                )}\n\n            <div className='section mt-6 is-size-7'>\n                <p>Are you a new user?</p>\n                <Link to={links.register}>Request access</Link>\n            </div>\n        </div>\n    )\n}\n\n\nfunction CodeRequestForm({ onSubmit, loading, onComplete }) {\n    const [state, setState] = useState({\n        phone: '',\n        channel: 'sms'\n    })\n    const [viewState, setView] = useState({\n        showOptions: false,\n        hold: false,\n        holdTimer: 0,\n    })\n\n    let intervalID\n\n    const onSubmitForm = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        // Trigger code to be sent. `success` decides if the code was successfully triggered.\n        const success = await onSubmit(state)\n        if (success) {\n            let counter = 59\n\n            clearInterval(intervalID)\n            intervalID = setInterval(() => {\n                if (counter === 0) {\n                    clearInterval(intervalID)\n                    setView({ ...viewState, hold: false, showOptions: true, holdTimer: counter })\n                    return\n                }\n                setView({ ...viewState, hold: true, holdTimer: counter, showOptions: true, })\n                counter--\n            }, 1000)\n        }\n    }, [state, viewState])\n\n    return (\n        <form onSubmit={onSubmitForm}>\n            <div className='field'>\n                <div className='control has-icons-left '>\n                    <input autoComplete=\"off\" disabled={loading || viewState.hold} required value={state.phone} onChange={(e) => setState({ ...state, phone: e.target.value })} placeholder='enter your phone number' className='input is-rounded' type='tel' />\n                    <span className='icon is-left is-small'><FaPhoneAlt /></span>\n                </div>\n\n            </div>\n            <div className='field mt-4'>\n                <div className='control'>\n                    {viewState.showOptions ?\n                        (\n                            <button onClick={onComplete} disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='button'>\n                                <FaAngleDoubleRight />&nbsp; Proceed\n                            </button>\n                        ) : (\n                            <button disabled={loading || viewState.hold} className={`button is-rounded is-uppercase is-info ${loading ? 'is-loading' : ''}`} type='submit'>\n                                {state.channel === 'sms' ? <><FaSms />&nbsp; Send Code</> : <><FaPhoneAlt />&nbsp; Call Me</>}\n                            </button>\n                        )\n                    }\n                </div>\n            </div>\n\n            <div className='field is-size-7'>\n\n                {viewState.showOptions ? (\n                    <>\n                        <p className='help mt-4 mb-2'>Didn't get code? {viewState.hold ? <span className='has-text-danger'>Try again in: {viewState.holdTimer}s</span> : null}</p>\n                        <div className='control buttons has-addons is-centered'>\n                            <button onClick={() => {\n                                setView({ ...viewState, showOptions: false })\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\n                                <span className='is-size-7'>Try Again</span>\n                            </button>\n                            <button onClick={() => {\n                                setState({ ...state, channel: state.channel === 'sms' ? 'call' : 'sms' })\n                                setView({ ...viewState, showOptions: false })\n                            }} disabled={loading || viewState.hold} className={`button has-text-weight-bold is-info is-outlined is-small is-rounded is-uppercase`} type='button'>\n                                <span className='is-size-7'> {state.channel === 'sms' ? \"Use voice\" : \"Use SMS\"}</span>\n                            </button>\n                        </div>\n                    </>\n                ) : null}\n            </div>\n\n        </form>\n    )\n}\n\n\nfunction LoginForm({ phone, loading, onSubmit, onCancel }) {\n    const [state, setState] = useState<ILogin>({\n        code: '',\n        phone_number: phone,\n        password: '',\n        showPassword: false,\n    })\n\n    const onSubmitForm = useCallback(async (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n\n        await onSubmit(state)\n    }, [state])\n\n    return (\n        <form onSubmit={onSubmitForm} >\n            <div className='field'>\n                <div className='control has-icons-left'>\n                    <input autoComplete=\"off\" disabled required value={state.phone_number} placeholder='enter your phone number' className='input' type='tel' />\n                    <span className='icon is-left is-small'><FaUser /></span>\n                </div>\n            </div>\n            <div className='field'>\n                <div className='control has-icons-left'>\n                    <input autoComplete=\"off\" pattern={'/.{4}/'} max={9999} maxLength={4} minLength={4} disabled={state.loading} required value={state.code} onChange={(e) => setState({ ...state, code: e.target.value })} placeholder='enter 4 digits code' className='input' type='number' />\n                    <span className='icon is-left is-small'><RiLockPasswordLine /></span>\n                </div>\n            </div>\n            <div className='field has-addons'>\n                <div className='control has-icons-left is-expanded'>\n                    <input autoComplete=\"off\" disabled={state.loading} required value={state.password} onChange={(e) => setState({ ...state, password: e.target.value })} placeholder='enter your password' className='input' type={state.showPassword ? 'text' : 'password'} />\n                    <span className='icon is-left is-small'><FaKey /></span>\n                </div>\n                <div className='control'>\n                    <button className='button' type='button' onClick={(e) => setState({ ...state, showPassword: !state.showPassword })}>{state.showPassword ? <FaEyeSlash /> : <FaEye />}\n                    </button>\n                </div>\n            </div>\n            <div className='field mt-6'>\n                <div className='control buttons is-centered'>\n                    <button onClick={onCancel} disabled={loading} className={`button is-rounded is-uppercase is-dark is-outlined`} type='button'>\n                        <FaChevronLeft />&nbsp; Back\n                    </button>\n                    <button disabled={loading} className={`button is-rounded is-uppercase is-success ${loading ? 'is-loading' : ''}`} type='submit'>\n                        <FaSignInAlt />&nbsp; Login\n                    </button>\n                </div>\n            </div>\n        </form>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { LoginView } from '../components/auth';\nimport { AuthHandler } from '../components/guard';\nimport { VIEW_CONTEXT } from '../lib';\n\nexport function Login() {\n    const viewCTX = useContext(VIEW_CONTEXT)\n\n    useEffect(() => {\n        viewCTX.showToolbar(false)\n        viewCTX.showFooter(false)\n\n        return () => {\n            viewCTX.showToolbar(true)\n            viewCTX.showFooter(true)\n        }\n    })\n\n    return (\n        <AuthHandler>\n            <div className='columns is-gapless is-fullheight is-multiline'>\n                <div className='column is-flex-centered is-atleast-fullheight'>\n                    <LoginView />\n                </div>\n                <div className='column is-6 is-hidden-touch is-flex has-background-info' />\n            </div>\n        </AuthHandler>\n    )\n}","import React, { useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from '../lib';\n\nexport function Logout() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const viewCTX = useContext(VIEW_CONTEXT)\n\n    useEffect(() => {\n        viewCTX.setAppReady(false)\n        viewCTX.showToolbar(false)\n        ctx.logout()\n\n        return () => {\n            viewCTX.showToolbar(true)\n            viewCTX.setAppReady(true)\n        }\n    }, [])\n\n    if (!viewCTX.signedIn) {\n        return <Redirect to={{ pathname: '/' }} />\n    }\n\n\n\n    return (\n        viewCTX.signedIn ? <></> : <Redirect to={{ pathname: '/' }} />\n    )\n}","import moment from \"moment\";\nimport React from 'react';\nimport { BsPencilSquare } from 'react-icons/bs';\nimport { CgMoreAlt } from 'react-icons/cg';\nimport { FaSearch, FaComments } from 'react-icons/fa';\nimport { GoSettings } from 'react-icons/go';\nimport { User, DUMMY_USER } from '../lib/user';\nimport { NavLink } from \"react-router-dom\";\n\n\nexport function MessageListItem({ message }: { message: IMessage }) {\n    const time = moment.unix(message.timestamp / 1000)\n    return (\n        <NavLink activeClassName=\"is-active\" to={'./'} className={`message-item mb-8 is-block card is-shadowless has-background-white-ter`}>\n            <div className='card-content'>\n                <div className='container is-paddingless'>\n                    <div className='columns'>\n                        <div className='column is-narrow is-flex' style={{ justifyContent: 'center' }}>\n                            <figure className='image is-flex is-48x48'>\n                                <img className='is-rounded' src={message.author.profileImageURL} />\n                            </figure>\n                        </div>\n                        <div className='column'>\n                            <div className='columns mb-0 is-mobile name-bar'>\n                                <div className='has-text-left column is-narrow is-size-5 has-text-weight-medium'>\n                                    <p>{`${message.author.firstName} ${message.author.lastName}`}</p>\n                                </div>\n                                <div className='has-text-right column'>\n                                    <p>{time.calendar({sameElse:'DD/MMM/YYYY'})}</p>\n                                </div>\n                            </div>\n                            <div className='content has-text-left'>\n                                <p>{message.content}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport function MessageList({ onCreateNew = () => { }, className = '' }) {\n    return (\n        <div className={`${className} panel job-panel has-background-white-ter is-flex`}>\n            <div className='panel-heading is-flex is-vcentered'>\n                <p className='has-text-left'>Recent Messages</p>\n                <div className='field is-grouped is-grouped-right'>\n                    <button className='button is-rounded' onClick={onCreateNew}><BsPencilSquare /></button>\n                    <button className='button is-rounded' onClick={onCreateNew}><CgMoreAlt /></button>\n                </div>\n            </div>\n            <div className='panel-block'>\n                <div className='field has-addons' style={{ flex: 1 }}>\n                    <div className='control is-expanded has-icons-left'>\n                        <input style={{ borderRight: 0 }} className='input is-rounded' type='search' placeholder='Search Messages...' />\n                        <span className='icon is-left'><FaSearch /></span>\n                    </div>\n                    <div className='control'>\n                        <button style={{ borderLeft: 0 }} className='button is-rounded' onClick={() => window.alert(\"not ready yet\")}>\n                            <span className='icon is-right'><GoSettings /></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className='has-background-white-ter' style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n                {\n                    DUMMY_MESSAGES.map(m => <MessageListItem message={m} />)\n                }\n            </div>\n        </div>\n    )\n}\n\nexport function MessageDetail({ message, className, contact }: { contact?: User, className?: string, message: IMessage[] }) {\n    if (!message || !contact) {\n        return (\n            <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n                <div className='card-content is-paddingless is-flex-centered has-text-grey my-6'>\n                    <span className='my-4' ><FaComments fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                    <p className='is-uppercase is-size-6 has-text-weight-bold'>Select a contact to start a chat</p>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div className={`${className} card job-detail`} style={{ flexDirection: 'column' }}>\n            <div className='card-content is-paddingless'>\n                <div className='level py-4 mb-0'>\n                    <div className='level-item is-size-6'></div>\n                    <div className='level-item is-size-4 has-text-weight-bold'>{`${contact.firstName} ${contact.lastName}`}</div>\n                    <div className='level-item is-size-6 pr-4' style={{ justifyContent: 'flex-end' }}>\n                        <button className='button is-rounded'><CgMoreAlt /></button>\n                    </div>\n                </div>\n                <div className='container is-fluid px-0'>\n                    <div className='columns is-fullheight mx-0 is-multiline'>\n                        <div className='column is-8-fullhd is-7-desktop is-12 px-0'>\n\n                        </div>\n                        <div className='column is-4-fullhd is-5-desktop is-12 is-flex'>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport interface IMessage {\n    content\n    author: User\n    timestamp\n    type: 'text' | 'image' | 'attachment'\n    id\n}\n\nexport const DUMMY_MESSAGES: IMessage[] = [\n    {\n        content: 'hello',\n        author: DUMMY_USER,\n        timestamp: Date.now(),\n        type: 'text',\n        id: 'abcdefgh'\n    }\n]","import React from 'react';\nimport { DUMMY_MESSAGES, MessageDetail, MessageList } from '../components/messages';\nimport { DUMMY_USER } from '../lib/user';\n\nexport function Messages() {\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <MessageList onCreateNew={() => { }} className='column is-3 is-12-touch is-clipped is-fullheight' />\n            <MessageDetail message={DUMMY_MESSAGES} contact={DUMMY_USER} className='column is-9 is-12-touch is-flex' />\n        </div>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { FaEnvelope, FaExclamationCircle, FaGraduationCap, FaMapMarkerAlt, FaStar } from 'react-icons/fa';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { Empty } from \"../components/util\";\nimport { APPLICATION_CONTEXT } from '../lib';\nimport { Job } from '../lib/job';\nimport { User } from '../lib/user';\nimport moment from \"moment\";\nimport logo from '../logo.svg'\n\n\n/**\n * Profile component for viewing details of a user's profile. \n */\nexport function Profile() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [user, setUser] = useState<User>()\n    const [loading, setLoading] = useState<boolean>(true)\n    const [comments, setComments] = useState<{ text: string, first_name: string, last_name: string }[]>([])\n    const [loadingComments, setLoadingComments] = useState<boolean>(true)\n    const location = useLocation()\n    const { id } = useParams()\n    const { addToast } = useToasts()\n\n    useEffect(() => {\n        (async () => {\n            try {\n                setLoading(true)\n                const { user } = location.state as { user: User } || { user: null }\n                if (user) {\n                    setUser(user)\n                } else {\n                    if (!id) {\n                        throw new Error('No user found!')\n                    }\n                    const user = await User.getExternalUser(ctx, id)\n                    setUser(user)\n                }\n            } catch (e) {\n                console.log(e)\n                addToast(e.message || 'Failed to load user data!', { appearance: 'error' })\n            } finally {\n                setLoading(false)\n            }\n        })()\n    }, [location])\n\n    useEffect(() => {\n        (async () => {\n            if (!user) {\n                setLoadingComments(false)\n                return\n            }\n            try {\n                setLoadingComments(true)\n                const commentsData = await User.getComments(id)\n                setComments(commentsData)\n            } catch (e) {\n                console.log(e)\n                addToast(e.message || 'Failed to load comments!', { appearance: 'error' })\n            } finally {\n                setLoadingComments(false)\n            }\n        })()\n    }, [user])\n\n    return (\n        <div className='is-1 is-variable px-3 py-3 my-0 is-fullheight is-multiline'>\n            <div className='has-background-link' style={{\n                height: '10em',\n                width: '100%',\n                borderRadius: '1em 1em 0 0',\n                border: 'solid #dadada88 1px',\n                borderBottom: 0\n            }}></div>\n            {loading ?\n                <div className='columns is-flex-centered is-gapless is-clipped' style={{\n                    marginBottom: '0.8em',\n                    borderRadius: '0 0 1em 1em',\n                    backgroundColor: '#fafafa',\n                    border: 'solid #dadada88 1px',\n                    borderTop: 0,\n                    height: '76%',\n                }}>\n                    <div className='column is-4 is-12-mobile'>\n                        <div className='section px-6'>\n                            <progress className=\"progress is-small is-danger\" max=\"100\">loading</progress>\n                        </div>\n                    </div>\n                </div>\n                :\n                !user ?\n                    <Empty className='is-flex is-flex-direction-column is-size-5 is-flex-centered'\n                        icon={<FaExclamationCircle className='has-text-danger is-size-1 mb-4' />}\n                        style={{\n                            marginBottom: '0.8em',\n                            borderRadius: '0 0 1em 1em',\n                            backgroundColor: '#fafafa',\n                            border: 'solid #dadada88 1px',\n                            borderTop: 0,\n                            height: '76%',\n                        }}>\n                        <p className='block has-text-grey is-size-6'>No user found!</p>\n                    </Empty>\n                    :\n                    <div className='columns is-gapless' style={{\n                        marginBottom: '0.8em',\n                        borderRadius: '0 0 1em 1em',\n                        backgroundColor: '#fafafa',\n                        border: 'solid #dadada88 1px',\n                        borderTop: 0,\n                        minHeight: '68%',\n                    }}>\n                        <div className='column is-3 is-flex is-flex-direction-column has-text-left' style={{ alignItems: 'stretch' }}>\n                            <figure className='image is-flex is-128x128' style={{ top: '-5.6em', alignSelf: 'center' }}>\n                                <img className='is-rounded' onError={(img) => img.currentTarget.src = logo} src={Job.getPhotoURL(ctx, user.id)} style={{ background: 'radial-gradient(#fff ,#3273dc 300% 4%)', border: 'solid #8884 0.1px' }} />\n                            </figure>\n                            <div className='is-flex mb-4 is-flex-direction-column px-5' style={{ justifyContent: 'space-between', alignItems: 'stretch', flexGrow: 1, position: 'relative' }}>\n                                <div className='content has-text-left' style={{ position: 'relative', top: '-4em', width: '100%' }}>\n                                    <p className='mb-1 has-text-weight-bold'>{user.firstName} {user.lastName}</p>\n                                    <p className='mb-2 is-inline-flex has-text-grey-light'>\n                                        <span className='is-capitalized mr-2'>{user.occupation}</span>\n                                        <span className='is-inline-flex'>\n                                            <span className='icon has-text-info'><FaStar /></span>\n                                            <span>{user.starRate}</span>\n                                        </span>\n                                    </p>\n                                    <p className='mb-2'>{user.profileBio}</p>\n                                    <p className='mb-1 is-flex has-text-grey' style={{ alignItems: 'center' }}>\n                                        <span className='icon mr-2'><FaMapMarkerAlt /></span>{user.city || <span className='has-text-grey-light is-italic is-size-7'>Not Specified</span>}\n                                    </p>\n                                    <p className='mb-1 is-flex has-text-grey' style={{ alignItems: 'center' }}>\n                                        <span className='icon mr-2'><FaEnvelope /></span>{user.email || <span className='has-text-grey-light is-italic is-size-7'>Not Specified</span>}\n                                    </p>\n                                    <p className='mb-1 is-flex has-text-grey' style={{ alignItems: 'center' }}>\n                                        <span className='icon mr-2 is-size-5'><FaGraduationCap /></span>{user.educationalBackground[0] || <span className='has-text-grey-light is-italic is-size-7'>Not Specified</span>}\n                                    </p>\n                                </div>\n                                <div className='has-text-grey-light is-uppercase has-text-left is-size-7'>Joined {moment(user.dateCreated).calendar({ sameElse: 'DD/MMM/YYYY' })}</div>\n                            </div>\n                        </div>\n                        <div className='column is-5 is-flex is-flex-direction-column has-text-left' style={{ alignItems: 'stretch', border: 'solid #dadada88 1px', }}>\n                            <div className='is-flex is-flex-direction-column' style={{ justifyContent: 'flex-start', alignItems: 'stretch', flexGrow: 1, position: 'relative' }}>\n                                <header className='px-5 py-3 is-size-7 has-text-weight-bold is-uppercase'>Comments</header>\n                                <div className='content has-text-left px-5 py-2 is-size-7 has-background-white' style={{ flexGrow: 1 }}>\n                                    {loadingComments ?\n                                        <div className='section px-6'>\n                                            <progress className=\"progress is-small is-danger\" max=\"100\">loading</progress>\n                                        </div>\n                                        :\n                                        <>\n                                            {comments.length < 1 && <Empty className='mb-4' icon={<FaExclamationCircle className='has-text-warning-dark is-size-2 mb-3' />} style={{ backgroundColor: 'transparent' }} text={`${user.id === ctx.user!.id ? 'You have' : 'User has'} not received any comment yet!`} />}\n                                            {comments.map(comment => <p className='my-3'><span>\"{comment.text}\"</span><span>-{`${comment.first_name} ${comment.last_name}`}</span></p>)}\n                                        </>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        <div className='column is-4 is-flex is-flex-direction-column has-text-left' style={{ alignItems: 'stretch' }}>\n                            <div className='is-flex is-flex-direction-column' style={{ justifyContent: 'flex-start', alignItems: 'stretch', flexGrow: 1, position: 'relative' }}>\n                                <header className='px-5 py-3 is-size-7 has-text-weight-bold is-uppercase'>Skills</header>\n                                <div className='has-text-left px-5 py-2 is-size-7 has-background-white'>\n                                    {user.skills.length < 1 && <Empty className='mb-4' icon={<FaExclamationCircle className='has-text-warning-dark is-size-2 mb-3' />} style={{ backgroundColor: 'transparent' }} text={`${user.id === ctx.user!.id ? 'You have' : 'User has'} not selected any skill yet!`} />}\n                                    {user.skills.map(skill => {\n                                        return <p className='my-3'>- {skill}</p>\n                                    })}\n                                </div>\n                                <header className='px-5 py-3 is-size-7 has-text-weight-bold is-uppercase'>Licenses</header>\n                                <div className='has-text-left px-5 py-2 is-size-7 has-background-white' style={{ flexGrow: 1 }}>\n                                    {user.licenses.length < 1 && <Empty icon={<FaExclamationCircle className='has-text-warning-dark is-size-2 mb-3' />} style={{ backgroundColor: 'transparent' }} text={`${user.id === ctx.user!.id ? 'You have' : 'User has'} not provided any licnese yet!`} />}\n                                    {user.licenses.map(license => {\n                                        return (\n                                            <div className='columnsmy-3 has-text-centered-mobile'>\n                                                <p className='column'>- {license.license_number}</p>\n                                                <p className='column is-3'>Expires {moment(license.expiration_date).calendar({ sameElse: 'DD/MMM/YYYY' })}</p>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            }\n        </div>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { RegisterView } from '../components/auth';\nimport { AuthHandler } from '../components/guard';\nimport { VIEW_CONTEXT } from '../lib';\n\n\nexport function Register() {\n    const viewCTX = useContext(VIEW_CONTEXT)\n    const [state, setState] = useState({ showModal: false })\n    const [formState, setFormState] = useState({\n        first_name: '',\n        last_name: '',\n        password: '',\n        password_verify: '',\n        email: '',\n        phone_number: '',\n        showPassword: false,\n        showPasswordVerify: false\n    })\n\n    useEffect(() => {\n        viewCTX.showToolbar(false)\n        viewCTX.showFooter(false)\n\n        return () => {\n            viewCTX.showFooter(true)\n            viewCTX.showToolbar(true)\n        }\n    })\n\n    return (\n        <AuthHandler>\n            <div className='columns is-gapless is-fullheight is-multiline'>\n                <div className='column is-flex-centered is-atleast-fullheight'>\n                    <RegisterView />\n                </div>\n                <div className='column is-6 is-hidden-touch is-flex has-background-success' />\n            </div>\n        </AuthHandler>\n    )\n}","import { unix } from 'moment';\nimport React, { useContext, useState } from 'react';\nimport { FaApple, FaChevronRight, FaCogs, FaPaypal } from 'react-icons/fa';\nimport { Link, NavLink, Route, Switch } from 'react-router-dom';\nimport { APPLICATION_CONTEXT } from '../lib';\nimport links from '../lib/links';\n\nexport function SettingsDetail({ title, children = <></> }) {\n    return (\n        <div className=\"container is-fluid settings-detail\">\n            <div className='content mb-0 py-4'>\n                <p className='has-text-weight-bold is-size-4 has-text-left has-text-centered-mobile'>{title}</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport function Settings() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n\n\n    return (\n        <div className='columns is-gapless px-4 py-4 is-fullheight is-multiline'>\n            <div className={`box px-0 py-0`} style={{ flexDirection: 'column', flex: 1 }}>\n                <div className='card-content is-paddingless is-atleast-fullheight is-flex' style={{ flexDirection: 'column' }}>\n                    <div className='level py-4 mb-0' style={{ boxShadow: '0 0.125em 0.25em rgba(10, 10, 10, .1)' }}>\n                        <div className='level-left-item is-size-6'>\n                            <p className=\"title is-size-6 has-text-weight-bold pl-4\">Settings</p>\n                        </div>\n                    </div>\n                    <div className='container is-flex is-fluid px-0'>\n                        <div className='columns mx-0 is-multiline' style={{ flexGrow: 1 }}>\n                            <div className='column is-2-fullhd is-3-desktop is-12 px-0'>\n                                <div className='container'>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.loginAndSecurity} exact>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Login and Security</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.paymentMethods}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Payment Methods</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.additionalFeatures}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Additional Features</p>\n                                        </div>\n                                    </NavLink>\n                                    <NavLink className='has-text-black' activeClassName='is-active' to={links.legalDocuments}>\n                                        <div className='py-4 is-size-5 settings-link' >\n                                            <p className='mx-4'>Legal Documents</p>\n                                        </div>\n                                    </NavLink>\n                                </div>\n                            </div>\n                            <div className='column is-10-fullhd is-9-desktop is-12 is-flex px-0'>\n                                <Switch >\n                                    <Route path={links.loginAndSecurity} exact render={() => (\n                                        <LoginAndSecurity />\n                                    )} />\n                                    <Route path={links.paymentMethods} exact render={() => (\n                                        <PaymentMethods />\n                                    )} />\n                                    <Route path={links.legalDocuments} exact render={() => (\n                                        <LegalDocuments />\n                                    )} />\n                                    <Route render={() => (\n                                        <div className=\"container is-fluid is-flex-centered settings-detail py-6\">\n                                            <div className='content has-text-grey'>\n                                                <span className='my-4' ><FaCogs fill='#811' style={{ height: \"8rem\", width: \"8rem\" }} /></span>\n                                                <p className='is-uppercase is-size-6 has-text-weight-bold'>Manage your account</p>\n                                            </div>\n                                        </div>\n                                    )} />\n                                </Switch>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport function LoginAndSecurity() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Login and Security\"} children={(\n            <>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Email Address</p>\n                        <p className='subtitle has-text-grey'>Email address connected to your account</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control`}>\n                            <input className={`input ${state.editEmail ? '' : 'is-static'} has-text-black is-size-5 has-text-right has-text-centered-mobile`} value={state.email} contentEditable={false} disabled={!state.editEmail} onChange={e => setState({ ...state, email: e.target.value })} />\n                        </div>\n                        <div className='field is-grouped is-grouped-right'>\n                            <div className='control'>\n                                <button className='button' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\n                            </div>\n                            {state.editEmail ? (\n                                <div className='control'>\n                                    <button className={`button is-info ${state.isLoadingEmail ? 'is-loading' : ''}`} onClick={() => {\n                                        setState({ ...state, isLoadingEmail: true })\n                                    }}>Change</button>\n                                </div>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Phone Number</p>\n                        <p className='subtitle has-text-grey'>Your phone number provided upon signing-up</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control`}>\n                            <input className={`input is-static has-text-right has-text-black is-size-5 has-text-centered-mobile`} disabled value={ctx.user?.phoneNumber} />\n                        </div>\n                        <p className='subtitle has-text-grey'>Due to restrictions, contact support to modify your phone number</p>\n\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title input is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Password</p>\n                        <p className='subtitle has-text-grey'>Maintain a strong, unique password to protect your account</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className={`control title`}>\n                            <button className='button is-link' onClick={() => setState({ ...state, editEmail: !state.editEmail })}>Change</button>\n                        </div>\n                        <p className='subtitle has-text-grey'>{state.lastPasswordChanged ? `Last modified ${state.lastPasswordChanged.calendar({sameElse:'DD/MMM/YYYY'})}` : \"Never Changed\"}</p>\n\n                    </div>\n                </div>\n            </>\n        )} />\n    )\n}\n\n\nexport function PaymentMethods() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Payment Methods\"} children={(\n            <>\n                <div className='columns is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Preferred Method</p>\n                        <p className='subtitle has-text-grey'>Selected method of payment for jobs</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>{'VI 534***1234 12/22'}</p>\n                        <Link to={`${links.paymentMethods}/change`} >Change</Link>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 is-shadowless px-0' style={{ border: 0 }}>Other Methods</p>\n                    </div>\n                </div>\n                <div className='columns' style={{ borderTop: 0 }}>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className='button is-white is-large'>\n                            <span className='icon'>\n                                <FaApple size={80} />\n                            </span>\n                            <span>Apple Pay</span>\n                            <span className='icon'>\n                                <FaChevronRight size={20} />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='columns'>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <div className='button is-white is-large'>\n                            <span className='icon'>\n                                <FaPaypal size={80} />\n                            </span>\n                            <span>PayPal</span>\n                            <span className='icon'>\n                                <FaChevronRight size={20} />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='columns' style={{ borderBottom: 0 }}>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <Link to={`${links.paymentMethods}/add`}>+ Add a Payment Method</Link>\n                    </div>\n                </div>\n            </>\n        )} />\n    )\n}\n\n\nexport function LegalDocuments() {\n    const ctx = useContext(APPLICATION_CONTEXT)\n    const [state, setState] = useState({\n        email: ctx.user?.email, editEmail: false, isLoadingEmail: false,\n        lastPasswordChanged: ctx.user?.lastPasswordChanged ? unix(ctx.user?.lastPasswordChanged / 1000) : null\n    })\n\n    return (\n        <SettingsDetail title={\"Legal Documents\"} children={(\n            <>\n                <Link to={`${links.legalDocuments}/useragreement`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >User Agreement</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/privacy`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Privacy Policy</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/terms`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Terms of Service</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n                <Link to={`${links.legalDocuments}/cookie`} className='columns is-vcentered is-unselectable'>\n                    <div className='column has-text-left has-text-centered-mobile'>\n                        <p className='title is-size-5 pb-2 px-0' >Cookie Policy</p>\n                    </div>\n                    <div className='column has-text-right has-text-centered-mobile'>\n                        <p className='is-size-5 pb-2 px-0' style={{ border: 0 }}>\n                            <span className='icon'><FaChevronRight /></span>\n                        </p>\n                    </div>\n                </Link>\n            </>\n        )} />\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Footer } from './components/footer';\nimport { AuthGuard } from './components/guard';\nimport Toolbar from './components/toolbar';\nimport { Loading } from './components/util';\nimport { APPLICATION_CONTEXT, VIEW_CONTEXT } from './lib';\nimport './lib/firebase';\nimport links from './lib/links';\nimport { User } from './lib/user';\nimport { Dashboard } from './pages/dashboard';\nimport { Jobs } from './pages/jobs';\nimport { Login } from './pages/login';\nimport { Logout } from './pages/logout';\nimport { Messages } from './pages/messages';\nimport { Profile } from './pages/profile';\nimport { Register } from './pages/register';\nimport { Settings } from './pages/settings';\nimport { NotificationProvider } from './components/notification';\n\nfunction App() {\n  const ctx = useContext(APPLICATION_CONTEXT)\n  const [state, setState] = useState({ ready: false, })\n  const [showFooter, setShowFooter] = useState(true)\n  const [_showToolbar, showToolbar] = useState(true)\n  const [signedIn, setSignedIn] = useState<null | User>(null)\n\n  const viewContext = {\n    signedIn,\n    setSignedIn,\n    setAppReady: (ready) => setState({ ...state, ready }),\n    showToolbar,\n    showFooter: (showFooter) => setShowFooter(showFooter)\n  }\n\n  useEffect(() => {\n    ctx.loginListener = () => {\n      if (ctx.signedIn()) {\n        viewContext.setSignedIn(ctx.user as User)\n      }\n    }\n\n    ctx.logoutListener = () => viewContext.setSignedIn(null)\n\n    ctx.ready.then((ready) => {\n      if (!ready) {\n        return console.log('Failed to start application due to an internal error.', 'Please contact application admin')\n      }\n      setState({ ...state, ready: true })\n    })\n      .catch(e => {\n        console.log(e)\n      })\n  }, [])\n\n  return (\n    <NotificationProvider>\n      <VIEW_CONTEXT.Provider value={viewContext}>\n        {state.ready ?\n          <>\n            {_showToolbar ? <Toolbar /> : null}\n            <div className='App-Body'>\n              <div className='is-fullheight'>\n                <Switch>\n                  <Route component={Login} path={links.login} exact />\n                  <Route component={Register} path={links.register} exact />\n                  <Route component={Logout} path={links.logout} exact />\n\n                  <AuthGuard component={Settings} path={links.settings} />\n                  <AuthGuard render={(props) => {\n                    return <Redirect to={{ pathname: links.activeJobs, state: props.location.state }} />\n                  }} path={links.jobs} exact />\n                  <AuthGuard component={Jobs} path={links._jobItem.active} />\n                  <AuthGuard component={Jobs} path={links._jobItem.inactive} />\n                  <AuthGuard component={Messages} path={links._messages} />\n                  <AuthGuard component={Profile} path={links._profile} />\n                  <AuthGuard component={Dashboard} path={links.dashboard} exact />\n\n                  <Route path={links.home} strict={false} exact={true}>\n                    {ctx.signedIn() && viewContext.signedIn ? <Redirect to={links.dashboard} /> : <Redirect to={links.login} />}\n                  </Route>\n                  <AuthGuard />\n                </Switch>\n              </div>\n            </div>\n            {showFooter ? <Footer /> : null}\n          </> :\n          <Loading />\n        }\n      </VIEW_CONTEXT.Provider>\n    </NotificationProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@yaireo/tagify/dist/tagify.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ToastProvider } from 'react-toast-notifications';\nimport { BrowserRouter } from 'react-router-dom';\nimport { APPLICATION_CONTEXT, DEFAULT_APPLICATION } from \"./lib\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToastProvider autoDismiss={5000} placement='top-center'>\n      <BrowserRouter basename='/contractoradmin'>\n        <APPLICATION_CONTEXT.Provider value={DEFAULT_APPLICATION}>\n          <App />\n        </APPLICATION_CONTEXT.Provider>\n      </BrowserRouter>\n    </ToastProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}